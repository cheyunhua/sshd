{"version":3,"sources":["webpack:///./src/views/Guacamole.vue?fefe","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./src/libs/GuacMouse.js","webpack:///./src/libs/states.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/libs/clipboard.js","webpack:///src/views/Guacamole.vue","webpack:///./src/views/Guacamole.vue?9f81","webpack:///./src/views/Guacamole.vue","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/guacamole-common-js/dist/guacamole-common.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./src/views/Guacamole.vue?3c42","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","ref","staticClass","attrs","staticRenderFns","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","unsupportedIterableToArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","mouse","element","guac_mouse","touchMouseThreshold","scrollThreshold","PIXELS_PER_LINE","PIXELS_PER_PAGE","currentState","Guacamole","Mouse","State","onmousedown","onmouseup","onmousemove","onmouseout","ignore_mouse","scroll_delta","cancelEvent","stopPropagation","preventDefault","returnValue","ignorePendingMouseEvents","mousewheel_handler","delta","deltaY","wheelDeltaY","wheelDelta","deltaMode","detail","up","down","addEventListener","fromClientPosition","clientX","clientY","button","left","middle","right","window","event","target","relatedTarget","toElement","parentNode","CSS3_CURSOR_SUPPORTED","div","document","createElement","style","cursor","setCursor","canvas","x","y","dataURL","toDataURL","Touchpad","Touchscreen","IDLE","CONNECTING","WAITING","CONNECTED","DISCONNECTED","CLIENT_ERROR","TUNNEL_ERROR","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","clipboard","client","getLocalClipboard","data","cache","update","setRemoteClipboard","writer","stream","createClipboardStream","type","StringWriter","sendText","sendEnd","BlobWriter","oncomplete","sendBlob","navigator","readText","text","setLocalClipboard","writeText","onClipboard","mimetype","reader","exec","StringReader","ontext","onend","BlobReader","getBlob","serialize","obj","p","str","push","encodeURIComponent","join","props","demo","connected","display","currentAdjustedHeight","keyboard","lastEvent","connectionState","states","errorMessage","query","token","screen_width","screen_height","computed","wsUrl","new_uri","loc","protocol","host","watch","$notify","title","state","methods","doGuacdConnect","_setScreenSize","startGuacamole","send","copy","cmd","handleMouseState","mouseState","getScale","sendMouseState","scaledMouseState","elm","offsetWidth","height","width","resize","getWidth","getHeight","sendSize","setTimeout","scale","uninstallKeyboard","tunnel","onerror","console","onstatechange","clientState","onsync","onargv","onack","status","isError","onclipboard","getDisplay","displayElm","appendChild","getElement","connect","param","onunload","onclick","focus","onfocus","className","onblur","installKeyboard","onkeydown","onkeyup","beforeUpdate","mounted","component","fails","wellKnownSymbol","V8_VERSION","SPECIES","module","exports","METHOD_NAME","array","foo","Boolean","bind","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","toLength","createProperty","getIteratorMethod","arrayLike","result","O","C","argumentsLength","mapfn","mapping","iteratorMethod","index","toPrimitive","definePropertyModule","createPropertyDescriptor","object","propertyKey","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","reverse","pop","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","anObject","iteratorClose","ENTRIES","$","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","ES3_STRINGS","STRICT_METHOD","proto","forced","separator","checkCorrectnessOfIteration","INCORRECT_ITERATION","stat","argument","ArrayBufferReader","guac_reader","onblob","binary","atob","arrayBuffer","ArrayBuffer","bufferView","Uint8Array","charCodeAt","ondata","ArrayBufferWriter","guac_writer","__send_blob","bytes","byteLength","String","fromCharCode","btoa","blobLength","DEFAULT_BLOB_LENGTH","sendData","offset","subarray","AudioContextFactory","AudioContext","webkitAudioContext","singleton","AudioPlayer","sync","isSupportedType","RawAudioPlayer","getSupportedTypes","getInstance","format","RawAudioFormat","parse","getAudioContext","nextPacketTime","currentTime","MIN_SPLIT_SIZE","maxLatency","SampleArray","bytesPerSample","Int8Array","Int16Array","maxSampleValue","packetQueue","joinAudioPackets","packets","totalLength","packet","joined","set","splitAudioPacket","minValue","Number","MAX_VALUE","optimalSplitLength","samples","Math","floor","channels","minSplitSamples","rate","start","max","totalValue","channel","abs","buffer","pushAudioPacket","shiftAudioPacket","shift","toAudioBuffer","packetTime","audioBuffer","createBuffer","audioData","getChannelData","source","createBufferSource","destination","noteOn","now","min","AudioRecorder","onclose","RawAudioRecorder","recorder","BUFFER_SIZE","LANCZOS_WINDOW_SIZE","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","readSamples","writtenSamples","mediaStream","processor","sinc","piX","PI","sin","lanczos","a","interpolateSample","t","end","sum","toSampleArray","inSamples","expectedWrittenSamples","round","sampleRate","outSamples","streamReceived","createScriptProcessor","onaudioprocess","inputBuffer","createMediaStreamSource","resume","streamDenied","beginAudioCapture","promise","stopAudioCapture","disconnect","tracks","getTracks","code","Status","Code","SUCCESS","RESOURCE_CLOSED","blob_builder","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","blobs","append","Blob","onprogress","sendAck","getLength","guacWriter","arrayBufferWriter","blob","sliceImplementation","webkitSlice","mozSlice","sliceResult","size","FileReader","readNextChunk","chunk","readAsArrayBuffer","onload","Client","guac_client","STATE_IDLE","STATE_CONNECTING","STATE_WAITING","STATE_CONNECTED","STATE_DISCONNECTING","STATE_DISCONNECTED","currentTimestamp","pingInterval","lineCap","0","1","2","lineJoin","Display","layers","audioPlayers","videoPlayers","parsers","streams","objects","stream_indices","IntegerPool","output_streams","setState","isConnected","exportState","callback","layersSnapshot","flush","parseInt","layer","toCanvas","exportLayer","url","z","alpha","matrix","parent","getLayerIndex","importState","dispose","importLayer","getLayer","setChannelMask","Layer","SRC","draw","move","shade","distort","sendMessage","sendKeyEvent","pressed","keysym","moveCursor","buttonMask","createOutputStream","OutputStream","createAudioStream","createFileStream","filename","createPipeStream","createArgumentValueStream","createObjectOutputStream","requestObjectInputStream","message","endStream","free","onname","onaudio","onvideo","onfile","onfilesystem","onpipe","onrequired","getDefaultLayer","createLayer","getParser","parser","Parser","oninstruction","layerPropertyHandlers","setMiterLimit","parseFloat","instructionHandlers","parameters","stream_index","reason","radius","startAngle","endAngle","negative","arc","InputStream","audioPlayer","objectIndex","streamIndex","onbody","channelMask","r","g","b","fillColor","clip","close","srcL","srcX","srcY","srcWidth","srcHeight","dstL","dstX","dstY","cap","thickness","strokeColor","cursorHotspotX","cursorHotspotY","cp1x","cp1y","cp2x","cp2y","curveTo","layer_index","c","d","setTransform","drawStream","srcLayer","fillLayer","lineTo","strokeLayer","showCursor","parent_index","receive","w","h","rect","handler","moveTo","timestamp","function_index","put","transfer","DefaultTransferFunction","transform","onundefine","videoPlayer","VideoPlayer","opcode","clearInterval","setInterval","src","dst","red","green","blue","DataURIReader","uri","getURI","guac_display","displayWidth","displayHeight","displayScale","position","transformOrigin","webkitTransformOrigin","MozTransformOrigin","OTransformOrigin","msTransformOrigin","default_layer","VisibleLayer","bounds","cursorX","cursorY","onresize","oncursor","tasks","frames","__flush_frames","rendered_frames","frame","isReady","splice","Frame","blocked","execute","Task","taskHandler","task","unblock","scheduleTask","getCursorLayer","autosize","hotspotX","hotspotY","srcx","srcy","srcw","srch","shown","removeChild","translate","drawImage","image","drawBlob","createImageBitmap","bitmap","decoded","URL","createObjectURL","revokeObjectURL","Image","play","duration","video","render_callback","ended","dstLayer","transferFunction","mask","limit","WebkitTransform","MozTransform","OTransform","msTransform","flatten","getContext","get_children","children","sort","diff","a_element","b_element","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","draw_layer","initial_alpha","globalAlpha","getCanvas","child","__unique_id","__next_id","top","overflow","__super_resize","parent_element","zIndex","opacity","InputSink","sink","field","outline","border","margin","padding","bottom","background","color","isComposing","click","select","focused","activeElement","body","getBoundingClientRect","guac_stream","guac_pool","pool","next_int","integer","JSONReader","guacReader","stringReader","json","getJSON","JSON","Keyboard","guac_keyboard","guacKeyboardID","_nextID","EVENT_MARKER","quirks","keyupUnreliable","altIsTypableOnly","capsLockKeyupUnreliable","platform","match","KeyEvent","key_event","Date","getTime","defaultPrevented","reliable","getAge","KeydownEvent","keyCode","keyIdentifier","location","keysym_from_key_identifier","keysym_from_keycode","keyupReliable","isPrintable","key_identifier_sane","modifiers","meta","prevent_alt","ctrl","prevent_ctrl","alt","hyper","recentKeysym","KeypressEvent","charCode","keysym_from_charcode","KeyupEvent","eventLog","keycodeKeysyms","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","91","92","93","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","225","keyidentifier_keysym","no_repeat","ModifierState","implicitlyPressed","last_keydown_result","key_repeat_timeout","key_repeat_interval","get_keysym","keysyms","identifier","shifted","typedCharacter","unicodePrefixLocation","indexOf","hex","substring","toUpperCase","toLowerCase","codepoint","isControlCharacter","press","clearTimeout","release","codePointAt","updateModifierState","remoteState","localState","keyEvent","syncModifierStates","fromKeyboardEvent","isStateImplicit","interpret_events","last_event","handled_event","interpret_event","release_simulated_altgr","first","accepted_events","getEventLocation","keyLocation","markEvent","listenTo","which","keydownEvent","keypressEvent","keyupEvent","handleInput","removeEventListener","handleComposition","shiftKey","ctrlKey","altKey","metaKey","getModifierState","CANVAS_SIZE_FACTOR","save","empty","pathClosed","stackSize","compositeOperation","newWidth","newHeight","canvasWidth","ceil","canvasHeight","oldData","oldDataContext","oldCompositeOperation","globalCompositeOperation","fitRect","resizeWidth","resizeHeight","opBoundX","opBoundY","srcCanvas","getImageData","src_pixel","Pixel","dst_pixel","putImageData","beginPath","bezierCurveTo","closePath","lineWidth","strokeStyle","stroke","fillStyle","fill","createPattern","restore","miterLimit","ROUT","ATOP","XOR","ROVER","OVER","PLUS","RIN","IN","OUT","RATOP","guac_state","offsetLeft","offsetTop","offsetParent","scrollLeft","scrollTop","documentScrollLeft","documentElement","documentScrollTop","guac_touchpad","devicePixelRatio","clickTimingThreshold","clickMoveThreshold","touch_count","last_touch_x","last_touch_y","last_touch_time","pixels_moved","touch_buttons","3","gesture_in_progress","click_release_timeout","touches","time","starting_touch","touch","delta_x","delta_y","velocity","offsetHeight","guac_touchscreen","gesture_start_x","gesture_start_y","long_press_timeout","press_button","release_button","click_button","move_mouse","finger_moved","changedTouches","sqrt","begin_gesture","end_gesture","longPressThreshold","guacObject","bodyCallbacks","dequeueBodyCallback","callbacks","enqueueBodyCallback","inputStream","requestInputStream","bodyCallback","ROOT_STREAM","STREAM_INDEX_MIMETYPE","OnScreenKeyboard","layout","osk","modifierKeysyms","scaledElements","addClass","classname","classList","add","removeClass","remove","replace","testClassname","ignoreMouse","ScaledElement","scaleFont","pixels","lineHeight","fontSize","modifiersPressed","names","getActiveKey","keyName","candidate","requires","keyElement","modifier","modifierClass","getCSSName","originalKeysym","onselectstart","Layout","unit","scaledElement","asKeyArray","Key","getKeys","keyArrays","cssName","appendElements","capElement","textContent","j","requirement","keyWidths","touchPress","touchRelease","mousePress","mouseRelease","template","language","element_buffer","element_end","start_index","terminator","length_end","split","parameter","equals","SessionRecording","recording","KEYFRAME_CHAR_INTERVAL","KEYFRAME_TIME_INTERVAL","MAXIMUM_SEEK_TIME","instructions","charactersSinceLastKeyframe","lastKeyframeTimestamp","playbackTunnel","_PlaybackTunnel","playbackClient","currentFrame","startVideoTimestamp","startRealTimestamp","seekTimeout","instruction","_Frame","Instruction","getSize","keyframe","getDuration","toRelativeTimestamp","findFrame","minIndex","maxIndex","midIndex","midTimestamp","replayFrame","receiveInstruction","seekToFrame","delay","abortSeek","startIndex","startTime","onseek","getPosition","continuePlayback","nextRealTimestamp","pause","onplay","onpause","isPlaying","seek","originallyPlaying","elements","guac_status","fromHTTPCode","CLIENT_BAD_REQUEST","CLIENT_FORBIDDEN","RESOURCE_NOT_FOUND","CLIENT_TOO_MANY","SERVER_BUSY","SERVER_ERROR","fromWebSocketCode","UPSTREAM_NOT_FOUND","UPSTREAM_UNAVAILABLE","array_reader","bytes_remaining","__decode_utf8","array_writer","__expand","new_buffer","__append_utf8","__encode_utf8","out_buffer","Tunnel","setUUID","uuid","onuuid","OPEN","UNSTABLE","receiveTimeout","unstableThreshold","INTERNAL_DATA_OPCODE","HTTPTunnel","tunnelURL","crossDomain","extraTunnelHeaders","TUNNEL_CONNECT","TUNNEL_READ","TUNNEL_WRITE","POLLING_ENABLED","POLLING_DISABLED","pollingMode","sendingMessages","outputMessageBuffer","withCredentials","receive_timeout","unstableTimeout","PING_FREQUENCY","extraHeaders","addExtraHeaders","request","headers","setRequestHeader","reset_timeout","close_tunnel","UPSTREAM_TIMEOUT","CLOSED","sendPendingMessages","message_xmlhttprequest","XMLHttpRequest","open","onreadystatechange","readyState","handleHTTPTunnelError","xmlhttprequest","getResponseHeader","statusText","handleResponse","interval","nextRequest","dataUpdateEvents","elementEnd","parseResponse","makeRequest","current","responseText","lengthEnd","abort","string","request_id","connect_xmlhttprequest","WebSocketTunnel","socket","ws_protocol","slash","pathname","lastIndexOf","path","WebSocket","onopen","onmessage","ChainedTunnel","tunnelChain","connect_data","chained_tunnel","tunnels","committedTunnel","attach","failTunnel","next_tunnel","commit_tunnel","StaticHTTPTunnel","xhr","responseType","API_VERSION","DESCRIPTORS","FunctionPrototype","FunctionPrototypeToString","nameRE","NAME","get","isObject","toAbsoluteIndex","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","nativeSlice","Constructor","k","fin"],"mappings":"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","file":"js/chunk-6ce7f546.c3b7f621.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',{staticStyle:{\"height\":\"100vh\",\"width\":\"100%\"}},[_c('div',{ref:\"viewport\",staticClass:\"viewport\"},[_c('div',{ref:\"display\",staticClass:\"display\",attrs:{\"tabindex\":\"0\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import Guacamole from 'guacamole-common-js'\n\nconst mouse = function (element) {\n\n    /**\n     * Reference to this Guacamole.Mouse.\n     * @private\n     */\n    let guac_mouse = this;\n\n    /**\n     * The number of mousemove events to require before re-enabling mouse\n     * event handling after receiving a touch event.\n     */\n    this.touchMouseThreshold = 3;\n\n    /**\n     * The minimum amount of pixels scrolled required for a single scroll button\n     * click.\n     */\n    this.scrollThreshold = 53;\n\n    /**\n     * The number of pixels to scroll per line.\n     */\n    this.PIXELS_PER_LINE = 18;\n\n    /**\n     * The number of pixels to scroll per page.\n     */\n    this.PIXELS_PER_PAGE = this.PIXELS_PER_LINE * 16;\n\n    /**\n     * The current mouse state. The properties of this state are updated when\n     * mouse events fire. This state object is also passed in as a parameter to\n     * the handler of any mouse events.\n     *\n     * @type {Guacamole.Mouse.State}\n     */\n    this.currentState = new Guacamole.Mouse.State(\n        0, 0,\n        false, false, false, false, false\n    );\n\n    /**\n     * Fired whenever the user presses a mouse button down over the element\n     * associated with this Guacamole.Mouse.\n     *\n     * @event\n     * @param {Guacamole.Mouse.State} state The current mouse state.\n     */\n    this.onmousedown = null;\n\n    /**\n     * Fired whenever the user releases a mouse button down over the element\n     * associated with this Guacamole.Mouse.\n     *\n     * @event\n     * @param {Guacamole.Mouse.State} state The current mouse state.\n     */\n    this.onmouseup = null;\n\n    /**\n     * Fired whenever the user moves the mouse over the element associated with\n     * this Guacamole.Mouse.\n     *\n     * @event\n     * @param {Guacamole.Mouse.State} state The current mouse state.\n     */\n    this.onmousemove = null;\n\n    /**\n     * Fired whenever the mouse leaves the boundaries of the element associated\n     * with this Guacamole.Mouse.\n     *\n     * @event\n     */\n    this.onmouseout = null;\n\n    /**\n     * Counter of mouse events to ignore. This decremented by mousemove, and\n     * while non-zero, mouse events will have no effect.\n     * @private\n     */\n    var ignore_mouse = 0;\n\n    /**\n     * Cumulative scroll delta amount. This value is accumulated through scroll\n     * events and results in scroll button clicks if it exceeds a certain\n     * threshold.\n     *\n     * @private\n     */\n    var scroll_delta = 0;\n\n    function cancelEvent(e) {\n        e.stopPropagation();\n        if (e.preventDefault) e.preventDefault();\n        e.returnValue = false;\n    }\n\n    // Block context menu so right-click gets sent properly\n    element.addEventListener(\"contextmenu\", function (e) {\n        cancelEvent(e);\n    }, false);\n\n    element.addEventListener(\"mousemove\", function (e) {\n\n        // If ignoring events, decrement counter\n        if (ignore_mouse) {\n            ignore_mouse--;\n            return;\n        }\n\n        guac_mouse.currentState.fromClientPosition(element, e.clientX, e.clientY);\n\n        if (guac_mouse.onmousemove)\n            guac_mouse.onmousemove(guac_mouse.currentState);\n\n    }, false);\n\n    element.addEventListener(\"mousedown\", function (e) {\n\n        cancelEvent(e);\n\n        // Do not handle if ignoring events\n        if (ignore_mouse)\n            return;\n\n        switch (e.button) {\n            case 0:\n                guac_mouse.currentState.left = true;\n                break;\n            case 1:\n                guac_mouse.currentState.middle = true;\n                break;\n            case 2:\n                guac_mouse.currentState.right = true;\n                break;\n        }\n\n        if (guac_mouse.onmousedown)\n            guac_mouse.onmousedown(guac_mouse.currentState);\n\n    }, false);\n\n    element.addEventListener(\"mouseup\", function (e) {\n\n        cancelEvent(e);\n\n        // Do not handle if ignoring events\n        if (ignore_mouse)\n            return;\n\n        switch (e.button) {\n            case 0:\n                guac_mouse.currentState.left = false;\n                break;\n            case 1:\n                guac_mouse.currentState.middle = false;\n                break;\n            case 2:\n                guac_mouse.currentState.right = false;\n                break;\n        }\n\n        if (guac_mouse.onmouseup)\n            guac_mouse.onmouseup(guac_mouse.currentState);\n\n    }, false);\n\n    element.addEventListener(\"mouseout\", function (e) {\n\n        // Get parent of the element the mouse pointer is leaving\n        if (!e) e = window.event;\n\n        // Check that mouseout is due to actually LEAVING the element\n        var target = e.relatedTarget || e.toElement;\n        while (target) {\n            if (target === element)\n                return;\n            target = target.parentNode;\n        }\n\n        cancelEvent(e);\n\n        // Release all buttons\n        if (guac_mouse.currentState.left\n            || guac_mouse.currentState.middle\n            || guac_mouse.currentState.right) {\n\n            guac_mouse.currentState.left = false;\n            guac_mouse.currentState.middle = false;\n            guac_mouse.currentState.right = false;\n\n            if (guac_mouse.onmouseup)\n                guac_mouse.onmouseup(guac_mouse.currentState);\n        }\n\n        // Fire onmouseout event\n        if (guac_mouse.onmouseout)\n            guac_mouse.onmouseout();\n\n    }, false);\n\n    // Override selection on mouse event element.\n    element.addEventListener(\"selectstart\", function (e) {\n        cancelEvent(e);\n    }, false);\n\n    // Ignore all pending mouse events when touch events are the apparent source\n    function ignorePendingMouseEvents() {\n        ignore_mouse = guac_mouse.touchMouseThreshold;\n    }\n\n    element.addEventListener(\"touchmove\", ignorePendingMouseEvents, false);\n    element.addEventListener(\"touchstart\", ignorePendingMouseEvents, false);\n    element.addEventListener(\"touchend\", ignorePendingMouseEvents, false);\n\n    // Scroll wheel support\n    function mousewheel_handler(e) {\n\n        // Determine approximate scroll amount (in pixels)\n        var delta = e.deltaY || -e.wheelDeltaY || -e.wheelDelta;\n\n        // If successfully retrieved scroll amount, convert to pixels if not\n        // already in pixels\n        if (delta) {\n\n            // Convert to pixels if delta was lines\n            if (e.deltaMode === 1)\n                delta = e.deltaY * guac_mouse.PIXELS_PER_LINE;\n\n            // Convert to pixels if delta was pages\n            else if (e.deltaMode === 2)\n                delta = e.deltaY * guac_mouse.PIXELS_PER_PAGE;\n\n        }\n\n        // Otherwise, assume legacy mousewheel event and line scrolling\n        else\n            delta = e.detail * guac_mouse.PIXELS_PER_LINE;\n\n        // Update overall delta\n        scroll_delta += delta;\n\n        // Up\n        if (scroll_delta <= -guac_mouse.scrollThreshold) {\n\n            // Repeatedly click the up button until insufficient delta remains\n            do {\n\n                if (guac_mouse.onmousedown) {\n                    guac_mouse.currentState.up = true;\n                    guac_mouse.onmousedown(guac_mouse.currentState);\n                }\n\n                if (guac_mouse.onmouseup) {\n                    guac_mouse.currentState.up = false;\n                    guac_mouse.onmouseup(guac_mouse.currentState);\n                }\n\n                scroll_delta += guac_mouse.scrollThreshold;\n\n            } while (scroll_delta <= -guac_mouse.scrollThreshold);\n\n            // Reset delta\n            scroll_delta = 0;\n\n        }\n\n        // Down\n        if (scroll_delta >= guac_mouse.scrollThreshold) {\n\n            // Repeatedly click the down button until insufficient delta remains\n            do {\n\n                if (guac_mouse.onmousedown) {\n                    guac_mouse.currentState.down = true;\n                    guac_mouse.onmousedown(guac_mouse.currentState);\n                }\n\n                if (guac_mouse.onmouseup) {\n                    guac_mouse.currentState.down = false;\n                    guac_mouse.onmouseup(guac_mouse.currentState);\n                }\n\n                scroll_delta -= guac_mouse.scrollThreshold;\n\n            } while (scroll_delta >= guac_mouse.scrollThreshold);\n\n            // Reset delta\n            scroll_delta = 0;\n\n        }\n\n        cancelEvent(e);\n\n    }\n\n    element.addEventListener('DOMMouseScroll', mousewheel_handler, false);\n    element.addEventListener('mousewheel', mousewheel_handler, false);\n    element.addEventListener('wheel', mousewheel_handler, false);\n\n    /**\n     * Whether the browser supports CSS3 cursor styling, including hotspot\n     * coordinates.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    var CSS3_CURSOR_SUPPORTED = (function () {\n\n        var div = document.createElement(\"div\");\n\n        // If no cursor property at all, then no support\n        if (!(\"cursor\" in div.style))\n            return false;\n\n        try {\n            // Apply simple 1x1 PNG\n            div.style.cursor = \"url(data:image/png;base64,\"\n                + \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAAB\"\n                + \"AQMAAAAl21bKAAAAA1BMVEX///+nxBvI\"\n                + \"AAAACklEQVQI12NgAAAAAgAB4iG8MwAA\"\n                + \"AABJRU5ErkJggg==) 0 0, auto\";\n        } catch (e) {\n            return false;\n        }\n\n        // Verify cursor property is set to URL with hotspot\n        return /\\burl\\([^()]*\\)\\s+0\\s+0\\b/.test(div.style.cursor || \"\");\n\n    })();\n\n    /**\n     * Changes the local mouse cursor to the given canvas, having the given\n     * hotspot coordinates. This affects styling of the element backing this\n     * Guacamole.Mouse only, and may fail depending on browser support for\n     * setting the mouse cursor.\n     *\n     * If setting the local cursor is desired, it is up to the implementation\n     * to do something else, such as use the software cursor built into\n     * Guacamole.Display, if the local cursor cannot be set.\n     *\n     * @param {HTMLCanvasElement} canvas The cursor image.\n     * @param {Number} x The X-coordinate of the cursor hotspot.\n     * @param {Number} y The Y-coordinate of the cursor hotspot.\n     * @return {Boolean} true if the cursor was successfully set, false if the\n     *                   cursor could not be set for any reason.\n     */\n    this.setCursor = function (canvas, x, y) {\n\n        // Attempt to set via CSS3 cursor styling\n        if (CSS3_CURSOR_SUPPORTED) {\n            var dataURL = canvas.toDataURL('image/png');\n            element.style.cursor = \"url(\" + dataURL + \") \" + x + \" \" + y + \", auto\";\n            return true;\n        }\n\n        // Otherwise, setting cursor failed\n        return false;\n\n    };\n\n};\n\n//attach supporting classes\nmouse.State = Guacamole.Mouse.State\nmouse.Touchpad = Guacamole.Mouse.Touchpad\nmouse.Touchscreen = Guacamole.Mouse.Touchscreen\n\n\nexport default {\n    mouse\n}","export default {\n  /**\n   * The Guacamole connection has not yet been attempted.\n   *\n   * @type String\n   */\n  IDLE: \"IDLE\",\n\n  /**\n   * The Guacamole connection is being established.\n   *\n   * @type String\n   */\n  CONNECTING: \"CONNECTING\",\n\n  /**\n   * The Guacamole connection has been successfully established, and the\n   * client is now waiting for receipt of initial graphical data.\n   *\n   * @type String\n   */\n  WAITING: \"WAITING\",\n\n  /**\n   * The Guacamole connection has been successfully established, and\n   * initial graphical data has been received.\n   *\n   * @type String\n   */\n  CONNECTED: \"CONNECTED\",\n\n  /**\n   * The Guacamole connection has terminated successfully. No errors are\n   * indicated.\n   *\n   * @type String\n   */\n  DISCONNECTED: \"DISCONNECTED\",\n\n  /**\n   * The Guacamole connection has terminated due to an error reported by\n   * the client. The associated error code is stored in statusCode.\n   *\n   * @type String\n   */\n  CLIENT_ERROR: \"CLIENT_ERROR\",\n\n  /**\n   * The Guacamole connection has terminated due to an error reported by\n   * the tunnel. The associated error code is stored in statusCode.\n   *\n   * @type String\n   */\n  TUNNEL_ERROR: \"TUNNEL_ERROR\"\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import Guacamole from 'guacamole-common-js'\n\nconst clipboard = {}\n\nclipboard.install = (client) => {\n  clipboard.getLocalClipboard().then(data => clipboard.cache = data)\n\n  window.addEventListener('load', clipboard.update(client), true)\n  window.addEventListener('copy', clipboard.update(client))\n  window.addEventListener('cut', clipboard.update(client))\n  window.addEventListener('focus', e => {\n    if (e.target === window) {\n      clipboard.update(client)()\n    }\n  }, true)\n}\n\nclipboard.update = client => {\n  return () => {\n    clipboard.getLocalClipboard().then(data => {\n      clipboard.cache = data\n      clipboard.setRemoteClipboard(client)\n    })\n  }\n}\n\nclipboard.setRemoteClipboard = (client) => {\n  if (!clipboard.cache) {\n    return\n  }\n\n  let writer\n\n  const stream = client.createClipboardStream(clipboard.cache.type)\n\n  if (typeof clipboard.cache.data === 'string') {\n    writer = new Guacamole.StringWriter(stream)\n    writer.sendText(clipboard.cache.data)\n    writer.sendEnd()\n  } else {\n    writer = new Guacamole.BlobWriter(stream)\n    writer.oncomplete = function clipboardSent() {\n      writer.sendEnd()\n    };\n    writer.sendBlob(clipboard.cache.data)\n  }\n}\n\nclipboard.getLocalClipboard = async () => {\n  if (navigator.clipboard && navigator.clipboard.readText) {\n    const text = await navigator.clipboard.readText()\n    return {\n      type: 'text/plain',\n      data: text\n    }\n  }\n}\n\nclipboard.setLocalClipboard = async (data) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    if (data.type === 'text/plain') {\n      await navigator.clipboard.writeText(data.data)\n    }\n  }\n}\n\nclipboard.onClipboard = (stream, mimetype) => {\n  let reader\n\n  if (/^text\\//.exec(mimetype)) {\n    reader = new Guacamole.StringReader(stream);\n\n    // Assemble received data into a single string\n    let data = '';\n    reader.ontext = text => {\n      data += text;\n    }\n\n    // Set clipboard contents once stream is finished\n    reader.onend = () => {\n      clipboard.setLocalClipboard({\n        type: mimetype,\n        data: data\n      })\n    }\n  } else {\n    reader = new Guacamole.BlobReader(stream, mimetype);\n    reader.onend = () => {\n      clipboard.setLocalClipboard({\n        type: mimetype,\n        data: reader.getBlob()\n      })\n    }\n  }\n}\n\nexport default clipboard\n","<template>\n  <el-container style=\"height: 100vh;width: 100%\">\n      <div ref=\"viewport\" class=\"viewport\">\n        <!-- tabindex allows for div to be focused -->\n        <div ref=\"display\" class=\"display\" tabindex=\"0\"/>\n      </div>\n\n  </el-container>\n\n\n</template>\n\n<script>\nimport Guacamole from 'guacamole-common-js'\nimport GuacMouse from '../libs/GuacMouse'\nimport states from '../libs/states'\nimport clipboard from '../libs/clipboard'\n\nGuacamole.Mouse = GuacMouse.mouse\n\nfunction serialize(obj) {\n  let str = [];\n  for (const p in obj)\n    if (obj[p]) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    }\n  return str.join(\"&\");\n}\n\nexport default {\n  props: {token: String},\n  name: 'Guacamole',\n  data() {\n    return {\n      demo: 'win',\n      connected: false,\n      display: null,\n      currentAdjustedHeight: null,\n      client: null,\n      keyboard: null,\n      mouse: null,\n      lastEvent: null,\n      connectionState: states.IDLE,\n      errorMessage: '',\n      arguments: {},\n      query: {\n        token: this.token,\n        screen_width: 1024,\n        screen_height: 768,\n      },\n    }\n  },\n  computed: {\n\n    wsUrl() {\n      let loc = window.location, new_uri;\n      if (loc.protocol === \"https:\") {\n        new_uri = \"wss:\";\n      } else {\n        new_uri = \"ws:\";\n      }\n      // new_uri += \"//127.0.0.1:9528\"\n      new_uri += \"//\" + loc.host;\n      new_uri += `/api/ws/guacamole`;\n      return `${new_uri}`\n    }\n  },\n  watch: {\n    connectionState(state) {\n      this.$notify({\n        title: state,\n        type: 'success'\n      });\n    }\n  },\n\n  methods: {\n    doGuacdConnect() {\n      window.document.title = \"RemoteDesktop\"\n      this._setScreenSize()\n      this.startGuacamole()\n    },\n    send(cmd) {\n      if (!this.client) {\n        return\n      }\n      for (const c of cmd.data) {\n        this.client.sendKeyEvent(1, c.charCodeAt(0))\n      }\n    },\n    copy(cmd) {\n      if (!this.client) {\n        return\n      }\n      clipboard.cache = {\n        type: 'text/plain',\n        data: cmd.data\n      }\n      clipboard.setRemoteClipboard(this.client)\n    },\n    handleMouseState(mouseState) {\n      const scaledMouseState = Object.assign({}, mouseState, {\n        x: mouseState.x / this.display.getScale(),\n        y: mouseState.y / this.display.getScale(),\n      })\n      this.client.sendMouseState(scaledMouseState);\n    },\n    _setScreenSize() {\n      const elm = this.$refs.viewport\n      if (!elm || !elm.offsetWidth) {\n        // resize is being called on the hidden window\n        return\n      }\n      let pixelDensity = window.devicePixelRatio || 1\n      const width = elm.clientWidth * pixelDensity\n      const height = elm.clientHeight * pixelDensity\n      this.query.screen_height = height\n      this.query.screen_width = width\n    },\n    resize() {\n      const elm = this.$refs.viewport\n      if (!elm || !elm.offsetWidth) {\n        // resize is being called on the hidden window\n        return\n      }\n\n      let pixelDensity = window.devicePixelRatio || 1\n      const width = elm.clientWidth * pixelDensity\n      const height = elm.clientHeight * pixelDensity\n      if (this.display.getWidth() !== width || this.display.getHeight() !== height) {\n        this.client.sendSize(width, height)\n      }\n      // setting timeout so display has time to get the correct size\n      setTimeout(() => {\n        const scale = Math.min(\n            elm.clientWidth / Math.max(this.display.getWidth(), 1),\n            elm.clientHeight / Math.max(this.display.getHeight(), 1)\n        )\n        this.display.scale(scale)\n      }, 100)\n    },\n    startGuacamole() {\n      // GuacadAddr    string `form:\"guacad_addr\"`\n      // AssetProtocol string `form:\"asset_protocol\"`\n      // AssetHost     string `form:\"asset_host\"`\n      // AssetPort     string `form:\"asset_port\"`\n      // AssetUser     string `form:\"asset_user\"`\n      // AssetPassword string `form:\"asset_password\"`\n      // ScreenWidth   int    `form:\"screen_width\"`\n      // ScreenHeight  int    `form:\"screen_height\"`\n      // ScreenDpi     int    `form:\"screen_dpi\"`\n\n      let tunnel = new Guacamole.WebSocketTunnel(this.wsUrl)\n\n\n      if (this.client) {\n        this.display.scale(0)\n        this.uninstallKeyboard()\n      }\n\n      this.client = new Guacamole.Client(tunnel);\n      clipboard.install(this.client)\n\n      tunnel.onerror = status => {\n        // eslint-disable-next-line no-console\n        console.error(`Tunnel failed ${JSON.stringify(status)}`)\n        this.connectionState = states.TUNNEL_ERROR\n      }\n\n      tunnel.onstatechange = state => {\n        switch (state) {\n            // Connection is being established\n          case Guacamole.Tunnel.State.CONNECTING:\n            this.connectionState = states.CONNECTING\n            break;\n\n            // Connection is established / no longer unstable\n          case Guacamole.Tunnel.State.OPEN:\n            this.connectionState = states.CONNECTED\n            break;\n\n            // Connection is established but misbehaving\n          case Guacamole.Tunnel.State.UNSTABLE:\n            // TODO\n            //this.$message.error(\"不稳定\")\n            break;\n\n            // Connection has closed\n          case Guacamole.Tunnel.State.CLOSED:\n            this.connectionState = states.DISCONNECTED\n            break;\n        }\n      }\n\n      this.client.onstatechange = clientState => {\n        switch (clientState) {\n          case 0:\n            this.connectionState = states.IDLE\n            break\n          case 1:\n            // connecting ignored for some reason?\n            break\n          case 2:\n            this.connectionState = states.WAITING\n            break\n          case 3:\n            this.connectionState = states.CONNECTED\n            window.addEventListener('resize', this.resize)\n            this.$refs.viewport.addEventListener('mouseenter', this.resize)\n\n            clipboard.setRemoteClipboard(this.client)\n\n            // eslint-disable-next-line no-fallthrough\n          case 4:\n          case 5:\n            // disconnected, disconnecting\n            break\n        }\n      }\n\n      this.client.onerror = error => {\n        this.client.disconnect()\n        // eslint-disable-next-line no-console\n        this.$message.error(`Client error ${JSON.stringify(error)}`)\n        this.errorMessage = error.message\n        this.connectionState = states.CLIENT_ERROR\n      }\n\n      this.client.onsync = () => {\n      }\n\n      // Test for argument mutability whenever an argument value is received\n      this.client.onargv = (stream, mimetype, name) => {\n        if (mimetype !== 'text/plain')\n          return;\n\n        const reader = new Guacamole.StringReader(stream);\n\n        // Assemble received data into a single string\n        let value = '';\n        reader.ontext = text => {\n          value += text;\n        };\n\n        // Test mutability once stream is finished, storing the current value for the argument only if it is mutable\n        reader.onend = () => {\n          const stream = this.client.createArgumentValueStream('text/plain', name)\n          stream.onack = status => {\n            if (status.isError()) {\n              // ignore reject\n              return\n            }\n            this.arguments[name] = value\n          }\n        };\n      }\n\n      this.client.onclipboard = clipboard.onClipboard\n      this.display = this.client.getDisplay()\n      const displayElm = this.$refs.display\n      displayElm.appendChild(this.display.getElement());\n      displayElm.addEventListener('contextmenu', e => {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.returnValue = false;\n      })\n\n      let param = serialize(this.query)\n      this.client.connect(param);\n      window.onunload = () => this.client.disconnect();\n\n      this.mouse = new Guacamole.Mouse(displayElm);\n      // Hide software cursor when mouse leaves display\n      this.mouse.onmouseout = () => {\n        if (!this.display) return;\n        this.display.showCursor(false);\n      }\n\n      // allows focusing on the display div so that keyboard doesn't always go to session\n      displayElm.onclick = () => {\n        displayElm.focus()\n      }\n      displayElm.onfocus = () => {\n        displayElm.className = 'focus'\n      }\n      displayElm.onblur = () => {\n        displayElm.className = ''\n      }\n\n      this.keyboard = new Guacamole.Keyboard(displayElm);\n      this.installKeyboard()\n      this.mouse.onmousedown = this.mouse.onmouseup = this.mouse.onmousemove = this.handleMouseState\n      setTimeout(() => {\n        this.resize()\n        displayElm.focus()\n      }, 1000); // $nextTick wasn't enough\n    },\n    installKeyboard() {\n      this.keyboard.onkeydown = keysym => {\n        this.client.sendKeyEvent(1, keysym);\n      };\n      this.keyboard.onkeyup = keysym => {\n        this.client.sendKeyEvent(0, keysym);\n      };\n    },\n    uninstallKeyboard() {\n      this.keyboard.onkeydown = this.keyboard.onkeyup = () => {\n      }\n    }\n  },\n  beforeUpdate() {\n    window.document.title = \"RemoteDesktop\"\n  },\n  mounted() {\n    this._setScreenSize()\n    this.doGuacdConnect()\n  }\n}\n</script>\n\n<style scoped>\n\n\n\n.display {\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.viewport {\n  margin-top:10px;\n  background-color: coral;\n  border-color: blue;\n  border-width: 1px;\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guacamole.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guacamole.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Guacamole.vue?vue&type=template&id=4baf442b&scoped=true&\"\nimport script from \"./Guacamole.vue?vue&type=script&lang=js&\"\nexport * from \"./Guacamole.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Guacamole.vue?vue&type=style&index=0&id=4baf442b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4baf442b\",\n  null\n  \n)\n\nexport default component.exports","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A reader which automatically handles the given input stream, returning\r\n * strictly received packets as array buffers. Note that this object will\r\n * overwrite any installed event handlers on the given Guacamole.InputStream.\r\n * \r\n * @constructor\r\n * @param {Guacamole.InputStream} stream The stream that data will be read\r\n *                                       from.\r\n */\r\nGuacamole.ArrayBufferReader = function(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.InputStream.\r\n     * @private\r\n     */\r\n    var guac_reader = this;\r\n\r\n    // Receive blobs as array buffers\r\n    stream.onblob = function(data) {\r\n\r\n        // Convert to ArrayBuffer\r\n        var binary = window.atob(data);\r\n        var arrayBuffer = new ArrayBuffer(binary.length);\r\n        var bufferView = new Uint8Array(arrayBuffer);\r\n\r\n        for (var i=0; i<binary.length; i++)\r\n            bufferView[i] = binary.charCodeAt(i);\r\n\r\n        // Call handler, if present\r\n        if (guac_reader.ondata)\r\n            guac_reader.ondata(arrayBuffer);\r\n\r\n    };\r\n\r\n    // Simply call onend when end received\r\n    stream.onend = function() {\r\n        if (guac_reader.onend)\r\n            guac_reader.onend();\r\n    };\r\n\r\n    /**\r\n     * Fired once for every blob of data received.\r\n     * \r\n     * @event\r\n     * @param {ArrayBuffer} buffer The data packet received.\r\n     */\r\n    this.ondata = null;\r\n\r\n    /**\r\n     * Fired once this stream is finished and no further data will be written.\r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n};\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A writer which automatically writes to the given output stream with arbitrary\r\n * binary data, supplied as ArrayBuffers.\r\n * \r\n * @constructor\r\n * @param {Guacamole.OutputStream} stream The stream that data will be written\r\n *                                        to.\r\n */\r\nGuacamole.ArrayBufferWriter = function(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.StringWriter.\r\n     * @private\r\n     */\r\n    var guac_writer = this;\r\n\r\n    // Simply call onack for acknowledgements\r\n    stream.onack = function(status) {\r\n        if (guac_writer.onack)\r\n            guac_writer.onack(status);\r\n    };\r\n\r\n    /**\r\n     * Encodes the given data as base64, sending it as a blob. The data must\r\n     * be small enough to fit into a single blob instruction.\r\n     * \r\n     * @private\r\n     * @param {Uint8Array} bytes The data to send.\r\n     */\r\n    function __send_blob(bytes) {\r\n\r\n        var binary = \"\";\r\n\r\n        // Produce binary string from bytes in buffer\r\n        for (var i=0; i<bytes.byteLength; i++)\r\n            binary += String.fromCharCode(bytes[i]);\r\n\r\n        // Send as base64\r\n        stream.sendBlob(window.btoa(binary));\r\n\r\n    }\r\n\r\n    /**\r\n     * The maximum length of any blob sent by this Guacamole.ArrayBufferWriter,\r\n     * in bytes. Data sent via\r\n     * [sendData()]{@link Guacamole.ArrayBufferWriter#sendData} which exceeds\r\n     * this length will be split into multiple blobs. As the Guacamole protocol\r\n     * limits the maximum size of any instruction or instruction element to\r\n     * 8192 bytes, and the contents of blobs will be base64-encoded, this value\r\n     * should only be increased with extreme caution.\r\n     *\r\n     * @type {Number}\r\n     * @default {@link Guacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH}\r\n     */\r\n    this.blobLength = Guacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH;\r\n\r\n    /**\r\n     * Sends the given data.\r\n     * \r\n     * @param {ArrayBuffer|TypedArray} data The data to send.\r\n     */\r\n    this.sendData = function(data) {\r\n\r\n        var bytes = new Uint8Array(data);\r\n\r\n        // If small enough to fit into single instruction, send as-is\r\n        if (bytes.length <= guac_writer.blobLength)\r\n            __send_blob(bytes);\r\n\r\n        // Otherwise, send as multiple instructions\r\n        else {\r\n            for (var offset=0; offset<bytes.length; offset += guac_writer.blobLength)\r\n                __send_blob(bytes.subarray(offset, offset + guac_writer.blobLength));\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Signals that no further text will be sent, effectively closing the\r\n     * stream.\r\n     */\r\n    this.sendEnd = function() {\r\n        stream.sendEnd();\r\n    };\r\n\r\n    /**\r\n     * Fired for received data, if acknowledged by the server.\r\n     * @event\r\n     * @param {Guacamole.Status} status The status of the operation.\r\n     */\r\n    this.onack = null;\r\n\r\n};\r\n\r\n/**\r\n * The default maximum blob length for new Guacamole.ArrayBufferWriter\r\n * instances.\r\n *\r\n * @constant\r\n * @type {Number}\r\n */\r\nGuacamole.ArrayBufferWriter.DEFAULT_BLOB_LENGTH = 6048;\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Maintains a singleton instance of the Web Audio API AudioContext class,\r\n * instantiating the AudioContext only in response to the first call to\r\n * getAudioContext(), and only if no existing AudioContext instance has been\r\n * provided via the singleton property. Subsequent calls to getAudioContext()\r\n * will return the same instance.\r\n *\r\n * @namespace\r\n */\r\nGuacamole.AudioContextFactory = {\r\n\r\n    /**\r\n     * A singleton instance of a Web Audio API AudioContext object, or null if\r\n     * no instance has yes been created. This property may be manually set if\r\n     * you wish to supply your own AudioContext instance, but care must be\r\n     * taken to do so as early as possible. Assignments to this property will\r\n     * not retroactively affect the value returned by previous calls to\r\n     * getAudioContext().\r\n     *\r\n     * @type {AudioContext}\r\n     */\r\n    'singleton' : null,\r\n\r\n    /**\r\n     * Returns a singleton instance of a Web Audio API AudioContext object.\r\n     *\r\n     * @return {AudioContext}\r\n     *     A singleton instance of a Web Audio API AudioContext object, or null\r\n     *     if the Web Audio API is not supported.\r\n     */\r\n    'getAudioContext' : function getAudioContext() {\r\n\r\n        // Fallback to Webkit-specific AudioContext implementation\r\n        var AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n        // Get new AudioContext instance if Web Audio API is supported\r\n        if (AudioContext) {\r\n            try {\r\n\r\n                // Create new instance if none yet exists\r\n                if (!Guacamole.AudioContextFactory.singleton)\r\n                    Guacamole.AudioContextFactory.singleton = new AudioContext();\r\n\r\n                // Return singleton instance\r\n                return Guacamole.AudioContextFactory.singleton;\r\n\r\n            }\r\n            catch (e) {\r\n                // Do not use Web Audio API if not allowed by browser\r\n            }\r\n        }\r\n\r\n        // Web Audio API not supported\r\n        return null;\r\n\r\n    }\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Abstract audio player which accepts, queues and plays back arbitrary audio\r\n * data. It is up to implementations of this class to provide some means of\r\n * handling a provided Guacamole.InputStream. Data received along the provided\r\n * stream is to be played back immediately.\r\n *\r\n * @constructor\r\n */\r\nGuacamole.AudioPlayer = function AudioPlayer() {\r\n\r\n    /**\r\n     * Notifies this Guacamole.AudioPlayer that all audio up to the current\r\n     * point in time has been given via the underlying stream, and that any\r\n     * difference in time between queued audio data and the current time can be\r\n     * considered latency.\r\n     */\r\n    this.sync = function sync() {\r\n        // Default implementation - do nothing\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Determines whether the given mimetype is supported by any built-in\r\n * implementation of Guacamole.AudioPlayer, and thus will be properly handled\r\n * by Guacamole.AudioPlayer.getInstance().\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype to check.\r\n *\r\n * @returns {Boolean}\r\n *     true if the given mimetype is supported by any built-in\r\n *     Guacamole.AudioPlayer, false otherwise.\r\n */\r\nGuacamole.AudioPlayer.isSupportedType = function isSupportedType(mimetype) {\r\n\r\n    return Guacamole.RawAudioPlayer.isSupportedType(mimetype);\r\n\r\n};\r\n\r\n/**\r\n * Returns a list of all mimetypes supported by any built-in\r\n * Guacamole.AudioPlayer, in rough order of priority. Beware that only the core\r\n * mimetypes themselves will be listed. Any mimetype parameters, even required\r\n * ones, will not be included in the list. For example, \"audio/L8\" is a\r\n * supported raw audio mimetype that is supported, but it is invalid without\r\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\r\n * however (see https://tools.ietf.org/html/rfc4856).\r\n *\r\n * @returns {String[]}\r\n *     A list of all mimetypes supported by any built-in Guacamole.AudioPlayer,\r\n *     excluding any parameters.\r\n */\r\nGuacamole.AudioPlayer.getSupportedTypes = function getSupportedTypes() {\r\n\r\n    return Guacamole.RawAudioPlayer.getSupportedTypes();\r\n\r\n};\r\n\r\n/**\r\n * Returns an instance of Guacamole.AudioPlayer providing support for the given\r\n * audio format. If support for the given audio format is not available, null\r\n * is returned.\r\n *\r\n * @param {Guacamole.InputStream} stream\r\n *     The Guacamole.InputStream to read audio data from.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype of the audio data in the provided stream.\r\n *\r\n * @return {Guacamole.AudioPlayer}\r\n *     A Guacamole.AudioPlayer instance supporting the given mimetype and\r\n *     reading from the given stream, or null if support for the given mimetype\r\n *     is absent.\r\n */\r\nGuacamole.AudioPlayer.getInstance = function getInstance(stream, mimetype) {\r\n\r\n    // Use raw audio player if possible\r\n    if (Guacamole.RawAudioPlayer.isSupportedType(mimetype))\r\n        return new Guacamole.RawAudioPlayer(stream, mimetype);\r\n\r\n    // No support for given mimetype\r\n    return null;\r\n\r\n};\r\n\r\n/**\r\n * Implementation of Guacamole.AudioPlayer providing support for raw PCM format\r\n * audio. This player relies only on the Web Audio API and does not require any\r\n * browser-level support for its audio formats.\r\n *\r\n * @constructor\r\n * @augments Guacamole.AudioPlayer\r\n * @param {Guacamole.InputStream} stream\r\n *     The Guacamole.InputStream to read audio data from.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype of the audio data in the provided stream, which must be a\r\n *     \"audio/L8\" or \"audio/L16\" mimetype with necessary parameters, such as:\r\n *     \"audio/L16;rate=44100,channels=2\".\r\n */\r\nGuacamole.RawAudioPlayer = function RawAudioPlayer(stream, mimetype) {\r\n\r\n    /**\r\n     * The format of audio this player will decode.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.RawAudioFormat}\r\n     */\r\n    var format = Guacamole.RawAudioFormat.parse(mimetype);\r\n\r\n    /**\r\n     * An instance of a Web Audio API AudioContext object, or null if the\r\n     * Web Audio API is not supported.\r\n     *\r\n     * @private\r\n     * @type {AudioContext}\r\n     */\r\n    var context = Guacamole.AudioContextFactory.getAudioContext();\r\n\r\n    /**\r\n     * The earliest possible time that the next packet could play without\r\n     * overlapping an already-playing packet, in seconds. Note that while this\r\n     * value is in seconds, it is not an integer value and has microsecond\r\n     * resolution.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var nextPacketTime = context.currentTime;\r\n\r\n    /**\r\n     * Guacamole.ArrayBufferReader wrapped around the audio input stream\r\n     * provided with this Guacamole.RawAudioPlayer was created.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.ArrayBufferReader}\r\n     */\r\n    var reader = new Guacamole.ArrayBufferReader(stream);\r\n\r\n    /**\r\n     * The minimum size of an audio packet split by splitAudioPacket(), in\r\n     * seconds. Audio packets smaller than this will not be split, nor will the\r\n     * split result of a larger packet ever be smaller in size than this\r\n     * minimum.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var MIN_SPLIT_SIZE = 0.02;\r\n\r\n    /**\r\n     * The maximum amount of latency to allow between the buffered data stream\r\n     * and the playback position, in seconds. Initially, this is set to\r\n     * roughly one third of a second.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var maxLatency = 0.3;\r\n\r\n    /**\r\n     * The type of typed array that will be used to represent each audio packet\r\n     * internally. This will be either Int8Array or Int16Array, depending on\r\n     * whether the raw audio format is 8-bit or 16-bit.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     */\r\n    var SampleArray = (format.bytesPerSample === 1) ? window.Int8Array : window.Int16Array;\r\n\r\n    /**\r\n     * The maximum absolute value of any sample within a raw audio packet\r\n     * received by this audio player. This depends only on the size of each\r\n     * sample, and will be 128 for 8-bit audio and 32768 for 16-bit audio.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var maxSampleValue = (format.bytesPerSample === 1) ? 128 : 32768;\r\n\r\n    /**\r\n     * The queue of all pending audio packets, as an array of sample arrays.\r\n     * Audio packets which are pending playback will be added to this queue for\r\n     * further manipulation prior to scheduling via the Web Audio API. Once an\r\n     * audio packet leaves this queue and is scheduled via the Web Audio API,\r\n     * no further modifications can be made to that packet.\r\n     *\r\n     * @private\r\n     * @type {SampleArray[]}\r\n     */\r\n    var packetQueue = [];\r\n\r\n    /**\r\n     * Given an array of audio packets, returns a single audio packet\r\n     * containing the concatenation of those packets.\r\n     *\r\n     * @private\r\n     * @param {SampleArray[]} packets\r\n     *     The array of audio packets to concatenate.\r\n     *\r\n     * @returns {SampleArray}\r\n     *     A single audio packet containing the concatenation of all given\r\n     *     audio packets. If no packets are provided, this will be undefined.\r\n     */\r\n    var joinAudioPackets = function joinAudioPackets(packets) {\r\n\r\n        // Do not bother joining if one or fewer packets are in the queue\r\n        if (packets.length <= 1)\r\n            return packets[0];\r\n\r\n        // Determine total sample length of the entire queue\r\n        var totalLength = 0;\r\n        packets.forEach(function addPacketLengths(packet) {\r\n            totalLength += packet.length;\r\n        });\r\n\r\n        // Append each packet within queue\r\n        var offset = 0;\r\n        var joined = new SampleArray(totalLength);\r\n        packets.forEach(function appendPacket(packet) {\r\n            joined.set(packet, offset);\r\n            offset += packet.length;\r\n        });\r\n\r\n        return joined;\r\n\r\n    };\r\n\r\n    /**\r\n     * Given a single packet of audio data, splits off an arbitrary length of\r\n     * audio data from the beginning of that packet, returning the split result\r\n     * as an array of two packets. The split location is determined through an\r\n     * algorithm intended to minimize the liklihood of audible clicking between\r\n     * packets. If no such split location is possible, an array containing only\r\n     * the originally-provided audio packet is returned.\r\n     *\r\n     * @private\r\n     * @param {SampleArray} data\r\n     *     The audio packet to split.\r\n     *\r\n     * @returns {SampleArray[]}\r\n     *     An array of audio packets containing the result of splitting the\r\n     *     provided audio packet. If splitting is possible, this array will\r\n     *     contain two packets. If splitting is not possible, this array will\r\n     *     contain only the originally-provided packet.\r\n     */\r\n    var splitAudioPacket = function splitAudioPacket(data) {\r\n\r\n        var minValue = Number.MAX_VALUE;\r\n        var optimalSplitLength = data.length;\r\n\r\n        // Calculate number of whole samples in the provided audio packet AND\r\n        // in the minimum possible split packet\r\n        var samples = Math.floor(data.length / format.channels);\r\n        var minSplitSamples = Math.floor(format.rate * MIN_SPLIT_SIZE);\r\n\r\n        // Calculate the beginning of the \"end\" of the audio packet\r\n        var start = Math.max(\r\n            format.channels * minSplitSamples,\r\n            format.channels * (samples - minSplitSamples)\r\n        );\r\n\r\n        // For all samples at the end of the given packet, find a point where\r\n        // the perceptible volume across all channels is lowest (and thus is\r\n        // the optimal point to split)\r\n        for (var offset = start; offset < data.length; offset += format.channels) {\r\n\r\n            // Calculate the sum of all values across all channels (the result\r\n            // will be proportional to the average volume of a sample)\r\n            var totalValue = 0;\r\n            for (var channel = 0; channel < format.channels; channel++) {\r\n                totalValue += Math.abs(data[offset + channel]);\r\n            }\r\n\r\n            // If this is the smallest average value thus far, set the split\r\n            // length such that the first packet ends with the current sample\r\n            if (totalValue <= minValue) {\r\n                optimalSplitLength = offset + format.channels;\r\n                minValue = totalValue;\r\n            }\r\n\r\n        }\r\n\r\n        // If packet is not split, return the supplied packet untouched\r\n        if (optimalSplitLength === data.length)\r\n            return [data];\r\n\r\n        // Otherwise, split the packet into two new packets according to the\r\n        // calculated optimal split length\r\n        return [\r\n            new SampleArray(data.buffer.slice(0, optimalSplitLength * format.bytesPerSample)),\r\n            new SampleArray(data.buffer.slice(optimalSplitLength * format.bytesPerSample))\r\n        ];\r\n\r\n    };\r\n\r\n    /**\r\n     * Pushes the given packet of audio data onto the playback queue. Unlike\r\n     * other private functions within Guacamole.RawAudioPlayer, the type of the\r\n     * ArrayBuffer packet of audio data here need not be specific to the type\r\n     * of audio (as with SampleArray). The ArrayBuffer type provided by a\r\n     * Guacamole.ArrayBufferReader, for example, is sufficient. Any necessary\r\n     * conversions will be performed automatically internally.\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} data\r\n     *     A raw packet of audio data that should be pushed onto the audio\r\n     *     playback queue.\r\n     */\r\n    var pushAudioPacket = function pushAudioPacket(data) {\r\n        packetQueue.push(new SampleArray(data));\r\n    };\r\n\r\n    /**\r\n     * Shifts off and returns a packet of audio data from the beginning of the\r\n     * playback queue. The length of this audio packet is determined\r\n     * dynamically according to the click-reduction algorithm implemented by\r\n     * splitAudioPacket().\r\n     *\r\n     * @private\r\n     * @returns {SampleArray}\r\n     *     A packet of audio data pulled from the beginning of the playback\r\n     *     queue.\r\n     */\r\n    var shiftAudioPacket = function shiftAudioPacket() {\r\n\r\n        // Flatten data in packet queue\r\n        var data = joinAudioPackets(packetQueue);\r\n        if (!data)\r\n            return null;\r\n\r\n        // Pull an appropriate amount of data from the front of the queue\r\n        packetQueue = splitAudioPacket(data);\r\n        data = packetQueue.shift();\r\n\r\n        return data;\r\n\r\n    };\r\n\r\n    /**\r\n     * Converts the given audio packet into an AudioBuffer, ready for playback\r\n     * by the Web Audio API. Unlike the raw audio packets received by this\r\n     * audio player, AudioBuffers require floating point samples and are split\r\n     * into isolated planes of channel-specific data.\r\n     *\r\n     * @private\r\n     * @param {SampleArray} data\r\n     *     The raw audio packet that should be converted into a Web Audio API\r\n     *     AudioBuffer.\r\n     *\r\n     * @returns {AudioBuffer}\r\n     *     A new Web Audio API AudioBuffer containing the provided audio data,\r\n     *     converted to the format used by the Web Audio API.\r\n     */\r\n    var toAudioBuffer = function toAudioBuffer(data) {\r\n\r\n        // Calculate total number of samples\r\n        var samples = data.length / format.channels;\r\n\r\n        // Determine exactly when packet CAN play\r\n        var packetTime = context.currentTime;\r\n        if (nextPacketTime < packetTime)\r\n            nextPacketTime = packetTime;\r\n\r\n        // Get audio buffer for specified format\r\n        var audioBuffer = context.createBuffer(format.channels, samples, format.rate);\r\n\r\n        // Convert each channel\r\n        for (var channel = 0; channel < format.channels; channel++) {\r\n\r\n            var audioData = audioBuffer.getChannelData(channel);\r\n\r\n            // Fill audio buffer with data for channel\r\n            var offset = channel;\r\n            for (var i = 0; i < samples; i++) {\r\n                audioData[i] = data[offset] / maxSampleValue;\r\n                offset += format.channels;\r\n            }\r\n\r\n        }\r\n\r\n        return audioBuffer;\r\n\r\n    };\r\n\r\n    // Defer playback of received audio packets slightly\r\n    reader.ondata = function playReceivedAudio(data) {\r\n\r\n        // Push received samples onto queue\r\n        pushAudioPacket(new SampleArray(data));\r\n\r\n        // Shift off an arbitrary packet of audio data from the queue (this may\r\n        // be different in size from the packet just pushed)\r\n        var packet = shiftAudioPacket();\r\n        if (!packet)\r\n            return;\r\n\r\n        // Determine exactly when packet CAN play\r\n        var packetTime = context.currentTime;\r\n        if (nextPacketTime < packetTime)\r\n            nextPacketTime = packetTime;\r\n\r\n        // Set up buffer source\r\n        var source = context.createBufferSource();\r\n        source.connect(context.destination);\r\n\r\n        // Use noteOn() instead of start() if necessary\r\n        if (!source.start)\r\n            source.start = source.noteOn;\r\n\r\n        // Schedule packet\r\n        source.buffer = toAudioBuffer(packet);\r\n        source.start(nextPacketTime);\r\n\r\n        // Update timeline by duration of scheduled packet\r\n        nextPacketTime += packet.length / format.channels / format.rate;\r\n\r\n    };\r\n\r\n    /** @override */\r\n    this.sync = function sync() {\r\n\r\n        // Calculate elapsed time since last sync\r\n        var now = context.currentTime;\r\n\r\n        // Reschedule future playback time such that playback latency is\r\n        // bounded within a reasonable latency threshold\r\n        nextPacketTime = Math.min(nextPacketTime, now + maxLatency);\r\n\r\n    };\r\n\r\n};\r\n\r\nGuacamole.RawAudioPlayer.prototype = new Guacamole.AudioPlayer();\r\n\r\n/**\r\n * Determines whether the given mimetype is supported by\r\n * Guacamole.RawAudioPlayer.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype to check.\r\n *\r\n * @returns {Boolean}\r\n *     true if the given mimetype is supported by Guacamole.RawAudioPlayer,\r\n *     false otherwise.\r\n */\r\nGuacamole.RawAudioPlayer.isSupportedType = function isSupportedType(mimetype) {\r\n\r\n    // No supported types if no Web Audio API\r\n    if (!Guacamole.AudioContextFactory.getAudioContext())\r\n        return false;\r\n\r\n    return Guacamole.RawAudioFormat.parse(mimetype) !== null;\r\n\r\n};\r\n\r\n/**\r\n * Returns a list of all mimetypes supported by Guacamole.RawAudioPlayer. Only\r\n * the core mimetypes themselves will be listed. Any mimetype parameters, even\r\n * required ones, will not be included in the list. For example, \"audio/L8\" is\r\n * a raw audio mimetype that may be supported, but it is invalid without\r\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\r\n * however (see https://tools.ietf.org/html/rfc4856).\r\n *\r\n * @returns {String[]}\r\n *     A list of all mimetypes supported by Guacamole.RawAudioPlayer, excluding\r\n *     any parameters. If the necessary JavaScript APIs for playing raw audio\r\n *     are absent, this list will be empty.\r\n */\r\nGuacamole.RawAudioPlayer.getSupportedTypes = function getSupportedTypes() {\r\n\r\n    // No supported types if no Web Audio API\r\n    if (!Guacamole.AudioContextFactory.getAudioContext())\r\n        return [];\r\n\r\n    // We support 8-bit and 16-bit raw PCM\r\n    return [\r\n        'audio/L8',\r\n        'audio/L16'\r\n    ];\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Abstract audio recorder which streams arbitrary audio data to an underlying\r\n * Guacamole.OutputStream. It is up to implementations of this class to provide\r\n * some means of handling this Guacamole.OutputStream. Data produced by the\r\n * recorder is to be sent along the provided stream immediately.\r\n *\r\n * @constructor\r\n */\r\nGuacamole.AudioRecorder = function AudioRecorder() {\r\n\r\n    /**\r\n     * Callback which is invoked when the audio recording process has stopped\r\n     * and the underlying Guacamole stream has been closed normally. Audio will\r\n     * only resume recording if a new Guacamole.AudioRecorder is started. This\r\n     * Guacamole.AudioRecorder instance MAY NOT be reused.\r\n     *\r\n     * @event\r\n     */\r\n    this.onclose = null;\r\n\r\n    /**\r\n     * Callback which is invoked when the audio recording process cannot\r\n     * continue due to an error, if it has started at all. The underlying\r\n     * Guacamole stream is automatically closed. Future attempts to record\r\n     * audio should not be made, and this Guacamole.AudioRecorder instance\r\n     * MAY NOT be reused.\r\n     *\r\n     * @event\r\n     */\r\n    this.onerror = null;\r\n\r\n};\r\n\r\n/**\r\n * Determines whether the given mimetype is supported by any built-in\r\n * implementation of Guacamole.AudioRecorder, and thus will be properly handled\r\n * by Guacamole.AudioRecorder.getInstance().\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype to check.\r\n *\r\n * @returns {Boolean}\r\n *     true if the given mimetype is supported by any built-in\r\n *     Guacamole.AudioRecorder, false otherwise.\r\n */\r\nGuacamole.AudioRecorder.isSupportedType = function isSupportedType(mimetype) {\r\n\r\n    return Guacamole.RawAudioRecorder.isSupportedType(mimetype);\r\n\r\n};\r\n\r\n/**\r\n * Returns a list of all mimetypes supported by any built-in\r\n * Guacamole.AudioRecorder, in rough order of priority. Beware that only the\r\n * core mimetypes themselves will be listed. Any mimetype parameters, even\r\n * required ones, will not be included in the list. For example, \"audio/L8\" is\r\n * a supported raw audio mimetype that is supported, but it is invalid without\r\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\r\n * however (see https://tools.ietf.org/html/rfc4856).\r\n *\r\n * @returns {String[]}\r\n *     A list of all mimetypes supported by any built-in\r\n *     Guacamole.AudioRecorder, excluding any parameters.\r\n */\r\nGuacamole.AudioRecorder.getSupportedTypes = function getSupportedTypes() {\r\n\r\n    return Guacamole.RawAudioRecorder.getSupportedTypes();\r\n\r\n};\r\n\r\n/**\r\n * Returns an instance of Guacamole.AudioRecorder providing support for the\r\n * given audio format. If support for the given audio format is not available,\r\n * null is returned.\r\n *\r\n * @param {Guacamole.OutputStream} stream\r\n *     The Guacamole.OutputStream to send audio data through.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype of the audio data to be sent along the provided stream.\r\n *\r\n * @return {Guacamole.AudioRecorder}\r\n *     A Guacamole.AudioRecorder instance supporting the given mimetype and\r\n *     writing to the given stream, or null if support for the given mimetype\r\n *     is absent.\r\n */\r\nGuacamole.AudioRecorder.getInstance = function getInstance(stream, mimetype) {\r\n\r\n    // Use raw audio recorder if possible\r\n    if (Guacamole.RawAudioRecorder.isSupportedType(mimetype))\r\n        return new Guacamole.RawAudioRecorder(stream, mimetype);\r\n\r\n    // No support for given mimetype\r\n    return null;\r\n\r\n};\r\n\r\n/**\r\n * Implementation of Guacamole.AudioRecorder providing support for raw PCM\r\n * format audio. This recorder relies only on the Web Audio API and does not\r\n * require any browser-level support for its audio formats.\r\n *\r\n * @constructor\r\n * @augments Guacamole.AudioRecorder\r\n * @param {Guacamole.OutputStream} stream\r\n *     The Guacamole.OutputStream to write audio data to.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype of the audio data to send along the provided stream, which\r\n *     must be a \"audio/L8\" or \"audio/L16\" mimetype with necessary parameters,\r\n *     such as: \"audio/L16;rate=44100,channels=2\".\r\n */\r\nGuacamole.RawAudioRecorder = function RawAudioRecorder(stream, mimetype) {\r\n\r\n    /**\r\n     * Reference to this RawAudioRecorder.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.RawAudioRecorder}\r\n     */\r\n    var recorder = this;\r\n\r\n    /**\r\n     * The size of audio buffer to request from the Web Audio API when\r\n     * recording or processing audio, in sample-frames. This must be a power of\r\n     * two between 256 and 16384 inclusive, as required by\r\n     * AudioContext.createScriptProcessor().\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var BUFFER_SIZE = 2048;\r\n\r\n    /**\r\n     * The window size to use when applying Lanczos interpolation, commonly\r\n     * denoted by the variable \"a\".\r\n     * See: https://en.wikipedia.org/wiki/Lanczos_resampling\r\n     *\r\n     * @private\r\n     * @contant\r\n     * @type Number\r\n     */\r\n    var LANCZOS_WINDOW_SIZE = 3;\r\n\r\n    /**\r\n     * The format of audio this recorder will encode.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.RawAudioFormat}\r\n     */\r\n    var format = Guacamole.RawAudioFormat.parse(mimetype);\r\n\r\n    /**\r\n     * An instance of a Web Audio API AudioContext object, or null if the\r\n     * Web Audio API is not supported.\r\n     *\r\n     * @private\r\n     * @type {AudioContext}\r\n     */\r\n    var context = Guacamole.AudioContextFactory.getAudioContext();\r\n\r\n    // Some browsers do not implement navigator.mediaDevices - this\r\n    // shims in this functionality to ensure code compatibility.\r\n    if (!navigator.mediaDevices)\r\n        navigator.mediaDevices = {};\r\n\r\n    // Browsers that either do not implement navigator.mediaDevices\r\n    // at all or do not implement it completely need the getUserMedia\r\n    // method defined.  This shims in this function by detecting\r\n    // one of the supported legacy methods.\r\n    if (!navigator.mediaDevices.getUserMedia)\r\n        navigator.mediaDevices.getUserMedia = (navigator.getUserMedia\r\n                || navigator.webkitGetUserMedia\r\n                || navigator.mozGetUserMedia\r\n                || navigator.msGetUserMedia).bind(navigator);\r\n\r\n    /**\r\n     * Guacamole.ArrayBufferWriter wrapped around the audio output stream\r\n     * provided when this Guacamole.RawAudioRecorder was created.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.ArrayBufferWriter}\r\n     */\r\n    var writer = new Guacamole.ArrayBufferWriter(stream);\r\n\r\n    /**\r\n     * The type of typed array that will be used to represent each audio packet\r\n     * internally. This will be either Int8Array or Int16Array, depending on\r\n     * whether the raw audio format is 8-bit or 16-bit.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     */\r\n    var SampleArray = (format.bytesPerSample === 1) ? window.Int8Array : window.Int16Array;\r\n\r\n    /**\r\n     * The maximum absolute value of any sample within a raw audio packet sent\r\n     * by this audio recorder. This depends only on the size of each sample,\r\n     * and will be 128 for 8-bit audio and 32768 for 16-bit audio.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var maxSampleValue = (format.bytesPerSample === 1) ? 128 : 32768;\r\n\r\n    /**\r\n     * The total number of audio samples read from the local audio input device\r\n     * over the life of this audio recorder.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var readSamples = 0;\r\n\r\n    /**\r\n     * The total number of audio samples written to the underlying Guacamole\r\n     * connection over the life of this audio recorder.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var writtenSamples = 0;\r\n\r\n    /**\r\n     * The audio stream provided by the browser, if allowed. If no stream has\r\n     * yet been received, this will be null.\r\n     *\r\n     * @type MediaStream\r\n     */\r\n    var mediaStream = null;\r\n\r\n    /**\r\n     * The source node providing access to the local audio input device.\r\n     *\r\n     * @private\r\n     * @type {MediaStreamAudioSourceNode}\r\n     */\r\n    var source = null;\r\n\r\n    /**\r\n     * The script processing node which receives audio input from the media\r\n     * stream source node as individual audio buffers.\r\n     *\r\n     * @private\r\n     * @type {ScriptProcessorNode}\r\n     */\r\n    var processor = null;\r\n\r\n    /**\r\n     * The normalized sinc function. The normalized sinc function is defined as\r\n     * 1 for x=0 and sin(PI * x) / (PI * x) for all other values of x.\r\n     *\r\n     * See: https://en.wikipedia.org/wiki/Sinc_function\r\n     *\r\n     * @private\r\n     * @param {Number} x\r\n     *     The point at which the normalized sinc function should be computed.\r\n     *\r\n     * @returns {Number}\r\n     *     The value of the normalized sinc function at x.\r\n     */\r\n    var sinc = function sinc(x) {\r\n\r\n        // The value of sinc(0) is defined as 1\r\n        if (x === 0)\r\n            return 1;\r\n\r\n        // Otherwise, normlized sinc(x) is sin(PI * x) / (PI * x)\r\n        var piX = Math.PI * x;\r\n        return Math.sin(piX) / piX;\r\n\r\n    };\r\n\r\n    /**\r\n     * Calculates the value of the Lanczos kernal at point x for a given window\r\n     * size. See: https://en.wikipedia.org/wiki/Lanczos_resampling\r\n     *\r\n     * @private\r\n     * @param {Number} x\r\n     *     The point at which the value of the Lanczos kernel should be\r\n     *     computed.\r\n     *\r\n     * @param {Number} a\r\n     *     The window size to use for the Lanczos kernel.\r\n     *\r\n     * @returns {Number}\r\n     *     The value of the Lanczos kernel at the given point for the given\r\n     *     window size.\r\n     */\r\n    var lanczos = function lanczos(x, a) {\r\n\r\n        // Lanczos is sinc(x) * sinc(x / a) for -a < x < a ...\r\n        if (-a < x && x < a)\r\n            return sinc(x) * sinc(x / a);\r\n\r\n        // ... and 0 otherwise\r\n        return 0;\r\n\r\n    };\r\n\r\n    /**\r\n     * Determines the value of the waveform represented by the audio data at\r\n     * the given location. If the value cannot be determined exactly as it does\r\n     * not correspond to an exact sample within the audio data, the value will\r\n     * be derived through interpolating nearby samples.\r\n     *\r\n     * @private\r\n     * @param {Float32Array} audioData\r\n     *     An array of audio data, as returned by AudioBuffer.getChannelData().\r\n     *\r\n     * @param {Number} t\r\n     *     The relative location within the waveform from which the value\r\n     *     should be retrieved, represented as a floating point number between\r\n     *     0 and 1 inclusive, where 0 represents the earliest point in time and\r\n     *     1 represents the latest.\r\n     *\r\n     * @returns {Number}\r\n     *     The value of the waveform at the given location.\r\n     */\r\n    var interpolateSample = function getValueAt(audioData, t) {\r\n\r\n        // Convert [0, 1] range to [0, audioData.length - 1]\r\n        var index = (audioData.length - 1) * t;\r\n\r\n        // Determine the start and end points for the summation used by the\r\n        // Lanczos interpolation algorithm (see: https://en.wikipedia.org/wiki/Lanczos_resampling)\r\n        var start = Math.floor(index) - LANCZOS_WINDOW_SIZE + 1;\r\n        var end = Math.floor(index) + LANCZOS_WINDOW_SIZE;\r\n\r\n        // Calculate the value of the Lanczos interpolation function for the\r\n        // required range\r\n        var sum = 0;\r\n        for (var i = start; i <= end; i++) {\r\n            sum += (audioData[i] || 0) * lanczos(index - i, LANCZOS_WINDOW_SIZE);\r\n        }\r\n\r\n        return sum;\r\n\r\n    };\r\n\r\n    /**\r\n     * Converts the given AudioBuffer into an audio packet, ready for streaming\r\n     * along the underlying output stream. Unlike the raw audio packets used by\r\n     * this audio recorder, AudioBuffers require floating point samples and are\r\n     * split into isolated planes of channel-specific data.\r\n     *\r\n     * @private\r\n     * @param {AudioBuffer} audioBuffer\r\n     *     The Web Audio API AudioBuffer that should be converted to a raw\r\n     *     audio packet.\r\n     *\r\n     * @returns {SampleArray}\r\n     *     A new raw audio packet containing the audio data from the provided\r\n     *     AudioBuffer.\r\n     */\r\n    var toSampleArray = function toSampleArray(audioBuffer) {\r\n\r\n        // Track overall amount of data read\r\n        var inSamples = audioBuffer.length;\r\n        readSamples += inSamples;\r\n\r\n        // Calculate the total number of samples that should be written as of\r\n        // the audio data just received and adjust the size of the output\r\n        // packet accordingly\r\n        var expectedWrittenSamples = Math.round(readSamples * format.rate / audioBuffer.sampleRate);\r\n        var outSamples = expectedWrittenSamples - writtenSamples;\r\n\r\n        // Update number of samples written\r\n        writtenSamples += outSamples;\r\n\r\n        // Get array for raw PCM storage\r\n        var data = new SampleArray(outSamples * format.channels);\r\n\r\n        // Convert each channel\r\n        for (var channel = 0; channel < format.channels; channel++) {\r\n\r\n            var audioData = audioBuffer.getChannelData(channel);\r\n\r\n            // Fill array with data from audio buffer channel\r\n            var offset = channel;\r\n            for (var i = 0; i < outSamples; i++) {\r\n                data[offset] = interpolateSample(audioData, i / (outSamples - 1)) * maxSampleValue;\r\n                offset += format.channels;\r\n            }\r\n\r\n        }\r\n\r\n        return data;\r\n\r\n    };\r\n\r\n    /**\r\n     * getUserMedia() callback which handles successful retrieval of an\r\n     * audio stream (successful start of recording).\r\n     *\r\n     * @private\r\n     * @param {MediaStream} stream\r\n     *     A MediaStream which provides access to audio data read from the\r\n     *     user's local audio input device.\r\n     */\r\n    var streamReceived = function streamReceived(stream) {\r\n\r\n        // Create processing node which receives appropriately-sized audio buffers\r\n        processor = context.createScriptProcessor(BUFFER_SIZE, format.channels, format.channels);\r\n        processor.connect(context.destination);\r\n\r\n        // Send blobs when audio buffers are received\r\n        processor.onaudioprocess = function processAudio(e) {\r\n            writer.sendData(toSampleArray(e.inputBuffer).buffer);\r\n        };\r\n\r\n        // Connect processing node to user's audio input source\r\n        source = context.createMediaStreamSource(stream);\r\n        source.connect(processor);\r\n\r\n        // Attempt to explicitly resume AudioContext, as it may be paused\r\n        // by default\r\n        if (context.state === 'suspended')\r\n            context.resume();\r\n\r\n        // Save stream for later cleanup\r\n        mediaStream = stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * getUserMedia() callback which handles audio recording denial. The\r\n     * underlying Guacamole output stream is closed, and the failure to\r\n     * record is noted using onerror.\r\n     *\r\n     * @private\r\n     */\r\n    var streamDenied = function streamDenied() {\r\n\r\n        // Simply end stream if audio access is not allowed\r\n        writer.sendEnd();\r\n\r\n        // Notify of closure\r\n        if (recorder.onerror)\r\n            recorder.onerror();\r\n\r\n    };\r\n\r\n    /**\r\n     * Requests access to the user's microphone and begins capturing audio. All\r\n     * received audio data is resampled as necessary and forwarded to the\r\n     * Guacamole stream underlying this Guacamole.RawAudioRecorder. This\r\n     * function must be invoked ONLY ONCE per instance of\r\n     * Guacamole.RawAudioRecorder.\r\n     *\r\n     * @private\r\n     */\r\n    var beginAudioCapture = function beginAudioCapture() {\r\n\r\n        // Attempt to retrieve an audio input stream from the browser\r\n        var promise = navigator.mediaDevices.getUserMedia({\r\n            'audio' : true\r\n        }, streamReceived, streamDenied);\r\n\r\n        // Handle stream creation/rejection via Promise for newer versions of\r\n        // getUserMedia()\r\n        if (promise && promise.then)\r\n            promise.then(streamReceived, streamDenied);\r\n\r\n    };\r\n\r\n    /**\r\n     * Stops capturing audio, if the capture has started, freeing all associated\r\n     * resources. If the capture has not started, this function simply ends the\r\n     * underlying Guacamole stream.\r\n     *\r\n     * @private\r\n     */\r\n    var stopAudioCapture = function stopAudioCapture() {\r\n\r\n        // Disconnect media source node from script processor\r\n        if (source)\r\n            source.disconnect();\r\n\r\n        // Disconnect associated script processor node\r\n        if (processor)\r\n            processor.disconnect();\r\n\r\n        // Stop capture\r\n        if (mediaStream) {\r\n            var tracks = mediaStream.getTracks();\r\n            for (var i = 0; i < tracks.length; i++)\r\n                tracks[i].stop();\r\n        }\r\n\r\n        // Remove references to now-unneeded components\r\n        processor = null;\r\n        source = null;\r\n        mediaStream = null;\r\n\r\n        // End stream\r\n        writer.sendEnd();\r\n\r\n    };\r\n\r\n    // Once audio stream is successfully open, request and begin reading audio\r\n    writer.onack = function audioStreamAcknowledged(status) {\r\n\r\n        // Begin capture if successful response and not yet started\r\n        if (status.code === Guacamole.Status.Code.SUCCESS && !mediaStream)\r\n            beginAudioCapture();\r\n\r\n        // Otherwise stop capture and cease handling any further acks\r\n        else {\r\n\r\n            // Stop capturing audio\r\n            stopAudioCapture();\r\n            writer.onack = null;\r\n\r\n            // Notify if stream has closed normally\r\n            if (status.code === Guacamole.Status.Code.RESOURCE_CLOSED) {\r\n                if (recorder.onclose)\r\n                    recorder.onclose();\r\n            }\r\n\r\n            // Otherwise notify of closure due to error\r\n            else {\r\n                if (recorder.onerror)\r\n                    recorder.onerror();\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\nGuacamole.RawAudioRecorder.prototype = new Guacamole.AudioRecorder();\r\n\r\n/**\r\n * Determines whether the given mimetype is supported by\r\n * Guacamole.RawAudioRecorder.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype to check.\r\n *\r\n * @returns {Boolean}\r\n *     true if the given mimetype is supported by Guacamole.RawAudioRecorder,\r\n *     false otherwise.\r\n */\r\nGuacamole.RawAudioRecorder.isSupportedType = function isSupportedType(mimetype) {\r\n\r\n    // No supported types if no Web Audio API\r\n    if (!Guacamole.AudioContextFactory.getAudioContext())\r\n        return false;\r\n\r\n    return Guacamole.RawAudioFormat.parse(mimetype) !== null;\r\n\r\n};\r\n\r\n/**\r\n * Returns a list of all mimetypes supported by Guacamole.RawAudioRecorder. Only\r\n * the core mimetypes themselves will be listed. Any mimetype parameters, even\r\n * required ones, will not be included in the list. For example, \"audio/L8\" is\r\n * a raw audio mimetype that may be supported, but it is invalid without\r\n * additional parameters. Something like \"audio/L8;rate=44100\" would be valid,\r\n * however (see https://tools.ietf.org/html/rfc4856).\r\n *\r\n * @returns {String[]}\r\n *     A list of all mimetypes supported by Guacamole.RawAudioRecorder,\r\n *     excluding any parameters. If the necessary JavaScript APIs for recording\r\n *     raw audio are absent, this list will be empty.\r\n */\r\nGuacamole.RawAudioRecorder.getSupportedTypes = function getSupportedTypes() {\r\n\r\n    // No supported types if no Web Audio API\r\n    if (!Guacamole.AudioContextFactory.getAudioContext())\r\n        return [];\r\n\r\n    // We support 8-bit and 16-bit raw PCM\r\n    return [\r\n        'audio/L8',\r\n        'audio/L16'\r\n    ];\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A reader which automatically handles the given input stream, assembling all\r\n * received blobs into a single blob by appending them to each other in order.\r\n * Note that this object will overwrite any installed event handlers on the\r\n * given Guacamole.InputStream.\r\n * \r\n * @constructor\r\n * @param {Guacamole.InputStream} stream The stream that data will be read\r\n *                                       from.\r\n * @param {String} mimetype The mimetype of the blob being built.\r\n */\r\nGuacamole.BlobReader = function(stream, mimetype) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.InputStream.\r\n     * @private\r\n     */\r\n    var guac_reader = this;\r\n\r\n    /**\r\n     * The length of this Guacamole.InputStream in bytes.\r\n     * @private\r\n     */\r\n    var length = 0;\r\n\r\n    // Get blob builder\r\n    var blob_builder;\r\n    if      (window.BlobBuilder)       blob_builder = new BlobBuilder();\r\n    else if (window.WebKitBlobBuilder) blob_builder = new WebKitBlobBuilder();\r\n    else if (window.MozBlobBuilder)    blob_builder = new MozBlobBuilder();\r\n    else\r\n        blob_builder = new (function() {\r\n\r\n            var blobs = [];\r\n\r\n            /** @ignore */\r\n            this.append = function(data) {\r\n                blobs.push(new Blob([data], {\"type\": mimetype}));\r\n            };\r\n\r\n            /** @ignore */\r\n            this.getBlob = function() {\r\n                return new Blob(blobs, {\"type\": mimetype});\r\n            };\r\n\r\n        })();\r\n\r\n    // Append received blobs\r\n    stream.onblob = function(data) {\r\n\r\n        // Convert to ArrayBuffer\r\n        var binary = window.atob(data);\r\n        var arrayBuffer = new ArrayBuffer(binary.length);\r\n        var bufferView = new Uint8Array(arrayBuffer);\r\n\r\n        for (var i=0; i<binary.length; i++)\r\n            bufferView[i] = binary.charCodeAt(i);\r\n\r\n        blob_builder.append(arrayBuffer);\r\n        length += arrayBuffer.byteLength;\r\n\r\n        // Call handler, if present\r\n        if (guac_reader.onprogress)\r\n            guac_reader.onprogress(arrayBuffer.byteLength);\r\n\r\n        // Send success response\r\n        stream.sendAck(\"OK\", 0x0000);\r\n\r\n    };\r\n\r\n    // Simply call onend when end received\r\n    stream.onend = function() {\r\n        if (guac_reader.onend)\r\n            guac_reader.onend();\r\n    };\r\n\r\n    /**\r\n     * Returns the current length of this Guacamole.InputStream, in bytes.\r\n     * @return {Number} The current length of this Guacamole.InputStream.\r\n     */\r\n    this.getLength = function() {\r\n        return length;\r\n    };\r\n\r\n    /**\r\n     * Returns the contents of this Guacamole.BlobReader as a Blob.\r\n     * @return {Blob} The contents of this Guacamole.BlobReader.\r\n     */\r\n    this.getBlob = function() {\r\n        return blob_builder.getBlob();\r\n    };\r\n\r\n    /**\r\n     * Fired once for every blob of data received.\r\n     * \r\n     * @event\r\n     * @param {Number} length The number of bytes received.\r\n     */\r\n    this.onprogress = null;\r\n\r\n    /**\r\n     * Fired once this stream is finished and no further data will be written.\r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n};\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A writer which automatically writes to the given output stream with the\r\n * contents of provided Blob objects.\r\n *\r\n * @constructor\r\n * @param {Guacamole.OutputStream} stream\r\n *     The stream that data will be written to.\r\n */\r\nGuacamole.BlobWriter = function BlobWriter(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.BlobWriter.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.BlobWriter}\r\n     */\r\n    var guacWriter = this;\r\n\r\n    /**\r\n     * Wrapped Guacamole.ArrayBufferWriter which will be used to send any\r\n     * provided file data.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.ArrayBufferWriter}\r\n     */\r\n    var arrayBufferWriter = new Guacamole.ArrayBufferWriter(stream);\r\n\r\n    // Initially, simply call onack for acknowledgements\r\n    arrayBufferWriter.onack = function(status) {\r\n        if (guacWriter.onack)\r\n            guacWriter.onack(status);\r\n    };\r\n\r\n    /**\r\n     * Browser-independent implementation of Blob.slice() which uses an end\r\n     * offset to determine the span of the resulting slice, rather than a\r\n     * length.\r\n     *\r\n     * @private\r\n     * @param {Blob} blob\r\n     *     The Blob to slice.\r\n     *\r\n     * @param {Number} start\r\n     *     The starting offset of the slice, in bytes, inclusive.\r\n     *\r\n     * @param {Number} end\r\n     *     The ending offset of the slice, in bytes, exclusive.\r\n     *\r\n     * @returns {Blob}\r\n     *     A Blob containing the data within the given Blob starting at\r\n     *     <code>start</code> and ending at <code>end - 1</code>.\r\n     */\r\n    var slice = function slice(blob, start, end) {\r\n\r\n        // Use prefixed implementations if necessary\r\n        var sliceImplementation = (\r\n                blob.slice\r\n             || blob.webkitSlice\r\n             || blob.mozSlice\r\n        ).bind(blob);\r\n\r\n        var length = end - start;\r\n\r\n        // The old Blob.slice() was length-based (not end-based). Try the\r\n        // length version first, if the two calls are not equivalent.\r\n        if (length !== end) {\r\n\r\n            // If the result of the slice() call matches the expected length,\r\n            // trust that result. It must be correct.\r\n            var sliceResult = sliceImplementation(start, length);\r\n            if (sliceResult.size === length)\r\n                return sliceResult;\r\n\r\n        }\r\n\r\n        // Otherwise, use the most-recent standard: end-based slice()\r\n        return sliceImplementation(start, end);\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends the contents of the given blob over the underlying stream.\r\n     *\r\n     * @param {Blob} blob\r\n     *     The blob to send.\r\n     */\r\n    this.sendBlob = function sendBlob(blob) {\r\n\r\n        var offset = 0;\r\n        var reader = new FileReader();\r\n\r\n        /**\r\n         * Reads the next chunk of the blob provided to\r\n         * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}. The chunk itself\r\n         * is read asynchronously, and will not be available until\r\n         * reader.onload fires.\r\n         *\r\n         * @private\r\n         */\r\n        var readNextChunk = function readNextChunk() {\r\n\r\n            // If no further chunks remain, inform of completion and stop\r\n            if (offset >= blob.size) {\r\n\r\n                // Fire completion event for completed blob\r\n                if (guacWriter.oncomplete)\r\n                    guacWriter.oncomplete(blob);\r\n\r\n                // No further chunks to read\r\n                return;\r\n\r\n            }\r\n\r\n            // Obtain reference to next chunk as a new blob\r\n            var chunk = slice(blob, offset, offset + arrayBufferWriter.blobLength);\r\n            offset += arrayBufferWriter.blobLength;\r\n\r\n            // Attempt to read the blob contents represented by the blob into\r\n            // a new array buffer\r\n            reader.readAsArrayBuffer(chunk);\r\n\r\n        };\r\n\r\n        // Send each chunk over the stream, continue reading the next chunk\r\n        reader.onload = function chunkLoadComplete() {\r\n\r\n            // Send the successfully-read chunk\r\n            arrayBufferWriter.sendData(reader.result);\r\n\r\n            // Continue sending more chunks after the latest chunk is\r\n            // acknowledged\r\n            arrayBufferWriter.onack = function sendMoreChunks(status) {\r\n\r\n                if (guacWriter.onack)\r\n                    guacWriter.onack(status);\r\n\r\n                // Abort transfer if an error occurs\r\n                if (status.isError())\r\n                    return;\r\n\r\n                // Inform of blob upload progress via progress events\r\n                if (guacWriter.onprogress)\r\n                    guacWriter.onprogress(blob, offset - arrayBufferWriter.blobLength);\r\n\r\n                // Queue the next chunk for reading\r\n                readNextChunk();\r\n\r\n            };\r\n\r\n        };\r\n\r\n        // If an error prevents further reading, inform of error and stop\r\n        reader.onerror = function chunkLoadFailed() {\r\n\r\n            // Fire error event, including the context of the error\r\n            if (guacWriter.onerror)\r\n                guacWriter.onerror(blob, offset, reader.error);\r\n\r\n        };\r\n\r\n        // Begin reading the first chunk\r\n        readNextChunk();\r\n\r\n    };\r\n\r\n    /**\r\n     * Signals that no further text will be sent, effectively closing the\r\n     * stream.\r\n     */\r\n    this.sendEnd = function sendEnd() {\r\n        arrayBufferWriter.sendEnd();\r\n    };\r\n\r\n    /**\r\n     * Fired for received data, if acknowledged by the server.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.Status} status\r\n     *     The status of the operation.\r\n     */\r\n    this.onack = null;\r\n\r\n    /**\r\n     * Fired when an error occurs reading a blob passed to\r\n     * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}. The transfer for the\r\n     * the given blob will cease, but the stream will remain open.\r\n     *\r\n     * @event\r\n     * @param {Blob} blob\r\n     *     The blob that was being read when the error occurred.\r\n     *\r\n     * @param {Number} offset\r\n     *     The offset of the failed read attempt within the blob, in bytes.\r\n     *\r\n     * @param {DOMError} error\r\n     *     The error that occurred.\r\n     */\r\n    this.onerror = null;\r\n\r\n    /**\r\n     * Fired for each successfully-read chunk of data as a blob is being sent\r\n     * via [sendBlob()]{@link Guacamole.BlobWriter#sendBlob}.\r\n     *\r\n     * @event\r\n     * @param {Blob} blob\r\n     *     The blob that is being read.\r\n     *\r\n     * @param {Number} offset\r\n     *     The offset of the read that just succeeded.\r\n     */\r\n    this.onprogress = null;\r\n\r\n    /**\r\n     * Fired when a blob passed to\r\n     * [sendBlob()]{@link Guacamole.BlobWriter#sendBlob} has finished being\r\n     * sent.\r\n     *\r\n     * @event\r\n     * @param {Blob} blob\r\n     *     The blob that was sent.\r\n     */\r\n    this.oncomplete = null;\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Guacamole protocol client. Given a {@link Guacamole.Tunnel},\r\n * automatically handles incoming and outgoing Guacamole instructions via the\r\n * provided tunnel, updating its display using one or more canvas elements.\r\n * \r\n * @constructor\r\n * @param {Guacamole.Tunnel} tunnel The tunnel to use to send and receive\r\n *                                  Guacamole instructions.\r\n */\r\nGuacamole.Client = function(tunnel) {\r\n\r\n    var guac_client = this;\r\n\r\n    var STATE_IDLE          = 0;\r\n    var STATE_CONNECTING    = 1;\r\n    var STATE_WAITING       = 2;\r\n    var STATE_CONNECTED     = 3;\r\n    var STATE_DISCONNECTING = 4;\r\n    var STATE_DISCONNECTED  = 5;\r\n\r\n    var currentState = STATE_IDLE;\r\n    \r\n    var currentTimestamp = 0;\r\n    var pingInterval = null;\r\n\r\n    /**\r\n     * Translation from Guacamole protocol line caps to Layer line caps.\r\n     * @private\r\n     */\r\n    var lineCap = {\r\n        0: \"butt\",\r\n        1: \"round\",\r\n        2: \"square\"\r\n    };\r\n\r\n    /**\r\n     * Translation from Guacamole protocol line caps to Layer line caps.\r\n     * @private\r\n     */\r\n    var lineJoin = {\r\n        0: \"bevel\",\r\n        1: \"miter\",\r\n        2: \"round\"\r\n    };\r\n\r\n    /**\r\n     * The underlying Guacamole display.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.Display}\r\n     */\r\n    var display = new Guacamole.Display();\r\n\r\n    /**\r\n     * All available layers and buffers\r\n     *\r\n     * @private\r\n     * @type {Object.<Number, (Guacamole.Display.VisibleLayer|Guacamole.Layer)>}\r\n     */\r\n    var layers = {};\r\n    \r\n    /**\r\n     * All audio players currently in use by the client. Initially, this will\r\n     * be empty, but audio players may be allocated by the server upon request.\r\n     *\r\n     * @private\r\n     * @type {Object.<Number, Guacamole.AudioPlayer>}\r\n     */\r\n    var audioPlayers = {};\r\n\r\n    /**\r\n     * All video players currently in use by the client. Initially, this will\r\n     * be empty, but video players may be allocated by the server upon request.\r\n     *\r\n     * @private\r\n     * @type {Object.<Number, Guacamole.VideoPlayer>}\r\n     */\r\n    var videoPlayers = {};\r\n\r\n    // No initial parsers\r\n    var parsers = [];\r\n\r\n    // No initial streams \r\n    var streams = [];\r\n\r\n    /**\r\n     * All current objects. The index of each object is dictated by the\r\n     * Guacamole server.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.Object[]}\r\n     */\r\n    var objects = [];\r\n\r\n    // Pool of available stream indices\r\n    var stream_indices = new Guacamole.IntegerPool();\r\n\r\n    // Array of allocated output streams by index\r\n    var output_streams = [];\r\n\r\n    function setState(state) {\r\n        if (state != currentState) {\r\n            currentState = state;\r\n            if (guac_client.onstatechange)\r\n                guac_client.onstatechange(currentState);\r\n        }\r\n    }\r\n\r\n    function isConnected() {\r\n        return currentState == STATE_CONNECTED\r\n            || currentState == STATE_WAITING;\r\n    }\r\n\r\n    /**\r\n     * Produces an opaque representation of Guacamole.Client state which can be\r\n     * later imported through a call to importState(). This object is\r\n     * effectively an independent, compressed snapshot of protocol and display\r\n     * state. Invoking this function implicitly flushes the display.\r\n     *\r\n     * @param {function} callback\r\n     *     Callback which should be invoked once the state object is ready. The\r\n     *     state object will be passed to the callback as the sole parameter.\r\n     *     This callback may be invoked immediately, or later as the display\r\n     *     finishes rendering and becomes ready.\r\n     */\r\n    this.exportState = function exportState(callback) {\r\n\r\n        // Start with empty state\r\n        var state = {\r\n            'currentState' : currentState,\r\n            'currentTimestamp' : currentTimestamp,\r\n            'layers' : {}\r\n        };\r\n\r\n        var layersSnapshot = {};\r\n\r\n        // Make a copy of all current layers (protocol state)\r\n        for (var key in layers) {\r\n            layersSnapshot[key] = layers[key];\r\n        }\r\n\r\n        // Populate layers once data is available (display state, requires flush)\r\n        display.flush(function populateLayers() {\r\n\r\n            // Export each defined layer/buffer\r\n            for (var key in layersSnapshot) {\r\n\r\n                var index = parseInt(key);\r\n                var layer = layersSnapshot[key];\r\n                var canvas = layer.toCanvas();\r\n\r\n                // Store layer/buffer dimensions\r\n                var exportLayer = {\r\n                    'width'  : layer.width,\r\n                    'height' : layer.height\r\n                };\r\n\r\n                // Store layer/buffer image data, if it can be generated\r\n                if (layer.width && layer.height)\r\n                    exportLayer.url = canvas.toDataURL('image/png');\r\n\r\n                // Add layer properties if not a buffer nor the default layer\r\n                if (index > 0) {\r\n                    exportLayer.x = layer.x;\r\n                    exportLayer.y = layer.y;\r\n                    exportLayer.z = layer.z;\r\n                    exportLayer.alpha = layer.alpha;\r\n                    exportLayer.matrix = layer.matrix;\r\n                    exportLayer.parent = getLayerIndex(layer.parent);\r\n                }\r\n\r\n                // Store exported layer\r\n                state.layers[key] = exportLayer;\r\n\r\n            }\r\n\r\n            // Invoke callback now that the state is ready\r\n            callback(state);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Restores Guacamole.Client protocol and display state based on an opaque\r\n     * object from a prior call to exportState(). The Guacamole.Client instance\r\n     * used to export that state need not be the same as this instance.\r\n     *\r\n     * @param {Object} state\r\n     *     An opaque representation of Guacamole.Client state from a prior call\r\n     *     to exportState().\r\n     *\r\n     * @param {function} [callback]\r\n     *     The function to invoke when state has finished being imported. This\r\n     *     may happen immediately, or later as images within the provided state\r\n     *     object are loaded.\r\n     */\r\n    this.importState = function importState(state, callback) {\r\n\r\n        var key;\r\n        var index;\r\n\r\n        currentState = state.currentState;\r\n        currentTimestamp = state.currentTimestamp;\r\n\r\n        // Dispose of all layers\r\n        for (key in layers) {\r\n            index = parseInt(key);\r\n            if (index > 0)\r\n                display.dispose(layers[key]);\r\n        }\r\n\r\n        layers = {};\r\n\r\n        // Import state of each layer/buffer\r\n        for (key in state.layers) {\r\n\r\n            index = parseInt(key);\r\n\r\n            var importLayer = state.layers[key];\r\n            var layer = getLayer(index);\r\n\r\n            // Reset layer size\r\n            display.resize(layer, importLayer.width, importLayer.height);\r\n\r\n            // Initialize new layer if it has associated data\r\n            if (importLayer.url) {\r\n                display.setChannelMask(layer, Guacamole.Layer.SRC);\r\n                display.draw(layer, 0, 0, importLayer.url);\r\n            }\r\n\r\n            // Set layer-specific properties if not a buffer nor the default layer\r\n            if (index > 0 && importLayer.parent >= 0) {\r\n\r\n                // Apply layer position and set parent\r\n                var parent = getLayer(importLayer.parent);\r\n                display.move(layer, parent, importLayer.x, importLayer.y, importLayer.z);\r\n\r\n                // Set layer transparency\r\n                display.shade(layer, importLayer.alpha);\r\n\r\n                // Apply matrix transform\r\n                var matrix = importLayer.matrix;\r\n                display.distort(layer,\r\n                    matrix[0], matrix[1], matrix[2],\r\n                    matrix[3], matrix[4], matrix[5]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Flush changes to display\r\n        display.flush(callback);\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the underlying display of this Guacamole.Client. The display\r\n     * contains an Element which can be added to the DOM, causing the\r\n     * display to become visible.\r\n     * \r\n     * @return {Guacamole.Display} The underlying display of this\r\n     *                             Guacamole.Client.\r\n     */\r\n    this.getDisplay = function() {\r\n        return display;\r\n    };\r\n\r\n    /**\r\n     * Sends the current size of the screen.\r\n     * \r\n     * @param {Number} width The width of the screen.\r\n     * @param {Number} height The height of the screen.\r\n     */\r\n    this.sendSize = function(width, height) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        tunnel.sendMessage(\"size\", width, height);\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends a key event having the given properties as if the user\r\n     * pressed or released a key.\r\n     * \r\n     * @param {Boolean} pressed Whether the key is pressed (true) or released\r\n     *                          (false).\r\n     * @param {Number} keysym The keysym of the key being pressed or released.\r\n     */\r\n    this.sendKeyEvent = function(pressed, keysym) {\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        tunnel.sendMessage(\"key\", keysym, pressed);\r\n    };\r\n\r\n    /**\r\n     * Sends a mouse event having the properties provided by the given mouse\r\n     * state.\r\n     * \r\n     * @param {Guacamole.Mouse.State} mouseState The state of the mouse to send\r\n     *                                           in the mouse event.\r\n     */\r\n    this.sendMouseState = function(mouseState) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        // Update client-side cursor\r\n        display.moveCursor(\r\n            Math.floor(mouseState.x),\r\n            Math.floor(mouseState.y)\r\n        );\r\n\r\n        // Build mask\r\n        var buttonMask = 0;\r\n        if (mouseState.left)   buttonMask |= 1;\r\n        if (mouseState.middle) buttonMask |= 2;\r\n        if (mouseState.right)  buttonMask |= 4;\r\n        if (mouseState.up)     buttonMask |= 8;\r\n        if (mouseState.down)   buttonMask |= 16;\r\n\r\n        // Send message\r\n        tunnel.sendMessage(\"mouse\", Math.floor(mouseState.x), Math.floor(mouseState.y), buttonMask);\r\n    };\r\n\r\n    /**\r\n     * Allocates an available stream index and creates a new\r\n     * Guacamole.OutputStream using that index, associating the resulting\r\n     * stream with this Guacamole.Client. Note that this stream will not yet\r\n     * exist as far as the other end of the Guacamole connection is concerned.\r\n     * Streams exist within the Guacamole protocol only when referenced by an\r\n     * instruction which creates the stream, such as a \"clipboard\", \"file\", or\r\n     * \"pipe\" instruction.\r\n     *\r\n     * @returns {Guacamole.OutputStream}\r\n     *     A new Guacamole.OutputStream with a newly-allocated index and\r\n     *     associated with this Guacamole.Client.\r\n     */\r\n    this.createOutputStream = function createOutputStream() {\r\n\r\n        // Allocate index\r\n        var index = stream_indices.next();\r\n\r\n        // Return new stream\r\n        var stream = output_streams[index] = new Guacamole.OutputStream(guac_client, index);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Opens a new audio stream for writing, where audio data having the give\r\n     * mimetype will be sent along the returned stream. The instruction\r\n     * necessary to create this stream will automatically be sent.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the audio data that will be sent along the returned\r\n     *     stream.\r\n     *\r\n     * @return {Guacamole.OutputStream}\r\n     *     The created audio stream.\r\n     */\r\n    this.createAudioStream = function(mimetype) {\r\n\r\n        // Allocate and associate stream with audio metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"audio\", stream.index, mimetype);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Opens a new file for writing, having the given index, mimetype and\r\n     * filename. The instruction necessary to create this stream will\r\n     * automatically be sent.\r\n     *\r\n     * @param {String} mimetype The mimetype of the file being sent.\r\n     * @param {String} filename The filename of the file being sent.\r\n     * @return {Guacamole.OutputStream} The created file stream.\r\n     */\r\n    this.createFileStream = function(mimetype, filename) {\r\n\r\n        // Allocate and associate stream with file metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"file\", stream.index, mimetype, filename);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Opens a new pipe for writing, having the given name and mimetype. The\r\n     * instruction necessary to create this stream will automatically be sent.\r\n     *\r\n     * @param {String} mimetype The mimetype of the data being sent.\r\n     * @param {String} name The name of the pipe.\r\n     * @return {Guacamole.OutputStream} The created file stream.\r\n     */\r\n    this.createPipeStream = function(mimetype, name) {\r\n\r\n        // Allocate and associate stream with pipe metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"pipe\", stream.index, mimetype, name);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Opens a new clipboard object for writing, having the given mimetype. The\r\n     * instruction necessary to create this stream will automatically be sent.\r\n     *\r\n     * @param {String} mimetype The mimetype of the data being sent.\r\n     * @param {String} name The name of the pipe.\r\n     * @return {Guacamole.OutputStream} The created file stream.\r\n     */\r\n    this.createClipboardStream = function(mimetype) {\r\n\r\n        // Allocate and associate stream with clipboard metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"clipboard\", stream.index, mimetype);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Opens a new argument value stream for writing, having the given\r\n     * parameter name and mimetype, requesting that the connection parameter\r\n     * with the given name be updated to the value described by the contents\r\n     * of the following stream. The instruction necessary to create this stream\r\n     * will automatically be sent.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the data being sent.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the connection parameter to attempt to update.\r\n     *\r\n     * @return {Guacamole.OutputStream}\r\n     *     The created argument value stream.\r\n     */\r\n    this.createArgumentValueStream = function createArgumentValueStream(mimetype, name) {\r\n\r\n        // Allocate and associate stream with argument value metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"argv\", stream.index, mimetype, name);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates a new output stream associated with the given object and having\r\n     * the given mimetype and name. The legality of a mimetype and name is\r\n     * dictated by the object itself. The instruction necessary to create this\r\n     * stream will automatically be sent.\r\n     *\r\n     * @param {Number} index\r\n     *     The index of the object for which the output stream is being\r\n     *     created.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the data which will be sent to the output stream.\r\n     *\r\n     * @param {String} name\r\n     *     The defined name of an output stream within the given object.\r\n     *\r\n     * @returns {Guacamole.OutputStream}\r\n     *     An output stream which will write blobs to the named output stream\r\n     *     of the given object.\r\n     */\r\n    this.createObjectOutputStream = function createObjectOutputStream(index, mimetype, name) {\r\n\r\n        // Allocate and ssociate stream with object metadata\r\n        var stream = guac_client.createOutputStream();\r\n        tunnel.sendMessage(\"put\", index, stream.index, mimetype, name);\r\n        return stream;\r\n\r\n    };\r\n\r\n    /**\r\n     * Requests read access to the input stream having the given name. If\r\n     * successful, a new input stream will be created.\r\n     *\r\n     * @param {Number} index\r\n     *     The index of the object from which the input stream is being\r\n     *     requested.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the input stream to request.\r\n     */\r\n    this.requestObjectInputStream = function requestObjectInputStream(index, name) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        tunnel.sendMessage(\"get\", index, name);\r\n    };\r\n\r\n    /**\r\n     * Acknowledge receipt of a blob on the stream with the given index.\r\n     * \r\n     * @param {Number} index The index of the stream associated with the\r\n     *                       received blob.\r\n     * @param {String} message A human-readable message describing the error\r\n     *                         or status.\r\n     * @param {Number} code The error code, if any, or 0 for success.\r\n     */\r\n    this.sendAck = function(index, message, code) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        tunnel.sendMessage(\"ack\", index, message, code);\r\n    };\r\n\r\n    /**\r\n     * Given the index of a file, writes a blob of data to that file.\r\n     * \r\n     * @param {Number} index The index of the file to write to.\r\n     * @param {String} data Base64-encoded data to write to the file.\r\n     */\r\n    this.sendBlob = function(index, data) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        tunnel.sendMessage(\"blob\", index, data);\r\n    };\r\n\r\n    /**\r\n     * Marks a currently-open stream as complete. The other end of the\r\n     * Guacamole connection will be notified via an \"end\" instruction that the\r\n     * stream is closed, and the index will be made available for reuse in\r\n     * future streams.\r\n     * \r\n     * @param {Number} index\r\n     *     The index of the stream to end.\r\n     */\r\n    this.endStream = function(index) {\r\n\r\n        // Do not send requests if not connected\r\n        if (!isConnected())\r\n            return;\r\n\r\n        // Explicitly close stream by sending \"end\" instruction\r\n        tunnel.sendMessage(\"end\", index);\r\n\r\n        // Free associated index and stream if they exist\r\n        if (output_streams[index]) {\r\n            stream_indices.free(index);\r\n            delete output_streams[index];\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Fired whenever the state of this Guacamole.Client changes.\r\n     * \r\n     * @event\r\n     * @param {Number} state The new state of the client.\r\n     */\r\n    this.onstatechange = null;\r\n\r\n    /**\r\n     * Fired when the remote client sends a name update.\r\n     * \r\n     * @event\r\n     * @param {String} name The new name of this client.\r\n     */\r\n    this.onname = null;\r\n\r\n    /**\r\n     * Fired when an error is reported by the remote client, and the connection\r\n     * is being closed.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Status} status A status object which describes the\r\n     *                                  error.\r\n     */\r\n    this.onerror = null;\r\n\r\n    /**\r\n     * Fired when a audio stream is created. The stream provided to this event\r\n     * handler will contain its own event handlers for received data.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.InputStream} stream\r\n     *     The stream that will receive audio data from the server.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the audio data which will be received.\r\n     *\r\n     * @return {Guacamole.AudioPlayer}\r\n     *     An object which implements the Guacamole.AudioPlayer interface and\r\n     *     has been initialied to play the data in the provided stream, or null\r\n     *     if the built-in audio players of the Guacamole client should be\r\n     *     used.\r\n     */\r\n    this.onaudio = null;\r\n\r\n    /**\r\n     * Fired when a video stream is created. The stream provided to this event\r\n     * handler will contain its own event handlers for received data.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.InputStream} stream\r\n     *     The stream that will receive video data from the server.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} layer\r\n     *     The destination layer on which the received video data should be\r\n     *     played. It is the responsibility of the Guacamole.VideoPlayer\r\n     *     implementation to play the received data within this layer.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the video data which will be received.\r\n     *\r\n     * @return {Guacamole.VideoPlayer}\r\n     *     An object which implements the Guacamole.VideoPlayer interface and\r\n     *     has been initialied to play the data in the provided stream, or null\r\n     *     if the built-in video players of the Guacamole client should be\r\n     *     used.\r\n     */\r\n    this.onvideo = null;\r\n\r\n    /**\r\n     * Fired when the current value of a connection parameter is being exposed\r\n     * by the server.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.InputStream} stream\r\n     *     The stream that will receive connection parameter data from the\r\n     *     server.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the data which will be received.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the connection parameter whose value is being exposed.\r\n     */\r\n    this.onargv = null;\r\n\r\n    /**\r\n     * Fired when the clipboard of the remote client is changing.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.InputStream} stream The stream that will receive\r\n     *                                       clipboard data from the server.\r\n     * @param {String} mimetype The mimetype of the data which will be received.\r\n     */\r\n    this.onclipboard = null;\r\n\r\n    /**\r\n     * Fired when a file stream is created. The stream provided to this event\r\n     * handler will contain its own event handlers for received data.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.InputStream} stream The stream that will receive data\r\n     *                                       from the server.\r\n     * @param {String} mimetype The mimetype of the file received.\r\n     * @param {String} filename The name of the file received.\r\n     */\r\n    this.onfile = null;\r\n\r\n    /**\r\n     * Fired when a filesystem object is created. The object provided to this\r\n     * event handler will contain its own event handlers and functions for\r\n     * requesting and handling data.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.Object} object\r\n     *     The created filesystem object.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the filesystem.\r\n     */\r\n    this.onfilesystem = null;\r\n\r\n    /**\r\n     * Fired when a pipe stream is created. The stream provided to this event\r\n     * handler will contain its own event handlers for received data;\r\n     * \r\n     * @event\r\n     * @param {Guacamole.InputStream} stream The stream that will receive data\r\n     *                                       from the server.\r\n     * @param {String} mimetype The mimetype of the data which will be received.\r\n     * @param {String} name The name of the pipe.\r\n     */\r\n    this.onpipe = null;\r\n    \r\n    /**\r\n     * Fired when a \"required\" instruction is received. A required instruction\r\n     * indicates that additional parameters are required for the connection to\r\n     * continue, such as user credentials.\r\n     * \r\n     * @event\r\n     * @param {String[]} parameters\r\n     *      The names of the connection parameters that are required to be\r\n     *      provided for the connection to continue.\r\n     */\r\n    this.onrequired = null;\r\n\r\n    /**\r\n     * Fired whenever a sync instruction is received from the server, indicating\r\n     * that the server is finished processing any input from the client and\r\n     * has sent any results.\r\n     * \r\n     * @event\r\n     * @param {Number} timestamp The timestamp associated with the sync\r\n     *                           instruction.\r\n     */\r\n    this.onsync = null;\r\n\r\n    /**\r\n     * Returns the layer with the given index, creating it if necessary.\r\n     * Positive indices refer to visible layers, an index of zero refers to\r\n     * the default layer, and negative indices refer to buffers.\r\n     *\r\n     * @private\r\n     * @param {Number} index\r\n     *     The index of the layer to retrieve.\r\n     *\r\n     * @return {Guacamole.Display.VisibleLayer|Guacamole.Layer}\r\n     *     The layer having the given index.\r\n     */\r\n    var getLayer = function getLayer(index) {\r\n\r\n        // Get layer, create if necessary\r\n        var layer = layers[index];\r\n        if (!layer) {\r\n\r\n            // Create layer based on index\r\n            if (index === 0)\r\n                layer = display.getDefaultLayer();\r\n            else if (index > 0)\r\n                layer = display.createLayer();\r\n            else\r\n                layer = display.createBuffer();\r\n                \r\n            // Add new layer\r\n            layers[index] = layer;\r\n\r\n        }\r\n\r\n        return layer;\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the index passed to getLayer() when the given layer was created.\r\n     * Positive indices refer to visible layers, an index of zero refers to the\r\n     * default layer, and negative indices refer to buffers.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer|Guacamole.Layer} layer\r\n     *     The layer whose index should be determined.\r\n     *\r\n     * @returns {Number}\r\n     *     The index of the given layer, or null if no such layer is associated\r\n     *     with this client.\r\n     */\r\n    var getLayerIndex = function getLayerIndex(layer) {\r\n\r\n        // Avoid searching if there clearly is no such layer\r\n        if (!layer)\r\n            return null;\r\n\r\n        // Search through each layer, returning the index of the given layer\r\n        // once found\r\n        for (var key in layers) {\r\n            if (layer === layers[key])\r\n                return parseInt(key);\r\n        }\r\n\r\n        // Otherwise, no such index\r\n        return null;\r\n\r\n    };\r\n\r\n    function getParser(index) {\r\n\r\n        var parser = parsers[index];\r\n\r\n        // If parser not yet created, create it, and tie to the\r\n        // oninstruction handler of the tunnel.\r\n        if (parser == null) {\r\n            parser = parsers[index] = new Guacamole.Parser();\r\n            parser.oninstruction = tunnel.oninstruction;\r\n        }\r\n\r\n        return parser;\r\n\r\n    }\r\n\r\n    /**\r\n     * Handlers for all defined layer properties.\r\n     * @private\r\n     */\r\n    var layerPropertyHandlers = {\r\n\r\n        \"miter-limit\": function(layer, value) {\r\n            display.setMiterLimit(layer, parseFloat(value));\r\n        }\r\n\r\n    };\r\n    \r\n    /**\r\n     * Handlers for all instruction opcodes receivable by a Guacamole protocol\r\n     * client.\r\n     * @private\r\n     */\r\n    var instructionHandlers = {\r\n\r\n        \"ack\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var reason = parameters[1];\r\n            var code = parseInt(parameters[2]);\r\n\r\n            // Get stream\r\n            var stream = output_streams[stream_index];\r\n            if (stream) {\r\n\r\n                // Signal ack if handler defined\r\n                if (stream.onack)\r\n                    stream.onack(new Guacamole.Status(code, reason));\r\n\r\n                // If code is an error, invalidate stream if not already\r\n                // invalidated by onack handler\r\n                if (code >= 0x0100 && output_streams[stream_index] === stream) {\r\n                    stream_indices.free(stream_index);\r\n                    delete output_streams[stream_index];\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        \"arc\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var x = parseInt(parameters[1]);\r\n            var y = parseInt(parameters[2]);\r\n            var radius = parseInt(parameters[3]);\r\n            var startAngle = parseFloat(parameters[4]);\r\n            var endAngle = parseFloat(parameters[5]);\r\n            var negative = parseInt(parameters[6]);\r\n\r\n            display.arc(layer, x, y, radius, startAngle, endAngle, negative != 0);\r\n\r\n        },\r\n\r\n        \"argv\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var mimetype = parameters[1];\r\n            var name = parameters[2];\r\n\r\n            // Create stream\r\n            if (guac_client.onargv) {\r\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\r\n                guac_client.onargv(stream, mimetype, name);\r\n            }\r\n\r\n            // Otherwise, unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"Receiving argument values unsupported\", 0x0100);\r\n\r\n        },\r\n\r\n        \"audio\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var mimetype = parameters[1];\r\n\r\n            // Create stream \r\n            var stream = streams[stream_index] =\r\n                    new Guacamole.InputStream(guac_client, stream_index);\r\n\r\n            // Get player instance via callback\r\n            var audioPlayer = null;\r\n            if (guac_client.onaudio)\r\n                audioPlayer = guac_client.onaudio(stream, mimetype);\r\n\r\n            // If unsuccessful, try to use a default implementation\r\n            if (!audioPlayer)\r\n                audioPlayer = Guacamole.AudioPlayer.getInstance(stream, mimetype);\r\n\r\n            // If we have successfully retrieved an audio player, send success response\r\n            if (audioPlayer) {\r\n                audioPlayers[stream_index] = audioPlayer;\r\n                guac_client.sendAck(stream_index, \"OK\", 0x0000);\r\n            }\r\n\r\n            // Otherwise, mimetype must be unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"BAD TYPE\", 0x030F);\r\n\r\n        },\r\n\r\n        \"blob\": function(parameters) {\r\n\r\n            // Get stream \r\n            var stream_index = parseInt(parameters[0]);\r\n            var data = parameters[1];\r\n            var stream = streams[stream_index];\r\n\r\n            // Write data\r\n            if (stream && stream.onblob)\r\n                stream.onblob(data);\r\n\r\n        },\r\n\r\n        \"body\" : function handleBody(parameters) {\r\n\r\n            // Get object\r\n            var objectIndex = parseInt(parameters[0]);\r\n            var object = objects[objectIndex];\r\n\r\n            var streamIndex = parseInt(parameters[1]);\r\n            var mimetype = parameters[2];\r\n            var name = parameters[3];\r\n\r\n            // Create stream if handler defined\r\n            if (object && object.onbody) {\r\n                var stream = streams[streamIndex] = new Guacamole.InputStream(guac_client, streamIndex);\r\n                object.onbody(stream, mimetype, name);\r\n            }\r\n\r\n            // Otherwise, unsupported\r\n            else\r\n                guac_client.sendAck(streamIndex, \"Receipt of body unsupported\", 0x0100);\r\n\r\n        },\r\n\r\n        \"cfill\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var r = parseInt(parameters[2]);\r\n            var g = parseInt(parameters[3]);\r\n            var b = parseInt(parameters[4]);\r\n            var a = parseInt(parameters[5]);\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.fillColor(layer, r, g, b, a);\r\n\r\n        },\r\n\r\n        \"clip\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.clip(layer);\r\n\r\n        },\r\n\r\n        \"clipboard\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var mimetype = parameters[1];\r\n\r\n            // Create stream \r\n            if (guac_client.onclipboard) {\r\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\r\n                guac_client.onclipboard(stream, mimetype);\r\n            }\r\n\r\n            // Otherwise, unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"Clipboard unsupported\", 0x0100);\r\n\r\n        },\r\n\r\n        \"close\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.close(layer);\r\n\r\n        },\r\n\r\n        \"copy\": function(parameters) {\r\n\r\n            var srcL = getLayer(parseInt(parameters[0]));\r\n            var srcX = parseInt(parameters[1]);\r\n            var srcY = parseInt(parameters[2]);\r\n            var srcWidth = parseInt(parameters[3]);\r\n            var srcHeight = parseInt(parameters[4]);\r\n            var channelMask = parseInt(parameters[5]);\r\n            var dstL = getLayer(parseInt(parameters[6]));\r\n            var dstX = parseInt(parameters[7]);\r\n            var dstY = parseInt(parameters[8]);\r\n\r\n            display.setChannelMask(dstL, channelMask);\r\n            display.copy(srcL, srcX, srcY, srcWidth, srcHeight, \r\n                         dstL, dstX, dstY);\r\n\r\n        },\r\n\r\n        \"cstroke\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var cap = lineCap[parseInt(parameters[2])];\r\n            var join = lineJoin[parseInt(parameters[3])];\r\n            var thickness = parseInt(parameters[4]);\r\n            var r = parseInt(parameters[5]);\r\n            var g = parseInt(parameters[6]);\r\n            var b = parseInt(parameters[7]);\r\n            var a = parseInt(parameters[8]);\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.strokeColor(layer, cap, join, thickness, r, g, b, a);\r\n\r\n        },\r\n\r\n        \"cursor\": function(parameters) {\r\n\r\n            var cursorHotspotX = parseInt(parameters[0]);\r\n            var cursorHotspotY = parseInt(parameters[1]);\r\n            var srcL = getLayer(parseInt(parameters[2]));\r\n            var srcX = parseInt(parameters[3]);\r\n            var srcY = parseInt(parameters[4]);\r\n            var srcWidth = parseInt(parameters[5]);\r\n            var srcHeight = parseInt(parameters[6]);\r\n\r\n            display.setCursor(cursorHotspotX, cursorHotspotY,\r\n                              srcL, srcX, srcY, srcWidth, srcHeight);\r\n\r\n        },\r\n\r\n        \"curve\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var cp1x = parseInt(parameters[1]);\r\n            var cp1y = parseInt(parameters[2]);\r\n            var cp2x = parseInt(parameters[3]);\r\n            var cp2y = parseInt(parameters[4]);\r\n            var x = parseInt(parameters[5]);\r\n            var y = parseInt(parameters[6]);\r\n\r\n            display.curveTo(layer, cp1x, cp1y, cp2x, cp2y, x, y);\r\n\r\n        },\r\n\r\n        \"disconnect\" : function handleDisconnect(parameters) {\r\n\r\n            // Explicitly tear down connection\r\n            guac_client.disconnect();\r\n\r\n        },\r\n\r\n        \"dispose\": function(parameters) {\r\n            \r\n            var layer_index = parseInt(parameters[0]);\r\n\r\n            // If visible layer, remove from parent\r\n            if (layer_index > 0) {\r\n\r\n                // Remove from parent\r\n                var layer = getLayer(layer_index);\r\n                display.dispose(layer);\r\n\r\n                // Delete reference\r\n                delete layers[layer_index];\r\n\r\n            }\r\n\r\n            // If buffer, just delete reference\r\n            else if (layer_index < 0)\r\n                delete layers[layer_index];\r\n\r\n            // Attempting to dispose the root layer currently has no effect.\r\n\r\n        },\r\n\r\n        \"distort\": function(parameters) {\r\n\r\n            var layer_index = parseInt(parameters[0]);\r\n            var a = parseFloat(parameters[1]);\r\n            var b = parseFloat(parameters[2]);\r\n            var c = parseFloat(parameters[3]);\r\n            var d = parseFloat(parameters[4]);\r\n            var e = parseFloat(parameters[5]);\r\n            var f = parseFloat(parameters[6]);\r\n\r\n            // Only valid for visible layers (not buffers)\r\n            if (layer_index >= 0) {\r\n                var layer = getLayer(layer_index);\r\n                display.distort(layer, a, b, c, d, e, f);\r\n            }\r\n\r\n        },\r\n \r\n        \"error\": function(parameters) {\r\n\r\n            var reason = parameters[0];\r\n            var code = parseInt(parameters[1]);\r\n\r\n            // Call handler if defined\r\n            if (guac_client.onerror)\r\n                guac_client.onerror(new Guacamole.Status(code, reason));\r\n\r\n            guac_client.disconnect();\r\n\r\n        },\r\n\r\n        \"end\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n\r\n            // Get stream\r\n            var stream = streams[stream_index];\r\n            if (stream) {\r\n\r\n                // Signal end of stream if handler defined\r\n                if (stream.onend)\r\n                    stream.onend();\r\n\r\n                // Invalidate stream\r\n                delete streams[stream_index];\r\n\r\n            }\r\n\r\n        },\r\n\r\n        \"file\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var mimetype = parameters[1];\r\n            var filename = parameters[2];\r\n\r\n            // Create stream \r\n            if (guac_client.onfile) {\r\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\r\n                guac_client.onfile(stream, mimetype, filename);\r\n            }\r\n\r\n            // Otherwise, unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"File transfer unsupported\", 0x0100);\r\n\r\n        },\r\n\r\n        \"filesystem\" : function handleFilesystem(parameters) {\r\n\r\n            var objectIndex = parseInt(parameters[0]);\r\n            var name = parameters[1];\r\n\r\n            // Create object, if supported\r\n            if (guac_client.onfilesystem) {\r\n                var object = objects[objectIndex] = new Guacamole.Object(guac_client, objectIndex);\r\n                guac_client.onfilesystem(object, name);\r\n            }\r\n\r\n            // If unsupported, simply ignore the availability of the filesystem\r\n\r\n        },\r\n\r\n        \"identity\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.setTransform(layer, 1, 0, 0, 1, 0, 0);\r\n\r\n        },\r\n\r\n        \"img\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var channelMask = parseInt(parameters[1]);\r\n            var layer = getLayer(parseInt(parameters[2]));\r\n            var mimetype = parameters[3];\r\n            var x = parseInt(parameters[4]);\r\n            var y = parseInt(parameters[5]);\r\n\r\n            // Create stream\r\n            var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\r\n\r\n            // Draw received contents once decoded\r\n            display.setChannelMask(layer, channelMask);\r\n            display.drawStream(layer, x, y, stream, mimetype);\r\n\r\n        },\r\n\r\n        \"jpeg\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var x = parseInt(parameters[2]);\r\n            var y = parseInt(parameters[3]);\r\n            var data = parameters[4];\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.draw(layer, x, y, \"data:image/jpeg;base64,\" + data);\r\n\r\n        },\r\n\r\n        \"lfill\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var srcLayer = getLayer(parseInt(parameters[2]));\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.fillLayer(layer, srcLayer);\r\n\r\n        },\r\n\r\n        \"line\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var x = parseInt(parameters[1]);\r\n            var y = parseInt(parameters[2]);\r\n\r\n            display.lineTo(layer, x, y);\r\n\r\n        },\r\n\r\n        \"lstroke\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var srcLayer = getLayer(parseInt(parameters[2]));\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.strokeLayer(layer, srcLayer);\r\n\r\n        },\r\n\r\n        \"mouse\" : function handleMouse(parameters) {\r\n\r\n            var x = parseInt(parameters[0]);\r\n            var y = parseInt(parameters[1]);\r\n\r\n            // Display and move software cursor to received coordinates\r\n            display.showCursor(true);\r\n            display.moveCursor(x, y);\r\n\r\n        },\r\n\r\n        \"move\": function(parameters) {\r\n            \r\n            var layer_index = parseInt(parameters[0]);\r\n            var parent_index = parseInt(parameters[1]);\r\n            var x = parseInt(parameters[2]);\r\n            var y = parseInt(parameters[3]);\r\n            var z = parseInt(parameters[4]);\r\n\r\n            // Only valid for non-default layers\r\n            if (layer_index > 0 && parent_index >= 0) {\r\n                var layer = getLayer(layer_index);\r\n                var parent = getLayer(parent_index);\r\n                display.move(layer, parent, x, y, z);\r\n            }\r\n\r\n        },\r\n\r\n        \"name\": function(parameters) {\r\n            if (guac_client.onname) guac_client.onname(parameters[0]);\r\n        },\r\n\r\n        \"nest\": function(parameters) {\r\n            var parser = getParser(parseInt(parameters[0]));\r\n            parser.receive(parameters[1]);\r\n        },\r\n\r\n        \"pipe\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var mimetype = parameters[1];\r\n            var name = parameters[2];\r\n\r\n            // Create stream \r\n            if (guac_client.onpipe) {\r\n                var stream = streams[stream_index] = new Guacamole.InputStream(guac_client, stream_index);\r\n                guac_client.onpipe(stream, mimetype, name);\r\n            }\r\n\r\n            // Otherwise, unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"Named pipes unsupported\", 0x0100);\r\n\r\n        },\r\n\r\n        \"png\": function(parameters) {\r\n\r\n            var channelMask = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var x = parseInt(parameters[2]);\r\n            var y = parseInt(parameters[3]);\r\n            var data = parameters[4];\r\n\r\n            display.setChannelMask(layer, channelMask);\r\n            display.draw(layer, x, y, \"data:image/png;base64,\" + data);\r\n\r\n        },\r\n\r\n        \"pop\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.pop(layer);\r\n\r\n        },\r\n\r\n        \"push\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.push(layer);\r\n\r\n        },\r\n \r\n        \"rect\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var x = parseInt(parameters[1]);\r\n            var y = parseInt(parameters[2]);\r\n            var w = parseInt(parameters[3]);\r\n            var h = parseInt(parameters[4]);\r\n\r\n            display.rect(layer, x, y, w, h);\r\n\r\n        },\r\n                \r\n        \"required\": function required(parameters) {\r\n            if (guac_client.onrequired) guac_client.onrequired(parameters);\r\n        },\r\n        \r\n        \"reset\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n\r\n            display.reset(layer);\r\n\r\n        },\r\n        \r\n        \"set\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var name = parameters[1];\r\n            var value = parameters[2];\r\n\r\n            // Call property handler if defined\r\n            var handler = layerPropertyHandlers[name];\r\n            if (handler)\r\n                handler(layer, value);\r\n\r\n        },\r\n\r\n        \"shade\": function(parameters) {\r\n            \r\n            var layer_index = parseInt(parameters[0]);\r\n            var a = parseInt(parameters[1]);\r\n\r\n            // Only valid for visible layers (not buffers)\r\n            if (layer_index >= 0) {\r\n                var layer = getLayer(layer_index);\r\n                display.shade(layer, a);\r\n            }\r\n\r\n        },\r\n\r\n        \"size\": function(parameters) {\r\n\r\n            var layer_index = parseInt(parameters[0]);\r\n            var layer = getLayer(layer_index);\r\n            var width = parseInt(parameters[1]);\r\n            var height = parseInt(parameters[2]);\r\n\r\n            display.resize(layer, width, height);\r\n\r\n        },\r\n        \r\n        \"start\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var x = parseInt(parameters[1]);\r\n            var y = parseInt(parameters[2]);\r\n\r\n            display.moveTo(layer, x, y);\r\n\r\n        },\r\n\r\n        \"sync\": function(parameters) {\r\n\r\n            var timestamp = parseInt(parameters[0]);\r\n\r\n            // Flush display, send sync when done\r\n            display.flush(function displaySyncComplete() {\r\n\r\n                // Synchronize all audio players\r\n                for (var index in audioPlayers) {\r\n                    var audioPlayer = audioPlayers[index];\r\n                    if (audioPlayer)\r\n                        audioPlayer.sync();\r\n                }\r\n\r\n                // Send sync response to server\r\n                if (timestamp !== currentTimestamp) {\r\n                    tunnel.sendMessage(\"sync\", timestamp);\r\n                    currentTimestamp = timestamp;\r\n                }\r\n\r\n            });\r\n\r\n            // If received first update, no longer waiting.\r\n            if (currentState === STATE_WAITING)\r\n                setState(STATE_CONNECTED);\r\n\r\n            // Call sync handler if defined\r\n            if (guac_client.onsync)\r\n                guac_client.onsync(timestamp);\r\n\r\n        },\r\n\r\n        \"transfer\": function(parameters) {\r\n\r\n            var srcL = getLayer(parseInt(parameters[0]));\r\n            var srcX = parseInt(parameters[1]);\r\n            var srcY = parseInt(parameters[2]);\r\n            var srcWidth = parseInt(parameters[3]);\r\n            var srcHeight = parseInt(parameters[4]);\r\n            var function_index = parseInt(parameters[5]);\r\n            var dstL = getLayer(parseInt(parameters[6]));\r\n            var dstX = parseInt(parameters[7]);\r\n            var dstY = parseInt(parameters[8]);\r\n\r\n            /* SRC */\r\n            if (function_index === 0x3)\r\n                display.put(srcL, srcX, srcY, srcWidth, srcHeight, \r\n                    dstL, dstX, dstY);\r\n\r\n            /* Anything else that isn't a NO-OP */\r\n            else if (function_index !== 0x5)\r\n                display.transfer(srcL, srcX, srcY, srcWidth, srcHeight, \r\n                    dstL, dstX, dstY, Guacamole.Client.DefaultTransferFunction[function_index]);\r\n\r\n        },\r\n\r\n        \"transform\": function(parameters) {\r\n\r\n            var layer = getLayer(parseInt(parameters[0]));\r\n            var a = parseFloat(parameters[1]);\r\n            var b = parseFloat(parameters[2]);\r\n            var c = parseFloat(parameters[3]);\r\n            var d = parseFloat(parameters[4]);\r\n            var e = parseFloat(parameters[5]);\r\n            var f = parseFloat(parameters[6]);\r\n\r\n            display.transform(layer, a, b, c, d, e, f);\r\n\r\n        },\r\n\r\n        \"undefine\" : function handleUndefine(parameters) {\r\n\r\n            // Get object\r\n            var objectIndex = parseInt(parameters[0]);\r\n            var object = objects[objectIndex];\r\n\r\n            // Signal end of object definition\r\n            if (object && object.onundefine)\r\n                object.onundefine();\r\n\r\n        },\r\n\r\n        \"video\": function(parameters) {\r\n\r\n            var stream_index = parseInt(parameters[0]);\r\n            var layer = getLayer(parseInt(parameters[1]));\r\n            var mimetype = parameters[2];\r\n\r\n            // Create stream\r\n            var stream = streams[stream_index] =\r\n                    new Guacamole.InputStream(guac_client, stream_index);\r\n\r\n            // Get player instance via callback\r\n            var videoPlayer = null;\r\n            if (guac_client.onvideo)\r\n                videoPlayer = guac_client.onvideo(stream, layer, mimetype);\r\n\r\n            // If unsuccessful, try to use a default implementation\r\n            if (!videoPlayer)\r\n                videoPlayer = Guacamole.VideoPlayer.getInstance(stream, layer, mimetype);\r\n\r\n            // If we have successfully retrieved an video player, send success response\r\n            if (videoPlayer) {\r\n                videoPlayers[stream_index] = videoPlayer;\r\n                guac_client.sendAck(stream_index, \"OK\", 0x0000);\r\n            }\r\n\r\n            // Otherwise, mimetype must be unsupported\r\n            else\r\n                guac_client.sendAck(stream_index, \"BAD TYPE\", 0x030F);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    tunnel.oninstruction = function(opcode, parameters) {\r\n\r\n        var handler = instructionHandlers[opcode];\r\n        if (handler)\r\n            handler(parameters);\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends a disconnect instruction to the server and closes the tunnel.\r\n     */\r\n    this.disconnect = function() {\r\n\r\n        // Only attempt disconnection not disconnected.\r\n        if (currentState != STATE_DISCONNECTED\r\n                && currentState != STATE_DISCONNECTING) {\r\n\r\n            setState(STATE_DISCONNECTING);\r\n\r\n            // Stop ping\r\n            if (pingInterval)\r\n                window.clearInterval(pingInterval);\r\n\r\n            // Send disconnect message and disconnect\r\n            tunnel.sendMessage(\"disconnect\");\r\n            tunnel.disconnect();\r\n            setState(STATE_DISCONNECTED);\r\n\r\n        }\r\n\r\n    };\r\n    \r\n    /**\r\n     * Connects the underlying tunnel of this Guacamole.Client, passing the\r\n     * given arbitrary data to the tunnel during the connection process.\r\n     *\r\n     * @param data Arbitrary connection data to be sent to the underlying\r\n     *             tunnel during the connection process.\r\n     * @throws {Guacamole.Status} If an error occurs during connection.\r\n     */\r\n    this.connect = function(data) {\r\n\r\n        setState(STATE_CONNECTING);\r\n\r\n        try {\r\n            tunnel.connect(data);\r\n        }\r\n        catch (status) {\r\n            setState(STATE_IDLE);\r\n            throw status;\r\n        }\r\n\r\n        // Ping every 5 seconds (ensure connection alive)\r\n        pingInterval = window.setInterval(function() {\r\n            tunnel.sendMessage(\"nop\");\r\n        }, 5000);\r\n\r\n        setState(STATE_WAITING);\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Map of all Guacamole binary raster operations to transfer functions.\r\n * @private\r\n */\r\nGuacamole.Client.DefaultTransferFunction = {\r\n\r\n    /* BLACK */\r\n    0x0: function (src, dst) {\r\n        dst.red = dst.green = dst.blue = 0x00;\r\n    },\r\n\r\n    /* WHITE */\r\n    0xF: function (src, dst) {\r\n        dst.red = dst.green = dst.blue = 0xFF;\r\n    },\r\n\r\n    /* SRC */\r\n    0x3: function (src, dst) {\r\n        dst.red   = src.red;\r\n        dst.green = src.green;\r\n        dst.blue  = src.blue;\r\n        dst.alpha = src.alpha;\r\n    },\r\n\r\n    /* DEST (no-op) */\r\n    0x5: function (src, dst) {\r\n        // Do nothing\r\n    },\r\n\r\n    /* Invert SRC */\r\n    0xC: function (src, dst) {\r\n        dst.red   = 0xFF & ~src.red;\r\n        dst.green = 0xFF & ~src.green;\r\n        dst.blue  = 0xFF & ~src.blue;\r\n        dst.alpha =  src.alpha;\r\n    },\r\n    \r\n    /* Invert DEST */\r\n    0xA: function (src, dst) {\r\n        dst.red   = 0xFF & ~dst.red;\r\n        dst.green = 0xFF & ~dst.green;\r\n        dst.blue  = 0xFF & ~dst.blue;\r\n    },\r\n\r\n    /* AND */\r\n    0x1: function (src, dst) {\r\n        dst.red   =  ( src.red   &  dst.red);\r\n        dst.green =  ( src.green &  dst.green);\r\n        dst.blue  =  ( src.blue  &  dst.blue);\r\n    },\r\n\r\n    /* NAND */\r\n    0xE: function (src, dst) {\r\n        dst.red   = 0xFF & ~( src.red   &  dst.red);\r\n        dst.green = 0xFF & ~( src.green &  dst.green);\r\n        dst.blue  = 0xFF & ~( src.blue  &  dst.blue);\r\n    },\r\n\r\n    /* OR */\r\n    0x7: function (src, dst) {\r\n        dst.red   =  ( src.red   |  dst.red);\r\n        dst.green =  ( src.green |  dst.green);\r\n        dst.blue  =  ( src.blue  |  dst.blue);\r\n    },\r\n\r\n    /* NOR */\r\n    0x8: function (src, dst) {\r\n        dst.red   = 0xFF & ~( src.red   |  dst.red);\r\n        dst.green = 0xFF & ~( src.green |  dst.green);\r\n        dst.blue  = 0xFF & ~( src.blue  |  dst.blue);\r\n    },\r\n\r\n    /* XOR */\r\n    0x6: function (src, dst) {\r\n        dst.red   =  ( src.red   ^  dst.red);\r\n        dst.green =  ( src.green ^  dst.green);\r\n        dst.blue  =  ( src.blue  ^  dst.blue);\r\n    },\r\n\r\n    /* XNOR */\r\n    0x9: function (src, dst) {\r\n        dst.red   = 0xFF & ~( src.red   ^  dst.red);\r\n        dst.green = 0xFF & ~( src.green ^  dst.green);\r\n        dst.blue  = 0xFF & ~( src.blue  ^  dst.blue);\r\n    },\r\n\r\n    /* AND inverted source */\r\n    0x4: function (src, dst) {\r\n        dst.red   =  0xFF & (~src.red   &  dst.red);\r\n        dst.green =  0xFF & (~src.green &  dst.green);\r\n        dst.blue  =  0xFF & (~src.blue  &  dst.blue);\r\n    },\r\n\r\n    /* OR inverted source */\r\n    0xD: function (src, dst) {\r\n        dst.red   =  0xFF & (~src.red   |  dst.red);\r\n        dst.green =  0xFF & (~src.green |  dst.green);\r\n        dst.blue  =  0xFF & (~src.blue  |  dst.blue);\r\n    },\r\n\r\n    /* AND inverted destination */\r\n    0x2: function (src, dst) {\r\n        dst.red   =  0xFF & ( src.red   & ~dst.red);\r\n        dst.green =  0xFF & ( src.green & ~dst.green);\r\n        dst.blue  =  0xFF & ( src.blue  & ~dst.blue);\r\n    },\r\n\r\n    /* OR inverted destination */\r\n    0xB: function (src, dst) {\r\n        dst.red   =  0xFF & ( src.red   | ~dst.red);\r\n        dst.green =  0xFF & ( src.green | ~dst.green);\r\n        dst.blue  =  0xFF & ( src.blue  | ~dst.blue);\r\n    }\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A reader which automatically handles the given input stream, returning\r\n * received blobs as a single data URI built over the course of the stream.\r\n * Note that this object will overwrite any installed event handlers on the\r\n * given Guacamole.InputStream.\r\n * \r\n * @constructor\r\n * @param {Guacamole.InputStream} stream\r\n *     The stream that data will be read from.\r\n */\r\nGuacamole.DataURIReader = function(stream, mimetype) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.DataURIReader.\r\n     * @private\r\n     */\r\n    var guac_reader = this;\r\n\r\n    /**\r\n     * Current data URI.\r\n     *\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    var uri = 'data:' + mimetype + ';base64,';\r\n\r\n    // Receive blobs as array buffers\r\n    stream.onblob = function dataURIReaderBlob(data) {\r\n\r\n        // Currently assuming data will ALWAYS be safe to simply append. This\r\n        // will not be true if the received base64 data encodes a number of\r\n        // bytes that isn't a multiple of three (as base64 expands in a ratio\r\n        // of exactly 3:4).\r\n        uri += data;\r\n\r\n    };\r\n\r\n    // Simply call onend when end received\r\n    stream.onend = function dataURIReaderEnd() {\r\n        if (guac_reader.onend)\r\n            guac_reader.onend();\r\n    };\r\n\r\n    /**\r\n     * Returns the data URI of all data received through the underlying stream\r\n     * thus far.\r\n     *\r\n     * @returns {String}\r\n     *     The data URI of all data received through the underlying stream thus\r\n     *     far.\r\n     */\r\n    this.getURI = function getURI() {\r\n        return uri;\r\n    };\r\n\r\n    /**\r\n     * Fired once this stream is finished and no further data will be written.\r\n     *\r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n};\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * The Guacamole display. The display does not deal with the Guacamole\r\n * protocol, and instead implements a set of graphical operations which\r\n * embody the set of operations present in the protocol. The order operations\r\n * are executed is guaranteed to be in the same order as their corresponding\r\n * functions are called.\r\n * \r\n * @constructor\r\n */\r\nGuacamole.Display = function() {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Display.\r\n     * @private\r\n     */\r\n    var guac_display = this;\r\n\r\n    var displayWidth = 0;\r\n    var displayHeight = 0;\r\n    var displayScale = 1;\r\n\r\n    // Create display\r\n    var display = document.createElement(\"div\");\r\n    display.style.position = \"relative\";\r\n    display.style.width = displayWidth + \"px\";\r\n    display.style.height = displayHeight + \"px\";\r\n\r\n    // Ensure transformations on display originate at 0,0\r\n    display.style.transformOrigin =\r\n    display.style.webkitTransformOrigin =\r\n    display.style.MozTransformOrigin =\r\n    display.style.OTransformOrigin =\r\n    display.style.msTransformOrigin =\r\n        \"0 0\";\r\n\r\n    // Create default layer\r\n    var default_layer = new Guacamole.Display.VisibleLayer(displayWidth, displayHeight);\r\n\r\n    // Create cursor layer\r\n    var cursor = new Guacamole.Display.VisibleLayer(0, 0);\r\n    cursor.setChannelMask(Guacamole.Layer.SRC);\r\n\r\n    // Add default layer and cursor to display\r\n    display.appendChild(default_layer.getElement());\r\n    display.appendChild(cursor.getElement());\r\n\r\n    // Create bounding div \r\n    var bounds = document.createElement(\"div\");\r\n    bounds.style.position = \"relative\";\r\n    bounds.style.width = (displayWidth*displayScale) + \"px\";\r\n    bounds.style.height = (displayHeight*displayScale) + \"px\";\r\n\r\n    // Add display to bounds\r\n    bounds.appendChild(display);\r\n\r\n    /**\r\n     * The X coordinate of the hotspot of the mouse cursor. The hotspot is\r\n     * the relative location within the image of the mouse cursor at which\r\n     * each click occurs.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.cursorHotspotX = 0;\r\n\r\n    /**\r\n     * The Y coordinate of the hotspot of the mouse cursor. The hotspot is\r\n     * the relative location within the image of the mouse cursor at which\r\n     * each click occurs.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.cursorHotspotY = 0;\r\n\r\n    /**\r\n     * The current X coordinate of the local mouse cursor. This is not\r\n     * necessarily the location of the actual mouse - it refers only to\r\n     * the location of the cursor image within the Guacamole display, as\r\n     * last set by moveCursor().\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.cursorX = 0;\r\n\r\n    /**\r\n     * The current X coordinate of the local mouse cursor. This is not\r\n     * necessarily the location of the actual mouse - it refers only to\r\n     * the location of the cursor image within the Guacamole display, as\r\n     * last set by moveCursor().\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.cursorY = 0;\r\n\r\n    /**\r\n     * Fired when the default layer (and thus the entire Guacamole display)\r\n     * is resized.\r\n     * \r\n     * @event\r\n     * @param {Number} width The new width of the Guacamole display.\r\n     * @param {Number} height The new height of the Guacamole display.\r\n     */\r\n    this.onresize = null;\r\n\r\n    /**\r\n     * Fired whenever the local cursor image is changed. This can be used to\r\n     * implement special handling of the client-side cursor, or to override\r\n     * the default use of a software cursor layer.\r\n     * \r\n     * @event\r\n     * @param {HTMLCanvasElement} canvas The cursor image.\r\n     * @param {Number} x The X-coordinate of the cursor hotspot.\r\n     * @param {Number} y The Y-coordinate of the cursor hotspot.\r\n     */\r\n    this.oncursor = null;\r\n\r\n    /**\r\n     * The queue of all pending Tasks. Tasks will be run in order, with new\r\n     * tasks added at the end of the queue and old tasks removed from the\r\n     * front of the queue (FIFO). These tasks will eventually be grouped\r\n     * into a Frame.\r\n     * @private\r\n     * @type {Task[]}\r\n     */\r\n    var tasks = [];\r\n\r\n    /**\r\n     * The queue of all frames. Each frame is a pairing of an array of tasks\r\n     * and a callback which must be called when the frame is rendered.\r\n     * @private\r\n     * @type {Frame[]}\r\n     */\r\n    var frames = [];\r\n\r\n    /**\r\n     * Flushes all pending frames.\r\n     * @private\r\n     */\r\n    function __flush_frames() {\r\n\r\n        var rendered_frames = 0;\r\n\r\n        // Draw all pending frames, if ready\r\n        while (rendered_frames < frames.length) {\r\n\r\n            var frame = frames[rendered_frames];\r\n            if (!frame.isReady())\r\n                break;\r\n\r\n            frame.flush();\r\n            rendered_frames++;\r\n\r\n        } \r\n\r\n        // Remove rendered frames from array\r\n        frames.splice(0, rendered_frames);\r\n\r\n    }\r\n\r\n    /**\r\n     * An ordered list of tasks which must be executed atomically. Once\r\n     * executed, an associated (and optional) callback will be called.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     * @param {function} callback The function to call when this frame is\r\n     *                            rendered.\r\n     * @param {Task[]} tasks The set of tasks which must be executed to render\r\n     *                       this frame.\r\n     */\r\n    function Frame(callback, tasks) {\r\n\r\n        /**\r\n         * Returns whether this frame is ready to be rendered. This function\r\n         * returns true if and only if ALL underlying tasks are unblocked.\r\n         * \r\n         * @returns {Boolean} true if all underlying tasks are unblocked,\r\n         *                    false otherwise.\r\n         */\r\n        this.isReady = function() {\r\n\r\n            // Search for blocked tasks\r\n            for (var i=0; i < tasks.length; i++) {\r\n                if (tasks[i].blocked)\r\n                    return false;\r\n            }\r\n\r\n            // If no blocked tasks, the frame is ready\r\n            return true;\r\n\r\n        };\r\n\r\n        /**\r\n         * Renders this frame, calling the associated callback, if any, after\r\n         * the frame is complete. This function MUST only be called when no\r\n         * blocked tasks exist. Calling this function with blocked tasks\r\n         * will result in undefined behavior.\r\n         */\r\n        this.flush = function() {\r\n\r\n            // Draw all pending tasks.\r\n            for (var i=0; i < tasks.length; i++)\r\n                tasks[i].execute();\r\n\r\n            // Call callback\r\n            if (callback) callback();\r\n\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * A container for an task handler. Each operation which must be ordered\r\n     * is associated with a Task that goes into a task queue. Tasks in this\r\n     * queue are executed in order once their handlers are set, while Tasks \r\n     * without handlers block themselves and any following Tasks from running.\r\n     *\r\n     * @constructor\r\n     * @private\r\n     * @param {function} taskHandler The function to call when this task \r\n     *                               runs, if any.\r\n     * @param {boolean} blocked Whether this task should start blocked.\r\n     */\r\n    function Task(taskHandler, blocked) {\r\n       \r\n        var task = this;\r\n       \r\n        /**\r\n         * Whether this Task is blocked.\r\n         * \r\n         * @type {boolean}\r\n         */\r\n        this.blocked = blocked;\r\n\r\n        /**\r\n         * Unblocks this Task, allowing it to run.\r\n         */\r\n        this.unblock = function() {\r\n            if (task.blocked) {\r\n                task.blocked = false;\r\n                __flush_frames();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls the handler associated with this task IMMEDIATELY. This\r\n         * function does not track whether this task is marked as blocked.\r\n         * Enforcing the blocked status of tasks is up to the caller.\r\n         */\r\n        this.execute = function() {\r\n            if (taskHandler) taskHandler();\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * Schedules a task for future execution. The given handler will execute\r\n     * immediately after all previous tasks upon frame flush, unless this\r\n     * task is blocked. If any tasks is blocked, the entire frame will not\r\n     * render (and no tasks within will execute) until all tasks are unblocked.\r\n     * \r\n     * @private\r\n     * @param {function} handler The function to call when possible, if any.\r\n     * @param {boolean} blocked Whether the task should start blocked.\r\n     * @returns {Task} The Task created and added to the queue for future\r\n     *                 running.\r\n     */\r\n    function scheduleTask(handler, blocked) {\r\n        var task = new Task(handler, blocked);\r\n        tasks.push(task);\r\n        return task;\r\n    }\r\n\r\n    /**\r\n     * Returns the element which contains the Guacamole display.\r\n     * \r\n     * @return {Element} The element containing the Guacamole display.\r\n     */\r\n    this.getElement = function() {\r\n        return bounds;\r\n    };\r\n\r\n    /**\r\n     * Returns the width of this display.\r\n     * \r\n     * @return {Number} The width of this display;\r\n     */\r\n    this.getWidth = function() {\r\n        return displayWidth;\r\n    };\r\n\r\n    /**\r\n     * Returns the height of this display.\r\n     * \r\n     * @return {Number} The height of this display;\r\n     */\r\n    this.getHeight = function() {\r\n        return displayHeight;\r\n    };\r\n\r\n    /**\r\n     * Returns the default layer of this display. Each Guacamole display always\r\n     * has at least one layer. Other layers can optionally be created within\r\n     * this layer, but the default layer cannot be removed and is the absolute\r\n     * ancestor of all other layers.\r\n     * \r\n     * @return {Guacamole.Display.VisibleLayer} The default layer.\r\n     */\r\n    this.getDefaultLayer = function() {\r\n        return default_layer;\r\n    };\r\n\r\n    /**\r\n     * Returns the cursor layer of this display. Each Guacamole display contains\r\n     * a layer for the image of the mouse cursor. This layer is a special case\r\n     * and exists above all other layers, similar to the hardware mouse cursor.\r\n     * \r\n     * @return {Guacamole.Display.VisibleLayer} The cursor layer.\r\n     */\r\n    this.getCursorLayer = function() {\r\n        return cursor;\r\n    };\r\n\r\n    /**\r\n     * Creates a new layer. The new layer will be a direct child of the default\r\n     * layer, but can be moved to be a child of any other layer. Layers returned\r\n     * by this function are visible.\r\n     * \r\n     * @return {Guacamole.Display.VisibleLayer} The newly-created layer.\r\n     */\r\n    this.createLayer = function() {\r\n        var layer = new Guacamole.Display.VisibleLayer(displayWidth, displayHeight);\r\n        layer.move(default_layer, 0, 0, 0);\r\n        return layer;\r\n    };\r\n\r\n    /**\r\n     * Creates a new buffer. Buffers are invisible, off-screen surfaces. They\r\n     * are implemented in the same manner as layers, but do not provide the\r\n     * same nesting semantics.\r\n     * \r\n     * @return {Guacamole.Layer} The newly-created buffer.\r\n     */\r\n    this.createBuffer = function() {\r\n        var buffer = new Guacamole.Layer(0, 0);\r\n        buffer.autosize = 1;\r\n        return buffer;\r\n    };\r\n\r\n    /**\r\n     * Flush all pending draw tasks, if possible, as a new frame. If the entire\r\n     * frame is not ready, the flush will wait until all required tasks are\r\n     * unblocked.\r\n     * \r\n     * @param {function} callback The function to call when this frame is\r\n     *                            flushed. This may happen immediately, or\r\n     *                            later when blocked tasks become unblocked.\r\n     */\r\n    this.flush = function(callback) {\r\n\r\n        // Add frame, reset tasks\r\n        frames.push(new Frame(callback, tasks));\r\n        tasks = [];\r\n\r\n        // Attempt flush\r\n        __flush_frames();\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the hotspot and image of the mouse cursor displayed within the\r\n     * Guacamole display.\r\n     * \r\n     * @param {Number} hotspotX The X coordinate of the cursor hotspot.\r\n     * @param {Number} hotspotY The Y coordinate of the cursor hotspot.\r\n     * @param {Guacamole.Layer} layer The source layer containing the data which\r\n     *                                should be used as the mouse cursor image.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      layer's coordinate space to copy data from.\r\n\r\n     */\r\n    this.setCursor = function(hotspotX, hotspotY, layer, srcx, srcy, srcw, srch) {\r\n        scheduleTask(function __display_set_cursor() {\r\n\r\n            // Set hotspot\r\n            guac_display.cursorHotspotX = hotspotX;\r\n            guac_display.cursorHotspotY = hotspotY;\r\n\r\n            // Reset cursor size\r\n            cursor.resize(srcw, srch);\r\n\r\n            // Draw cursor to cursor layer\r\n            cursor.copy(layer, srcx, srcy, srcw, srch, 0, 0);\r\n            guac_display.moveCursor(guac_display.cursorX, guac_display.cursorY);\r\n\r\n            // Fire cursor change event\r\n            if (guac_display.oncursor)\r\n                guac_display.oncursor(cursor.toCanvas(), hotspotX, hotspotY);\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets whether the software-rendered cursor is shown. This cursor differs\r\n     * from the hardware cursor in that it is built into the Guacamole.Display,\r\n     * and relies on its own Guacamole layer to render.\r\n     *\r\n     * @param {Boolean} [shown=true] Whether to show the software cursor.\r\n     */\r\n    this.showCursor = function(shown) {\r\n\r\n        var element = cursor.getElement();\r\n        var parent = element.parentNode;\r\n\r\n        // Remove from DOM if hidden\r\n        if (shown === false) {\r\n            if (parent)\r\n                parent.removeChild(element);\r\n        }\r\n\r\n        // Otherwise, ensure cursor is child of display\r\n        else if (parent !== display)\r\n            display.appendChild(element);\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the location of the local cursor to the given coordinates. For the\r\n     * sake of responsiveness, this function performs its action immediately.\r\n     * Cursor motion is not maintained within atomic frames.\r\n     * \r\n     * @param {Number} x The X coordinate to move the cursor to.\r\n     * @param {Number} y The Y coordinate to move the cursor to.\r\n     */\r\n    this.moveCursor = function(x, y) {\r\n\r\n        // Move cursor layer\r\n        cursor.translate(x - guac_display.cursorHotspotX,\r\n                         y - guac_display.cursorHotspotY);\r\n\r\n        // Update stored position\r\n        guac_display.cursorX = x;\r\n        guac_display.cursorY = y;\r\n\r\n    };\r\n\r\n    /**\r\n     * Changes the size of the given Layer to the given width and height.\r\n     * Resizing is only attempted if the new size provided is actually different\r\n     * from the current size.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to resize.\r\n     * @param {Number} width The new width.\r\n     * @param {Number} height The new height.\r\n     */\r\n    this.resize = function(layer, width, height) {\r\n        scheduleTask(function __display_resize() {\r\n\r\n            layer.resize(width, height);\r\n\r\n            // Resize display if default layer is resized\r\n            if (layer === default_layer) {\r\n\r\n                // Update (set) display size\r\n                displayWidth = width;\r\n                displayHeight = height;\r\n                display.style.width = displayWidth + \"px\";\r\n                display.style.height = displayHeight + \"px\";\r\n\r\n                // Update bounds size\r\n                bounds.style.width = (displayWidth*displayScale) + \"px\";\r\n                bounds.style.height = (displayHeight*displayScale) + \"px\";\r\n\r\n                // Notify of resize\r\n                if (guac_display.onresize)\r\n                    guac_display.onresize(width, height);\r\n\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Draws the specified image at the given coordinates. The image specified\r\n     * must already be loaded.\r\n     * \r\n     * @param {Guacamole.Layer} layer\r\n     *     The layer to draw upon.\r\n     *\r\n     * @param {Number} x\r\n     *     The destination X coordinate.\r\n     *\r\n     * @param {Number} y \r\n     *     The destination Y coordinate.\r\n     *\r\n     * @param {CanvasImageSource} image\r\n     *     The image to draw. Note that this not a URL.\r\n     */\r\n    this.drawImage = function(layer, x, y, image) {\r\n        scheduleTask(function __display_drawImage() {\r\n            layer.drawImage(x, y, image);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Draws the image contained within the specified Blob at the given\r\n     * coordinates. The Blob specified must already be populated with image\r\n     * data.\r\n     *\r\n     * @param {Guacamole.Layer} layer\r\n     *     The layer to draw upon.\r\n     *\r\n     * @param {Number} x\r\n     *     The destination X coordinate.\r\n     *\r\n     * @param {Number} y\r\n     *     The destination Y coordinate.\r\n     *\r\n     * @param {Blob} blob\r\n     *     The Blob containing the image data to draw.\r\n     */\r\n    this.drawBlob = function(layer, x, y, blob) {\r\n\r\n        var task;\r\n\r\n        // Prefer createImageBitmap() over blob URLs if available\r\n        if (window.createImageBitmap) {\r\n\r\n            var bitmap;\r\n\r\n            // Draw image once loaded\r\n            task = scheduleTask(function drawImageBitmap() {\r\n                layer.drawImage(x, y, bitmap);\r\n            }, true);\r\n\r\n            // Load image from provided blob\r\n            window.createImageBitmap(blob).then(function bitmapLoaded(decoded) {\r\n                bitmap = decoded;\r\n                task.unblock();\r\n            });\r\n\r\n        }\r\n\r\n        // Use blob URLs and the Image object if createImageBitmap() is\r\n        // unavailable\r\n        else {\r\n\r\n            // Create URL for blob\r\n            var url = URL.createObjectURL(blob);\r\n\r\n            // Draw and free blob URL when ready\r\n            task = scheduleTask(function __display_drawBlob() {\r\n\r\n                // Draw the image only if it loaded without errors\r\n                if (image.width && image.height)\r\n                    layer.drawImage(x, y, image);\r\n\r\n                // Blob URL no longer needed\r\n                URL.revokeObjectURL(url);\r\n\r\n            }, true);\r\n\r\n            // Load image from URL\r\n            var image = new Image();\r\n            image.onload = task.unblock;\r\n            image.onerror = task.unblock;\r\n            image.src = url;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Draws the image within the given stream at the given coordinates. The\r\n     * image will be loaded automatically, and this and any future operations\r\n     * will wait for the image to finish loading. This function will\r\n     * automatically choose an approriate method for reading and decoding the\r\n     * given image stream, and should be preferred for received streams except\r\n     * where manual decoding of the stream is unavoidable.\r\n     *\r\n     * @param {Guacamole.Layer} layer\r\n     *     The layer to draw upon.\r\n     *\r\n     * @param {Number} x\r\n     *     The destination X coordinate.\r\n     *\r\n     * @param {Number} y\r\n     *     The destination Y coordinate.\r\n     *\r\n     * @param {Guacamole.InputStream} stream\r\n     *     The stream along which image data will be received.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the image within the stream.\r\n     */\r\n    this.drawStream = function drawStream(layer, x, y, stream, mimetype) {\r\n\r\n        // If createImageBitmap() is available, load the image as a blob so\r\n        // that function can be used\r\n        if (window.createImageBitmap) {\r\n            var reader = new Guacamole.BlobReader(stream, mimetype);\r\n            reader.onend = function drawImageBlob() {\r\n                guac_display.drawBlob(layer, x, y, reader.getBlob());\r\n            };\r\n        }\r\n\r\n        // Lacking createImageBitmap(), fall back to data URIs and the Image\r\n        // object\r\n        else {\r\n            var reader = new Guacamole.DataURIReader(stream, mimetype);\r\n            reader.onend = function drawImageDataURI() {\r\n                guac_display.draw(layer, x, y, reader.getURI());\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Draws the image at the specified URL at the given coordinates. The image\r\n     * will be loaded automatically, and this and any future operations will\r\n     * wait for the image to finish loading.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     * @param {String} url The URL of the image to draw.\r\n     */\r\n    this.draw = function(layer, x, y, url) {\r\n\r\n        var task = scheduleTask(function __display_draw() {\r\n\r\n            // Draw the image only if it loaded without errors\r\n            if (image.width && image.height)\r\n                layer.drawImage(x, y, image);\r\n\r\n        }, true);\r\n\r\n        var image = new Image();\r\n        image.onload = task.unblock;\r\n        image.onerror = task.unblock;\r\n        image.src = url;\r\n\r\n    };\r\n\r\n    /**\r\n     * Plays the video at the specified URL within this layer. The video\r\n     * will be loaded automatically, and this and any future operations will\r\n     * wait for the video to finish loading. Future operations will not be\r\n     * executed until the video finishes playing.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {String} mimetype The mimetype of the video to play.\r\n     * @param {Number} duration The duration of the video in milliseconds.\r\n     * @param {String} url The URL of the video to play.\r\n     */\r\n    this.play = function(layer, mimetype, duration, url) {\r\n\r\n        // Start loading the video\r\n        var video = document.createElement(\"video\");\r\n        video.type = mimetype;\r\n        video.src = url;\r\n\r\n        // Start copying frames when playing\r\n        video.addEventListener(\"play\", function() {\r\n            \r\n            function render_callback() {\r\n                layer.drawImage(0, 0, video);\r\n                if (!video.ended)\r\n                    window.setTimeout(render_callback, 20);\r\n            }\r\n            \r\n            render_callback();\r\n            \r\n        }, false);\r\n\r\n        scheduleTask(video.play);\r\n\r\n    };\r\n\r\n    /**\r\n     * Transfer a rectangle of image data from one Layer to this Layer using the\r\n     * specified transfer function.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Guacamole.Layer} dstLayer The layer to draw upon.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     * @param {Function} transferFunction The transfer function to use to\r\n     *                                    transfer data from source to\r\n     *                                    destination.\r\n     */\r\n    this.transfer = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y, transferFunction) {\r\n        scheduleTask(function __display_transfer() {\r\n            dstLayer.transfer(srcLayer, srcx, srcy, srcw, srch, x, y, transferFunction);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Put a rectangle of image data from one Layer to this Layer directly\r\n     * without performing any alpha blending. Simply copy the data.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Guacamole.Layer} dstLayer The layer to draw upon.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     */\r\n    this.put = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y) {\r\n        scheduleTask(function __display_put() {\r\n            dstLayer.put(srcLayer, srcx, srcy, srcw, srch, x, y);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Copy a rectangle of image data from one Layer to this Layer. This\r\n     * operation will copy exactly the image data that will be drawn once all\r\n     * operations of the source Layer that were pending at the time this\r\n     * function was called are complete. This operation will not alter the\r\n     * size of the source Layer even if its autosize property is set to true.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Guacamole.Layer} dstLayer The layer to draw upon.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     */\r\n    this.copy = function(srcLayer, srcx, srcy, srcw, srch, dstLayer, x, y) {\r\n        scheduleTask(function __display_copy() {\r\n            dstLayer.copy(srcLayer, srcx, srcy, srcw, srch, x, y);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Starts a new path at the specified point.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} x The X coordinate of the point to draw.\r\n     * @param {Number} y The Y coordinate of the point to draw.\r\n     */\r\n    this.moveTo = function(layer, x, y) {\r\n        scheduleTask(function __display_moveTo() {\r\n            layer.moveTo(x, y);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add the specified line to the current path.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} x The X coordinate of the endpoint of the line to draw.\r\n     * @param {Number} y The Y coordinate of the endpoint of the line to draw.\r\n     */\r\n    this.lineTo = function(layer, x, y) {\r\n        scheduleTask(function __display_lineTo() {\r\n            layer.lineTo(x, y);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add the specified arc to the current path.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} x The X coordinate of the center of the circle which\r\n     *                   will contain the arc.\r\n     * @param {Number} y The Y coordinate of the center of the circle which\r\n     *                   will contain the arc.\r\n     * @param {Number} radius The radius of the circle.\r\n     * @param {Number} startAngle The starting angle of the arc, in radians.\r\n     * @param {Number} endAngle The ending angle of the arc, in radians.\r\n     * @param {Boolean} negative Whether the arc should be drawn in order of\r\n     *                           decreasing angle.\r\n     */\r\n    this.arc = function(layer, x, y, radius, startAngle, endAngle, negative) {\r\n        scheduleTask(function __display_arc() {\r\n            layer.arc(x, y, radius, startAngle, endAngle, negative);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Starts a new path at the specified point.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} cp1x The X coordinate of the first control point.\r\n     * @param {Number} cp1y The Y coordinate of the first control point.\r\n     * @param {Number} cp2x The X coordinate of the second control point.\r\n     * @param {Number} cp2y The Y coordinate of the second control point.\r\n     * @param {Number} x The X coordinate of the endpoint of the curve.\r\n     * @param {Number} y The Y coordinate of the endpoint of the curve.\r\n     */\r\n    this.curveTo = function(layer, cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        scheduleTask(function __display_curveTo() {\r\n            layer.curveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Closes the current path by connecting the end point with the start\r\n     * point (if any) with a straight line.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     */\r\n    this.close = function(layer) {\r\n        scheduleTask(function __display_close() {\r\n            layer.close();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add the specified rectangle to the current path.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} x The X coordinate of the upper-left corner of the\r\n     *                   rectangle to draw.\r\n     * @param {Number} y The Y coordinate of the upper-left corner of the\r\n     *                   rectangle to draw.\r\n     * @param {Number} w The width of the rectangle to draw.\r\n     * @param {Number} h The height of the rectangle to draw.\r\n     */\r\n    this.rect = function(layer, x, y, w, h) {\r\n        scheduleTask(function __display_rect() {\r\n            layer.rect(x, y, w, h);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clip all future drawing operations by the current path. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as fillColor()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to affect.\r\n     */\r\n    this.clip = function(layer) {\r\n        scheduleTask(function __display_clip() {\r\n            layer.clip();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Stroke the current path with the specified color. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {String} cap The line cap style. Can be \"round\", \"square\",\r\n     *                     or \"butt\".\r\n     * @param {String} join The line join style. Can be \"round\", \"bevel\",\r\n     *                      or \"miter\".\r\n     * @param {Number} thickness The line thickness in pixels.\r\n     * @param {Number} r The red component of the color to fill.\r\n     * @param {Number} g The green component of the color to fill.\r\n     * @param {Number} b The blue component of the color to fill.\r\n     * @param {Number} a The alpha component of the color to fill.\r\n     */\r\n    this.strokeColor = function(layer, cap, join, thickness, r, g, b, a) {\r\n        scheduleTask(function __display_strokeColor() {\r\n            layer.strokeColor(cap, join, thickness, r, g, b, a);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fills the current path with the specified color. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Number} r The red component of the color to fill.\r\n     * @param {Number} g The green component of the color to fill.\r\n     * @param {Number} b The blue component of the color to fill.\r\n     * @param {Number} a The alpha component of the color to fill.\r\n     */\r\n    this.fillColor = function(layer, r, g, b, a) {\r\n        scheduleTask(function __display_fillColor() {\r\n            layer.fillColor(r, g, b, a);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Stroke the current path with the image within the specified layer. The\r\n     * image data will be tiled infinitely within the stroke. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {String} cap The line cap style. Can be \"round\", \"square\",\r\n     *                     or \"butt\".\r\n     * @param {String} join The line join style. Can be \"round\", \"bevel\",\r\n     *                      or \"miter\".\r\n     * @param {Number} thickness The line thickness in pixels.\r\n     * @param {Guacamole.Layer} srcLayer The layer to use as a repeating pattern\r\n     *                                   within the stroke.\r\n     */\r\n    this.strokeLayer = function(layer, cap, join, thickness, srcLayer) {\r\n        scheduleTask(function __display_strokeLayer() {\r\n            layer.strokeLayer(cap, join, thickness, srcLayer);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fills the current path with the image within the specified layer. The\r\n     * image data will be tiled infinitely within the stroke. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     * @param {Guacamole.Layer} srcLayer The layer to use as a repeating pattern\r\n     *                                   within the fill.\r\n     */\r\n    this.fillLayer = function(layer, srcLayer) {\r\n        scheduleTask(function __display_fillLayer() {\r\n            layer.fillLayer(srcLayer);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Push current layer state onto stack.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     */\r\n    this.push = function(layer) {\r\n        scheduleTask(function __display_push() {\r\n            layer.push();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Pop layer state off stack.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     */\r\n    this.pop = function(layer) {\r\n        scheduleTask(function __display_pop() {\r\n            layer.pop();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reset the layer, clearing the stack, the current path, and any transform\r\n     * matrix.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to draw upon.\r\n     */\r\n    this.reset = function(layer) {\r\n        scheduleTask(function __display_reset() {\r\n            layer.reset();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets the given affine transform (defined with six values from the\r\n     * transform's matrix).\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to modify.\r\n     * @param {Number} a The first value in the affine transform's matrix.\r\n     * @param {Number} b The second value in the affine transform's matrix.\r\n     * @param {Number} c The third value in the affine transform's matrix.\r\n     * @param {Number} d The fourth value in the affine transform's matrix.\r\n     * @param {Number} e The fifth value in the affine transform's matrix.\r\n     * @param {Number} f The sixth value in the affine transform's matrix.\r\n     */\r\n    this.setTransform = function(layer, a, b, c, d, e, f) {\r\n        scheduleTask(function __display_setTransform() {\r\n            layer.setTransform(a, b, c, d, e, f);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Applies the given affine transform (defined with six values from the\r\n     * transform's matrix).\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to modify.\r\n     * @param {Number} a The first value in the affine transform's matrix.\r\n     * @param {Number} b The second value in the affine transform's matrix.\r\n     * @param {Number} c The third value in the affine transform's matrix.\r\n     * @param {Number} d The fourth value in the affine transform's matrix.\r\n     * @param {Number} e The fifth value in the affine transform's matrix.\r\n     * @param {Number} f The sixth value in the affine transform's matrix.\r\n     */\r\n    this.transform = function(layer, a, b, c, d, e, f) {\r\n        scheduleTask(function __display_transform() {\r\n            layer.transform(a, b, c, d, e, f);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets the channel mask for future operations on this Layer.\r\n     * \r\n     * The channel mask is a Guacamole-specific compositing operation identifier\r\n     * with a single bit representing each of four channels (in order): source\r\n     * image where destination transparent, source where destination opaque,\r\n     * destination where source transparent, and destination where source\r\n     * opaque.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to modify.\r\n     * @param {Number} mask The channel mask for future operations on this\r\n     *                      Layer.\r\n     */\r\n    this.setChannelMask = function(layer, mask) {\r\n        scheduleTask(function __display_setChannelMask() {\r\n            layer.setChannelMask(mask);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets the miter limit for stroke operations using the miter join. This\r\n     * limit is the maximum ratio of the size of the miter join to the stroke\r\n     * width. If this ratio is exceeded, the miter will not be drawn for that\r\n     * joint of the path.\r\n     * \r\n     * @param {Guacamole.Layer} layer The layer to modify.\r\n     * @param {Number} limit The miter limit for stroke operations using the\r\n     *                       miter join.\r\n     */\r\n    this.setMiterLimit = function(layer, limit) {\r\n        scheduleTask(function __display_setMiterLimit() {\r\n            layer.setMiterLimit(limit);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Removes the given layer container entirely, such that it is no longer\r\n     * contained within its parent layer, if any.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} layer\r\n     *     The layer being removed from its parent.\r\n     */\r\n    this.dispose = function dispose(layer) {\r\n        scheduleTask(function disposeLayer() {\r\n            layer.dispose();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Applies the given affine transform (defined with six values from the\r\n     * transform's matrix) to the given layer.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} layer\r\n     *     The layer being distorted.\r\n     *\r\n     * @param {Number} a\r\n     *     The first value in the affine transform's matrix.\r\n     *\r\n     * @param {Number} b\r\n     *     The second value in the affine transform's matrix.\r\n     *\r\n     * @param {Number} c\r\n     *     The third value in the affine transform's matrix.\r\n     *\r\n     * @param {Number} d\r\n     *     The fourth value in the affine transform's matrix.\r\n     *\r\n     * @param {Number} e\r\n     *     The fifth value in the affine transform's matrix.\r\n     *\r\n     * @param {Number} f\r\n     *     The sixth value in the affine transform's matrix.\r\n     */\r\n    this.distort = function distort(layer, a, b, c, d, e, f) {\r\n        scheduleTask(function distortLayer() {\r\n            layer.distort(a, b, c, d, e, f);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Moves the upper-left corner of the given layer to the given X and Y\r\n     * coordinate, sets the Z stacking order, and reparents the layer\r\n     * to the given parent layer.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} layer\r\n     *     The layer being moved.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} parent\r\n     *     The parent to set.\r\n     *\r\n     * @param {Number} x\r\n     *     The X coordinate to move to.\r\n     *\r\n     * @param {Number} y\r\n     *     The Y coordinate to move to.\r\n     *\r\n     * @param {Number} z\r\n     *     The Z coordinate to move to.\r\n     */\r\n    this.move = function move(layer, parent, x, y, z) {\r\n        scheduleTask(function moveLayer() {\r\n            layer.move(parent, x, y, z);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets the opacity of the given layer to the given value, where 255 is\r\n     * fully opaque and 0 is fully transparent.\r\n     *\r\n     * @param {Guacamole.Display.VisibleLayer} layer\r\n     *     The layer whose opacity should be set.\r\n     *\r\n     * @param {Number} alpha\r\n     *     The opacity to set.\r\n     */\r\n    this.shade = function shade(layer, alpha) {\r\n        scheduleTask(function shadeLayer() {\r\n            layer.shade(alpha);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets the scale of the client display element such that it renders at\r\n     * a relatively smaller or larger size, without affecting the true\r\n     * resolution of the display.\r\n     *\r\n     * @param {Number} scale The scale to resize to, where 1.0 is normal\r\n     *                       size (1:1 scale).\r\n     */\r\n    this.scale = function(scale) {\r\n\r\n        display.style.transform =\r\n        display.style.WebkitTransform =\r\n        display.style.MozTransform =\r\n        display.style.OTransform =\r\n        display.style.msTransform =\r\n\r\n            \"scale(\" + scale + \",\" + scale + \")\";\r\n\r\n        displayScale = scale;\r\n\r\n        // Update bounds size\r\n        bounds.style.width = (displayWidth*displayScale) + \"px\";\r\n        bounds.style.height = (displayHeight*displayScale) + \"px\";\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the scale of the display.\r\n     *\r\n     * @return {Number} The scale of the display.\r\n     */\r\n    this.getScale = function() {\r\n        return displayScale;\r\n    };\r\n\r\n    /**\r\n     * Returns a canvas element containing the entire display, with all child\r\n     * layers composited within.\r\n     *\r\n     * @return {HTMLCanvasElement} A new canvas element containing a copy of\r\n     *                             the display.\r\n     */\r\n    this.flatten = function() {\r\n       \r\n        // Get destination canvas\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = default_layer.width;\r\n        canvas.height = default_layer.height;\r\n\r\n        var context = canvas.getContext(\"2d\");\r\n\r\n        // Returns sorted array of children\r\n        function get_children(layer) {\r\n\r\n            // Build array of children\r\n            var children = [];\r\n            for (var index in layer.children)\r\n                children.push(layer.children[index]);\r\n\r\n            // Sort\r\n            children.sort(function children_comparator(a, b) {\r\n\r\n                // Compare based on Z order\r\n                var diff = a.z - b.z;\r\n                if (diff !== 0)\r\n                    return diff;\r\n\r\n                // If Z order identical, use document order\r\n                var a_element = a.getElement();\r\n                var b_element = b.getElement();\r\n                var position = b_element.compareDocumentPosition(a_element);\r\n\r\n                if (position & Node.DOCUMENT_POSITION_PRECEDING) return -1;\r\n                if (position & Node.DOCUMENT_POSITION_FOLLOWING) return  1;\r\n\r\n                // Otherwise, assume same\r\n                return 0;\r\n\r\n            });\r\n\r\n            // Done\r\n            return children;\r\n\r\n        }\r\n\r\n        // Draws the contents of the given layer at the given coordinates\r\n        function draw_layer(layer, x, y) {\r\n\r\n            // Draw layer\r\n            if (layer.width > 0 && layer.height > 0) {\r\n\r\n                // Save and update alpha\r\n                var initial_alpha = context.globalAlpha;\r\n                context.globalAlpha *= layer.alpha / 255.0;\r\n\r\n                // Copy data\r\n                context.drawImage(layer.getCanvas(), x, y);\r\n\r\n                // Draw all children\r\n                var children = get_children(layer);\r\n                for (var i=0; i<children.length; i++) {\r\n                    var child = children[i];\r\n                    draw_layer(child, x + child.x, y + child.y);\r\n                }\r\n\r\n                // Restore alpha\r\n                context.globalAlpha = initial_alpha;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Draw default layer and all children\r\n        draw_layer(default_layer, 0, 0);\r\n\r\n        // Return new canvas copy\r\n        return canvas;\r\n        \r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Simple container for Guacamole.Layer, allowing layers to be easily\r\n * repositioned and nested. This allows certain operations to be accelerated\r\n * through DOM manipulation, rather than raster operations.\r\n * \r\n * @constructor\r\n * @augments Guacamole.Layer\r\n * @param {Number} width The width of the Layer, in pixels. The canvas element\r\n *                       backing this Layer will be given this width.\r\n * @param {Number} height The height of the Layer, in pixels. The canvas element\r\n *                        backing this Layer will be given this height.\r\n */\r\nGuacamole.Display.VisibleLayer = function(width, height) {\r\n\r\n    Guacamole.Layer.apply(this, [width, height]);\r\n\r\n    /**\r\n     * Reference to this layer.\r\n     * @private\r\n     */\r\n    var layer = this;\r\n\r\n    /**\r\n     * Identifier which uniquely identifies this layer. This is COMPLETELY\r\n     * UNRELATED to the index of the underlying layer, which is specific\r\n     * to the Guacamole protocol, and not relevant at this level.\r\n     * \r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    this.__unique_id = Guacamole.Display.VisibleLayer.__next_id++;\r\n\r\n    /**\r\n     * The opacity of the layer container, where 255 is fully opaque and 0 is\r\n     * fully transparent.\r\n     */\r\n    this.alpha = 0xFF;\r\n\r\n    /**\r\n     * X coordinate of the upper-left corner of this layer container within\r\n     * its parent, in pixels.\r\n     * @type {Number}\r\n     */\r\n    this.x = 0;\r\n\r\n    /**\r\n     * Y coordinate of the upper-left corner of this layer container within\r\n     * its parent, in pixels.\r\n     * @type {Number}\r\n     */\r\n    this.y = 0;\r\n\r\n    /**\r\n     * Z stacking order of this layer relative to other sibling layers.\r\n     * @type {Number}\r\n     */\r\n    this.z = 0;\r\n\r\n    /**\r\n     * The affine transformation applied to this layer container. Each element\r\n     * corresponds to a value from the transformation matrix, with the first\r\n     * three values being the first row, and the last three values being the\r\n     * second row. There are six values total.\r\n     * \r\n     * @type {Number[]}\r\n     */\r\n    this.matrix = [1, 0, 0, 1, 0, 0];\r\n\r\n    /**\r\n     * The parent layer container of this layer, if any.\r\n     * @type {Guacamole.Display.VisibleLayer}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Set of all children of this layer, indexed by layer index. This object\r\n     * will have one property per child.\r\n     */\r\n    this.children = {};\r\n\r\n    // Set layer position\r\n    var canvas = layer.getCanvas();\r\n    canvas.style.position = \"absolute\";\r\n    canvas.style.left = \"0px\";\r\n    canvas.style.top = \"0px\";\r\n\r\n    // Create div with given size\r\n    var div = document.createElement(\"div\");\r\n    div.appendChild(canvas);\r\n    div.style.width = width + \"px\";\r\n    div.style.height = height + \"px\";\r\n    div.style.position = \"absolute\";\r\n    div.style.left = \"0px\";\r\n    div.style.top = \"0px\";\r\n    div.style.overflow = \"hidden\";\r\n\r\n    /**\r\n     * Superclass resize() function.\r\n     * @private\r\n     */\r\n    var __super_resize = this.resize;\r\n\r\n    this.resize = function(width, height) {\r\n\r\n        // Resize containing div\r\n        div.style.width = width + \"px\";\r\n        div.style.height = height + \"px\";\r\n\r\n        __super_resize(width, height);\r\n\r\n    };\r\n  \r\n    /**\r\n     * Returns the element containing the canvas and any other elements\r\n     * associated with this layer.\r\n     * @returns {Element} The element containing this layer's canvas.\r\n     */\r\n    this.getElement = function() {\r\n        return div;\r\n    };\r\n\r\n    /**\r\n     * The translation component of this layer's transform.\r\n     * @private\r\n     */\r\n    var translate = \"translate(0px, 0px)\"; // (0, 0)\r\n\r\n    /**\r\n     * The arbitrary matrix component of this layer's transform.\r\n     * @private\r\n     */\r\n    var matrix = \"matrix(1, 0, 0, 1, 0, 0)\"; // Identity\r\n\r\n    /**\r\n     * Moves the upper-left corner of this layer to the given X and Y\r\n     * coordinate.\r\n     * \r\n     * @param {Number} x The X coordinate to move to.\r\n     * @param {Number} y The Y coordinate to move to.\r\n     */\r\n    this.translate = function(x, y) {\r\n\r\n        layer.x = x;\r\n        layer.y = y;\r\n\r\n        // Generate translation\r\n        translate = \"translate(\"\r\n                        + x + \"px,\"\r\n                        + y + \"px)\";\r\n\r\n        // Set layer transform \r\n        div.style.transform =\r\n        div.style.WebkitTransform =\r\n        div.style.MozTransform =\r\n        div.style.OTransform =\r\n        div.style.msTransform =\r\n\r\n            translate + \" \" + matrix;\r\n\r\n    };\r\n\r\n    /**\r\n     * Moves the upper-left corner of this VisibleLayer to the given X and Y\r\n     * coordinate, sets the Z stacking order, and reparents this VisibleLayer\r\n     * to the given VisibleLayer.\r\n     * \r\n     * @param {Guacamole.Display.VisibleLayer} parent The parent to set.\r\n     * @param {Number} x The X coordinate to move to.\r\n     * @param {Number} y The Y coordinate to move to.\r\n     * @param {Number} z The Z coordinate to move to.\r\n     */\r\n    this.move = function(parent, x, y, z) {\r\n\r\n        // Set parent if necessary\r\n        if (layer.parent !== parent) {\r\n\r\n            // Maintain relationship\r\n            if (layer.parent)\r\n                delete layer.parent.children[layer.__unique_id];\r\n            layer.parent = parent;\r\n            parent.children[layer.__unique_id] = layer;\r\n\r\n            // Reparent element\r\n            var parent_element = parent.getElement();\r\n            parent_element.appendChild(div);\r\n\r\n        }\r\n\r\n        // Set location\r\n        layer.translate(x, y);\r\n        layer.z = z;\r\n        div.style.zIndex = z;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the opacity of this layer to the given value, where 255 is fully\r\n     * opaque and 0 is fully transparent.\r\n     * \r\n     * @param {Number} a The opacity to set.\r\n     */\r\n    this.shade = function(a) {\r\n        layer.alpha = a;\r\n        div.style.opacity = a/255.0;\r\n    };\r\n\r\n    /**\r\n     * Removes this layer container entirely, such that it is no longer\r\n     * contained within its parent layer, if any.\r\n     */\r\n    this.dispose = function() {\r\n\r\n        // Remove from parent container\r\n        if (layer.parent) {\r\n            delete layer.parent.children[layer.__unique_id];\r\n            layer.parent = null;\r\n        }\r\n\r\n        // Remove from parent element\r\n        if (div.parentNode)\r\n            div.parentNode.removeChild(div);\r\n        \r\n    };\r\n\r\n    /**\r\n     * Applies the given affine transform (defined with six values from the\r\n     * transform's matrix).\r\n     * \r\n     * @param {Number} a The first value in the affine transform's matrix.\r\n     * @param {Number} b The second value in the affine transform's matrix.\r\n     * @param {Number} c The third value in the affine transform's matrix.\r\n     * @param {Number} d The fourth value in the affine transform's matrix.\r\n     * @param {Number} e The fifth value in the affine transform's matrix.\r\n     * @param {Number} f The sixth value in the affine transform's matrix.\r\n     */\r\n    this.distort = function(a, b, c, d, e, f) {\r\n\r\n        // Store matrix\r\n        layer.matrix = [a, b, c, d, e, f];\r\n\r\n        // Generate matrix transformation\r\n        matrix =\r\n\r\n            /* a c e\r\n             * b d f\r\n             * 0 0 1\r\n             */\r\n    \r\n            \"matrix(\" + a + \",\" + b + \",\" + c + \",\" + d + \",\" + e + \",\" + f + \")\";\r\n\r\n        // Set layer transform \r\n        div.style.transform =\r\n        div.style.WebkitTransform =\r\n        div.style.MozTransform =\r\n        div.style.OTransform =\r\n        div.style.msTransform =\r\n\r\n            translate + \" \" + matrix;\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * The next identifier to be assigned to the layer container. This identifier\r\n * uniquely identifies each VisibleLayer, but is unrelated to the index of\r\n * the layer, which exists at the protocol/client level only.\r\n * \r\n * @private\r\n * @type {Number}\r\n */\r\nGuacamole.Display.VisibleLayer.__next_id = 0;\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A hidden input field which attempts to keep itself focused at all times,\r\n * except when another input field has been intentionally focused, whether\r\n * programatically or by the user. The actual underlying input field, returned\r\n * by getElement(), may be used as a reliable source of keyboard-related events,\r\n * particularly composition and input events which may require a focused input\r\n * field to be dispatched at all.\r\n *\r\n * @constructor\r\n */\r\nGuacamole.InputSink = function InputSink() {\r\n\r\n    /**\r\n     * Reference to this instance of Guacamole.InputSink.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.InputSink}\r\n     */\r\n    var sink = this;\r\n\r\n    /**\r\n     * The underlying input field, styled to be invisible.\r\n     *\r\n     * @private\r\n     * @type {Element}\r\n     */\r\n    var field = document.createElement('textarea');\r\n    field.style.position   = 'fixed';\r\n    field.style.outline    = 'none';\r\n    field.style.border     = 'none';\r\n    field.style.margin     = '0';\r\n    field.style.padding    = '0';\r\n    field.style.height     = '0';\r\n    field.style.width      = '0';\r\n    field.style.left       = '0';\r\n    field.style.bottom     = '0';\r\n    field.style.resize     = 'none';\r\n    field.style.background = 'transparent';\r\n    field.style.color      = 'transparent';\r\n\r\n    // Keep field clear when modified via normal keypresses\r\n    field.addEventListener(\"keypress\", function clearKeypress(e) {\r\n        field.value = '';\r\n    }, false);\r\n\r\n    // Keep field clear when modofied via composition events\r\n    field.addEventListener(\"compositionend\", function clearCompletedComposition(e) {\r\n        if (e.data)\r\n            field.value = '';\r\n    }, false);\r\n\r\n    // Keep field clear when modofied via input events\r\n    field.addEventListener(\"input\", function clearCompletedInput(e) {\r\n        if (e.data && !e.isComposing)\r\n            field.value = '';\r\n    }, false);\r\n\r\n    // Whenever focus is gained, automatically click to ensure cursor is\r\n    // actually placed within the field (the field may simply be highlighted or\r\n    // outlined otherwise)\r\n    field.addEventListener(\"focus\", function focusReceived() {\r\n        window.setTimeout(function deferRefocus() {\r\n            field.click();\r\n            field.select();\r\n        }, 0);\r\n    }, true);\r\n\r\n    /**\r\n     * Attempts to focus the underlying input field. The focus attempt occurs\r\n     * asynchronously, and may silently fail depending on browser restrictions.\r\n     */\r\n    this.focus = function focus() {\r\n        window.setTimeout(function deferRefocus() {\r\n            field.focus(); // Focus must be deferred to work reliably across browsers\r\n        }, 0);\r\n    };\r\n\r\n    /**\r\n     * Returns the underlying input field. This input field MUST be manually\r\n     * added to the DOM for the Guacamole.InputSink to have any effect.\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    this.getElement = function getElement() {\r\n        return field;\r\n    };\r\n\r\n    // Automatically refocus input sink if part of DOM\r\n    document.addEventListener(\"keydown\", function refocusSink(e) {\r\n\r\n        // Do not refocus if focus is on an input field\r\n        var focused = document.activeElement;\r\n        if (focused && focused !== document.body) {\r\n\r\n            // Only consider focused input fields which are actually visible\r\n            var rect = focused.getBoundingClientRect();\r\n            if (rect.left + rect.width > 0 && rect.top + rect.height > 0)\r\n                return;\r\n\r\n        }\r\n\r\n        // Refocus input sink instead of handling click\r\n        sink.focus();\r\n\r\n    }, true);\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * An input stream abstraction used by the Guacamole client to facilitate\r\n * transfer of files or other binary data.\r\n * \r\n * @constructor\r\n * @param {Guacamole.Client} client The client owning this stream.\r\n * @param {Number} index The index of this stream.\r\n */\r\nGuacamole.InputStream = function(client, index) {\r\n\r\n    /**\r\n     * Reference to this stream.\r\n     * @private\r\n     */\r\n    var guac_stream = this;\r\n\r\n    /**\r\n     * The index of this stream.\r\n     * @type {Number}\r\n     */\r\n    this.index = index;\r\n\r\n    /**\r\n     * Called when a blob of data is received.\r\n     * \r\n     * @event\r\n     * @param {String} data The received base64 data.\r\n     */\r\n    this.onblob = null;\r\n\r\n    /**\r\n     * Called when this stream is closed.\r\n     * \r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n    /**\r\n     * Acknowledges the receipt of a blob.\r\n     * \r\n     * @param {String} message A human-readable message describing the error\r\n     *                         or status.\r\n     * @param {Number} code The error code, if any, or 0 for success.\r\n     */\r\n    this.sendAck = function(message, code) {\r\n        client.sendAck(guac_stream.index, message, code);\r\n    };\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Integer pool which returns consistently increasing integers while integers\r\n * are in use, and previously-used integers when possible.\r\n * @constructor \r\n */\r\nGuacamole.IntegerPool = function() {\r\n\r\n    /**\r\n     * Reference to this integer pool.\r\n     *\r\n     * @private\r\n     */\r\n    var guac_pool = this;\r\n\r\n    /**\r\n     * Array of available integers.\r\n     *\r\n     * @private\r\n     * @type {Number[]}\r\n     */\r\n    var pool = [];\r\n\r\n    /**\r\n     * The next integer to return if no more integers remain.\r\n     * @type {Number}\r\n     */\r\n    this.next_int = 0;\r\n\r\n    /**\r\n     * Returns the next available integer in the pool. If possible, a previously\r\n     * used integer will be returned.\r\n     * \r\n     * @return {Number} The next available integer.\r\n     */\r\n    this.next = function() {\r\n\r\n        // If free'd integers exist, return one of those\r\n        if (pool.length > 0)\r\n            return pool.shift();\r\n\r\n        // Otherwise, return a new integer\r\n        return guac_pool.next_int++;\r\n\r\n    };\r\n\r\n    /**\r\n     * Frees the given integer, allowing it to be reused.\r\n     * \r\n     * @param {Number} integer The integer to free.\r\n     */\r\n    this.free = function(integer) {\r\n        pool.push(integer);\r\n    };\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A reader which automatically handles the given input stream, assembling all\r\n * received blobs into a JavaScript object by appending them to each other, in\r\n * order, and decoding the result as JSON. Note that this object will overwrite\r\n * any installed event handlers on the given Guacamole.InputStream.\r\n * \r\n * @constructor\r\n * @param {Guacamole.InputStream} stream\r\n *     The stream that JSON will be read from.\r\n */\r\nGuacamole.JSONReader = function guacamoleJSONReader(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.JSONReader.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.JSONReader}\r\n     */\r\n    var guacReader = this;\r\n\r\n    /**\r\n     * Wrapped Guacamole.StringReader.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.StringReader}\r\n     */\r\n    var stringReader = new Guacamole.StringReader(stream);\r\n\r\n    /**\r\n     * All JSON read thus far.\r\n     *\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    var json = '';\r\n\r\n    /**\r\n     * Returns the current length of this Guacamole.JSONReader, in characters.\r\n     *\r\n     * @return {Number}\r\n     *     The current length of this Guacamole.JSONReader.\r\n     */\r\n    this.getLength = function getLength() {\r\n        return json.length;\r\n    };\r\n\r\n    /**\r\n     * Returns the contents of this Guacamole.JSONReader as a JavaScript\r\n     * object.\r\n     *\r\n     * @return {Object}\r\n     *     The contents of this Guacamole.JSONReader, as parsed from the JSON\r\n     *     contents of the input stream.\r\n     */\r\n    this.getJSON = function getJSON() {\r\n        return JSON.parse(json);\r\n    };\r\n\r\n    // Append all received text\r\n    stringReader.ontext = function ontext(text) {\r\n\r\n        // Append received text\r\n        json += text;\r\n\r\n        // Call handler, if present\r\n        if (guacReader.onprogress)\r\n            guacReader.onprogress(text.length);\r\n\r\n    };\r\n\r\n    // Simply call onend when end received\r\n    stringReader.onend = function onend() {\r\n        if (guacReader.onend)\r\n            guacReader.onend();\r\n    };\r\n\r\n    /**\r\n     * Fired once for every blob of data received.\r\n     * \r\n     * @event\r\n     * @param {Number} length\r\n     *     The number of characters received.\r\n     */\r\n    this.onprogress = null;\r\n\r\n    /**\r\n     * Fired once this stream is finished and no further data will be written.\r\n     *\r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Provides cross-browser and cross-keyboard keyboard for a specific element.\r\n * Browser and keyboard layout variation is abstracted away, providing events\r\n * which represent keys as their corresponding X11 keysym.\r\n * \r\n * @constructor\r\n * @param {Element|Document} [element]\r\n *    The Element to use to provide keyboard events. If omitted, at least one\r\n *    Element must be manually provided through the listenTo() function for\r\n *    the Guacamole.Keyboard instance to have any effect.\r\n */\r\nGuacamole.Keyboard = function Keyboard(element) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Keyboard.\r\n     * @private\r\n     */\r\n    var guac_keyboard = this;\r\n\r\n    /**\r\n     * An integer value which uniquely identifies this Guacamole.Keyboard\r\n     * instance with respect to other Guacamole.Keyboard instances.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var guacKeyboardID = Guacamole.Keyboard._nextID++;\r\n\r\n    /**\r\n     * The name of the property which is added to event objects via markEvent()\r\n     * to note that they have already been handled by this Guacamole.Keyboard.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {String}\r\n     */\r\n    var EVENT_MARKER = '_GUAC_KEYBOARD_HANDLED_BY_' + guacKeyboardID;\r\n\r\n    /**\r\n     * Fired whenever the user presses a key with the element associated\r\n     * with this Guacamole.Keyboard in focus.\r\n     * \r\n     * @event\r\n     * @param {Number} keysym The keysym of the key being pressed.\r\n     * @return {Boolean} true if the key event should be allowed through to the\r\n     *                   browser, false otherwise.\r\n     */\r\n    this.onkeydown = null;\r\n\r\n    /**\r\n     * Fired whenever the user releases a key with the element associated\r\n     * with this Guacamole.Keyboard in focus.\r\n     * \r\n     * @event\r\n     * @param {Number} keysym The keysym of the key being released.\r\n     */\r\n    this.onkeyup = null;\r\n\r\n    /**\r\n     * Set of known platform-specific or browser-specific quirks which must be\r\n     * accounted for to properly interpret key events, even if the only way to\r\n     * reliably detect that quirk is to platform/browser-sniff.\r\n     *\r\n     * @private\r\n     * @type {Object.<String, Boolean>}\r\n     */\r\n    var quirks = {\r\n\r\n        /**\r\n         * Whether keyup events are universally unreliable.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        keyupUnreliable: false,\r\n\r\n        /**\r\n         * Whether the Alt key is actually a modifier for typable keys and is\r\n         * thus never used for keyboard shortcuts.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        altIsTypableOnly: false,\r\n\r\n        /**\r\n         * Whether we can rely on receiving a keyup event for the Caps Lock\r\n         * key.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        capsLockKeyupUnreliable: false\r\n\r\n    };\r\n\r\n    // Set quirk flags depending on platform/browser, if such information is\r\n    // available\r\n    if (navigator && navigator.platform) {\r\n\r\n        // All keyup events are unreliable on iOS (sadly)\r\n        if (navigator.platform.match(/ipad|iphone|ipod/i))\r\n            quirks.keyupUnreliable = true;\r\n\r\n        // The Alt key on Mac is never used for keyboard shortcuts, and the\r\n        // Caps Lock key never dispatches keyup events\r\n        else if (navigator.platform.match(/^mac/i)) {\r\n            quirks.altIsTypableOnly = true;\r\n            quirks.capsLockKeyupUnreliable = true;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * A key event having a corresponding timestamp. This event is non-specific.\r\n     * Its subclasses should be used instead when recording specific key\r\n     * events.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     */\r\n    var KeyEvent = function() {\r\n\r\n        /**\r\n         * Reference to this key event.\r\n         */\r\n        var key_event = this;\r\n\r\n        /**\r\n         * An arbitrary timestamp in milliseconds, indicating this event's\r\n         * position in time relative to other events.\r\n         *\r\n         * @type {Number}\r\n         */\r\n        this.timestamp = new Date().getTime();\r\n\r\n        /**\r\n         * Whether the default action of this key event should be prevented.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        this.defaultPrevented = false;\r\n\r\n        /**\r\n         * The keysym of the key associated with this key event, as determined\r\n         * by a best-effort guess using available event properties and keyboard\r\n         * state.\r\n         *\r\n         * @type {Number}\r\n         */\r\n        this.keysym = null;\r\n\r\n        /**\r\n         * Whether the keysym value of this key event is known to be reliable.\r\n         * If false, the keysym may still be valid, but it's only a best guess,\r\n         * and future key events may be a better source of information.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        this.reliable = false;\r\n\r\n        /**\r\n         * Returns the number of milliseconds elapsed since this event was\r\n         * received.\r\n         *\r\n         * @return {Number} The number of milliseconds elapsed since this\r\n         *                  event was received.\r\n         */\r\n        this.getAge = function() {\r\n            return new Date().getTime() - key_event.timestamp;\r\n        };\r\n\r\n    };\r\n\r\n    /**\r\n     * Information related to the pressing of a key, which need not be a key\r\n     * associated with a printable character. The presence or absence of any\r\n     * information within this object is browser-dependent.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     * @augments Guacamole.Keyboard.KeyEvent\r\n     * @param {Number} keyCode The JavaScript key code of the key pressed.\r\n     * @param {String} keyIdentifier The legacy DOM3 \"keyIdentifier\" of the key\r\n     *                               pressed, as defined at:\r\n     *                               http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-Events-KeyboardEvent\r\n     * @param {String} key The standard name of the key pressed, as defined at:\r\n     *                     http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     * @param {Number} location The location on the keyboard corresponding to\r\n     *                          the key pressed, as defined at:\r\n     *                          http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     */\r\n    var KeydownEvent = function(keyCode, keyIdentifier, key, location) {\r\n\r\n        // We extend KeyEvent\r\n        KeyEvent.apply(this);\r\n\r\n        /**\r\n         * The JavaScript key code of the key pressed.\r\n         *\r\n         * @type {Number}\r\n         */\r\n        this.keyCode = keyCode;\r\n\r\n        /**\r\n         * The legacy DOM3 \"keyIdentifier\" of the key pressed, as defined at:\r\n         * http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-Events-KeyboardEvent\r\n         *\r\n         * @type {String}\r\n         */\r\n        this.keyIdentifier = keyIdentifier;\r\n\r\n        /**\r\n         * The standard name of the key pressed, as defined at:\r\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n         * \r\n         * @type {String}\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * The location on the keyboard corresponding to the key pressed, as\r\n         * defined at:\r\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n         * \r\n         * @type {Number}\r\n         */\r\n        this.location = location;\r\n\r\n        // If key is known from keyCode or DOM3 alone, use that\r\n        this.keysym =  keysym_from_key_identifier(key, location)\r\n                    || keysym_from_keycode(keyCode, location);\r\n\r\n        /**\r\n         * Whether the keyup following this keydown event is known to be\r\n         * reliable. If false, we cannot rely on the keyup event to occur.\r\n         *\r\n         * @type {Boolean}\r\n         */\r\n        this.keyupReliable = !quirks.keyupUnreliable;\r\n\r\n        // DOM3 and keyCode are reliable sources if the corresponding key is\r\n        // not a printable key\r\n        if (this.keysym && !isPrintable(this.keysym))\r\n            this.reliable = true;\r\n\r\n        // Use legacy keyIdentifier as a last resort, if it looks sane\r\n        if (!this.keysym && key_identifier_sane(keyCode, keyIdentifier))\r\n            this.keysym = keysym_from_key_identifier(keyIdentifier, location, guac_keyboard.modifiers.shift);\r\n\r\n        // If a key is pressed while meta is held down, the keyup will\r\n        // never be sent in Chrome (bug #108404)\r\n        if (guac_keyboard.modifiers.meta && this.keysym !== 0xFFE7 && this.keysym !== 0xFFE8)\r\n            this.keyupReliable = false;\r\n\r\n        // We cannot rely on receiving keyup for Caps Lock on certain platforms\r\n        else if (this.keysym === 0xFFE5 && quirks.capsLockKeyupUnreliable)\r\n            this.keyupReliable = false;\r\n\r\n        // Determine whether default action for Alt+combinations must be prevented\r\n        var prevent_alt = !guac_keyboard.modifiers.ctrl && !quirks.altIsTypableOnly;\r\n\r\n        // Determine whether default action for Ctrl+combinations must be prevented\r\n        var prevent_ctrl = !guac_keyboard.modifiers.alt;\r\n\r\n        // We must rely on the (potentially buggy) keyIdentifier if preventing\r\n        // the default action is important\r\n        if ((prevent_ctrl && guac_keyboard.modifiers.ctrl)\r\n         || (prevent_alt  && guac_keyboard.modifiers.alt)\r\n         || guac_keyboard.modifiers.meta\r\n         || guac_keyboard.modifiers.hyper)\r\n            this.reliable = true;\r\n\r\n        // Record most recently known keysym by associated key code\r\n        recentKeysym[keyCode] = this.keysym;\r\n\r\n    };\r\n\r\n    KeydownEvent.prototype = new KeyEvent();\r\n\r\n    /**\r\n     * Information related to the pressing of a key, which MUST be\r\n     * associated with a printable character. The presence or absence of any\r\n     * information within this object is browser-dependent.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     * @augments Guacamole.Keyboard.KeyEvent\r\n     * @param {Number} charCode The Unicode codepoint of the character that\r\n     *                          would be typed by the key pressed.\r\n     */\r\n    var KeypressEvent = function(charCode) {\r\n\r\n        // We extend KeyEvent\r\n        KeyEvent.apply(this);\r\n\r\n        /**\r\n         * The Unicode codepoint of the character that would be typed by the\r\n         * key pressed.\r\n         *\r\n         * @type {Number}\r\n         */\r\n        this.charCode = charCode;\r\n\r\n        // Pull keysym from char code\r\n        this.keysym = keysym_from_charcode(charCode);\r\n\r\n        // Keypress is always reliable\r\n        this.reliable = true;\r\n\r\n    };\r\n\r\n    KeypressEvent.prototype = new KeyEvent();\r\n\r\n    /**\r\n     * Information related to the pressing of a key, which need not be a key\r\n     * associated with a printable character. The presence or absence of any\r\n     * information within this object is browser-dependent.\r\n     *\r\n     * @private\r\n     * @constructor\r\n     * @augments Guacamole.Keyboard.KeyEvent\r\n     * @param {Number} keyCode The JavaScript key code of the key released.\r\n     * @param {String} keyIdentifier The legacy DOM3 \"keyIdentifier\" of the key\r\n     *                               released, as defined at:\r\n     *                               http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-Events-KeyboardEvent\r\n     * @param {String} key The standard name of the key released, as defined at:\r\n     *                     http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     * @param {Number} location The location on the keyboard corresponding to\r\n     *                          the key released, as defined at:\r\n     *                          http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     */\r\n    var KeyupEvent = function(keyCode, keyIdentifier, key, location) {\r\n\r\n        // We extend KeyEvent\r\n        KeyEvent.apply(this);\r\n\r\n        /**\r\n         * The JavaScript key code of the key released.\r\n         *\r\n         * @type {Number}\r\n         */\r\n        this.keyCode = keyCode;\r\n\r\n        /**\r\n         * The legacy DOM3 \"keyIdentifier\" of the key released, as defined at:\r\n         * http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-Events-KeyboardEvent\r\n         *\r\n         * @type {String}\r\n         */\r\n        this.keyIdentifier = keyIdentifier;\r\n\r\n        /**\r\n         * The standard name of the key released, as defined at:\r\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n         * \r\n         * @type {String}\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * The location on the keyboard corresponding to the key released, as\r\n         * defined at:\r\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n         * \r\n         * @type {Number}\r\n         */\r\n        this.location = location;\r\n\r\n        // If key is known from keyCode or DOM3 alone, use that\r\n        this.keysym =  keysym_from_keycode(keyCode, location)\r\n                    || keysym_from_key_identifier(key, location); // keyCode is still more reliable for keyup when dead keys are in use\r\n\r\n        // Fall back to the most recently pressed keysym associated with the\r\n        // keyCode if the inferred key doesn't seem to actually be pressed\r\n        if (!guac_keyboard.pressed[this.keysym])\r\n            this.keysym = recentKeysym[keyCode] || this.keysym;\r\n\r\n        // Keyup is as reliable as it will ever be\r\n        this.reliable = true;\r\n\r\n    };\r\n\r\n    KeyupEvent.prototype = new KeyEvent();\r\n\r\n    /**\r\n     * An array of recorded events, which can be instances of the private\r\n     * KeydownEvent, KeypressEvent, and KeyupEvent classes.\r\n     *\r\n     * @private\r\n     * @type {KeyEvent[]}\r\n     */\r\n    var eventLog = [];\r\n\r\n    /**\r\n     * Map of known JavaScript keycodes which do not map to typable characters\r\n     * to their X11 keysym equivalents.\r\n     * @private\r\n     */\r\n    var keycodeKeysyms = {\r\n        8:   [0xFF08], // backspace\r\n        9:   [0xFF09], // tab\r\n        12:  [0xFF0B, 0xFF0B, 0xFF0B, 0xFFB5], // clear       / KP 5\r\n        13:  [0xFF0D], // enter\r\n        16:  [0xFFE1, 0xFFE1, 0xFFE2], // shift\r\n        17:  [0xFFE3, 0xFFE3, 0xFFE4], // ctrl\r\n        18:  [0xFFE9, 0xFFE9, 0xFE03], // alt\r\n        19:  [0xFF13], // pause/break\r\n        20:  [0xFFE5], // caps lock\r\n        27:  [0xFF1B], // escape\r\n        32:  [0x0020], // space\r\n        33:  [0xFF55, 0xFF55, 0xFF55, 0xFFB9], // page up     / KP 9\r\n        34:  [0xFF56, 0xFF56, 0xFF56, 0xFFB3], // page down   / KP 3\r\n        35:  [0xFF57, 0xFF57, 0xFF57, 0xFFB1], // end         / KP 1\r\n        36:  [0xFF50, 0xFF50, 0xFF50, 0xFFB7], // home        / KP 7\r\n        37:  [0xFF51, 0xFF51, 0xFF51, 0xFFB4], // left arrow  / KP 4\r\n        38:  [0xFF52, 0xFF52, 0xFF52, 0xFFB8], // up arrow    / KP 8\r\n        39:  [0xFF53, 0xFF53, 0xFF53, 0xFFB6], // right arrow / KP 6\r\n        40:  [0xFF54, 0xFF54, 0xFF54, 0xFFB2], // down arrow  / KP 2\r\n        45:  [0xFF63, 0xFF63, 0xFF63, 0xFFB0], // insert      / KP 0\r\n        46:  [0xFFFF, 0xFFFF, 0xFFFF, 0xFFAE], // delete      / KP decimal\r\n        91:  [0xFFEB], // left window key (hyper_l)\r\n        92:  [0xFF67], // right window key (menu key?)\r\n        93:  null,     // select key\r\n        96:  [0xFFB0], // KP 0\r\n        97:  [0xFFB1], // KP 1\r\n        98:  [0xFFB2], // KP 2\r\n        99:  [0xFFB3], // KP 3\r\n        100: [0xFFB4], // KP 4\r\n        101: [0xFFB5], // KP 5\r\n        102: [0xFFB6], // KP 6\r\n        103: [0xFFB7], // KP 7\r\n        104: [0xFFB8], // KP 8\r\n        105: [0xFFB9], // KP 9\r\n        106: [0xFFAA], // KP multiply\r\n        107: [0xFFAB], // KP add\r\n        109: [0xFFAD], // KP subtract\r\n        110: [0xFFAE], // KP decimal\r\n        111: [0xFFAF], // KP divide\r\n        112: [0xFFBE], // f1\r\n        113: [0xFFBF], // f2\r\n        114: [0xFFC0], // f3\r\n        115: [0xFFC1], // f4\r\n        116: [0xFFC2], // f5\r\n        117: [0xFFC3], // f6\r\n        118: [0xFFC4], // f7\r\n        119: [0xFFC5], // f8\r\n        120: [0xFFC6], // f9\r\n        121: [0xFFC7], // f10\r\n        122: [0xFFC8], // f11\r\n        123: [0xFFC9], // f12\r\n        144: [0xFF7F], // num lock\r\n        145: [0xFF14], // scroll lock\r\n        225: [0xFE03]  // altgraph (iso_level3_shift)\r\n    };\r\n\r\n    /**\r\n     * Map of known JavaScript keyidentifiers which do not map to typable\r\n     * characters to their unshifted X11 keysym equivalents.\r\n     * @private\r\n     */\r\n    var keyidentifier_keysym = {\r\n        \"Again\": [0xFF66],\r\n        \"AllCandidates\": [0xFF3D],\r\n        \"Alphanumeric\": [0xFF30],\r\n        \"Alt\": [0xFFE9, 0xFFE9, 0xFE03],\r\n        \"Attn\": [0xFD0E],\r\n        \"AltGraph\": [0xFE03],\r\n        \"ArrowDown\": [0xFF54],\r\n        \"ArrowLeft\": [0xFF51],\r\n        \"ArrowRight\": [0xFF53],\r\n        \"ArrowUp\": [0xFF52],\r\n        \"Backspace\": [0xFF08],\r\n        \"CapsLock\": [0xFFE5],\r\n        \"Cancel\": [0xFF69],\r\n        \"Clear\": [0xFF0B],\r\n        \"Convert\": [0xFF21],\r\n        \"Copy\": [0xFD15],\r\n        \"Crsel\": [0xFD1C],\r\n        \"CrSel\": [0xFD1C],\r\n        \"CodeInput\": [0xFF37],\r\n        \"Compose\": [0xFF20],\r\n        \"Control\": [0xFFE3, 0xFFE3, 0xFFE4],\r\n        \"ContextMenu\": [0xFF67],\r\n        \"Delete\": [0xFFFF],\r\n        \"Down\": [0xFF54],\r\n        \"End\": [0xFF57],\r\n        \"Enter\": [0xFF0D],\r\n        \"EraseEof\": [0xFD06],\r\n        \"Escape\": [0xFF1B],\r\n        \"Execute\": [0xFF62],\r\n        \"Exsel\": [0xFD1D],\r\n        \"ExSel\": [0xFD1D],\r\n        \"F1\": [0xFFBE],\r\n        \"F2\": [0xFFBF],\r\n        \"F3\": [0xFFC0],\r\n        \"F4\": [0xFFC1],\r\n        \"F5\": [0xFFC2],\r\n        \"F6\": [0xFFC3],\r\n        \"F7\": [0xFFC4],\r\n        \"F8\": [0xFFC5],\r\n        \"F9\": [0xFFC6],\r\n        \"F10\": [0xFFC7],\r\n        \"F11\": [0xFFC8],\r\n        \"F12\": [0xFFC9],\r\n        \"F13\": [0xFFCA],\r\n        \"F14\": [0xFFCB],\r\n        \"F15\": [0xFFCC],\r\n        \"F16\": [0xFFCD],\r\n        \"F17\": [0xFFCE],\r\n        \"F18\": [0xFFCF],\r\n        \"F19\": [0xFFD0],\r\n        \"F20\": [0xFFD1],\r\n        \"F21\": [0xFFD2],\r\n        \"F22\": [0xFFD3],\r\n        \"F23\": [0xFFD4],\r\n        \"F24\": [0xFFD5],\r\n        \"Find\": [0xFF68],\r\n        \"GroupFirst\": [0xFE0C],\r\n        \"GroupLast\": [0xFE0E],\r\n        \"GroupNext\": [0xFE08],\r\n        \"GroupPrevious\": [0xFE0A],\r\n        \"FullWidth\": null,\r\n        \"HalfWidth\": null,\r\n        \"HangulMode\": [0xFF31],\r\n        \"Hankaku\": [0xFF29],\r\n        \"HanjaMode\": [0xFF34],\r\n        \"Help\": [0xFF6A],\r\n        \"Hiragana\": [0xFF25],\r\n        \"HiraganaKatakana\": [0xFF27],\r\n        \"Home\": [0xFF50],\r\n        \"Hyper\": [0xFFED, 0xFFED, 0xFFEE],\r\n        \"Insert\": [0xFF63],\r\n        \"JapaneseHiragana\": [0xFF25],\r\n        \"JapaneseKatakana\": [0xFF26],\r\n        \"JapaneseRomaji\": [0xFF24],\r\n        \"JunjaMode\": [0xFF38],\r\n        \"KanaMode\": [0xFF2D],\r\n        \"KanjiMode\": [0xFF21],\r\n        \"Katakana\": [0xFF26],\r\n        \"Left\": [0xFF51],\r\n        \"Meta\": [0xFFE7, 0xFFE7, 0xFFE8],\r\n        \"ModeChange\": [0xFF7E],\r\n        \"NumLock\": [0xFF7F],\r\n        \"PageDown\": [0xFF56],\r\n        \"PageUp\": [0xFF55],\r\n        \"Pause\": [0xFF13],\r\n        \"Play\": [0xFD16],\r\n        \"PreviousCandidate\": [0xFF3E],\r\n        \"PrintScreen\": [0xFF61],\r\n        \"Redo\": [0xFF66],\r\n        \"Right\": [0xFF53],\r\n        \"RomanCharacters\": null,\r\n        \"Scroll\": [0xFF14],\r\n        \"Select\": [0xFF60],\r\n        \"Separator\": [0xFFAC],\r\n        \"Shift\": [0xFFE1, 0xFFE1, 0xFFE2],\r\n        \"SingleCandidate\": [0xFF3C],\r\n        \"Super\": [0xFFEB, 0xFFEB, 0xFFEC],\r\n        \"Tab\": [0xFF09],\r\n        \"UIKeyInputDownArrow\": [0xFF54],\r\n        \"UIKeyInputEscape\": [0xFF1B],\r\n        \"UIKeyInputLeftArrow\": [0xFF51],\r\n        \"UIKeyInputRightArrow\": [0xFF53],\r\n        \"UIKeyInputUpArrow\": [0xFF52],\r\n        \"Up\": [0xFF52],\r\n        \"Undo\": [0xFF65],\r\n        \"Win\": [0xFFEB],\r\n        \"Zenkaku\": [0xFF28],\r\n        \"ZenkakuHankaku\": [0xFF2A]\r\n    };\r\n\r\n    /**\r\n     * All keysyms which should not repeat when held down.\r\n     * @private\r\n     */\r\n    var no_repeat = {\r\n        0xFE03: true, // ISO Level 3 Shift (AltGr)\r\n        0xFFE1: true, // Left shift\r\n        0xFFE2: true, // Right shift\r\n        0xFFE3: true, // Left ctrl \r\n        0xFFE4: true, // Right ctrl \r\n        0xFFE5: true, // Caps Lock\r\n        0xFFE7: true, // Left meta \r\n        0xFFE8: true, // Right meta \r\n        0xFFE9: true, // Left alt\r\n        0xFFEA: true, // Right alt\r\n        0xFFEB: true, // Left hyper\r\n        0xFFEC: true  // Right hyper\r\n    };\r\n\r\n    /**\r\n     * All modifiers and their states.\r\n     */\r\n    this.modifiers = new Guacamole.Keyboard.ModifierState();\r\n        \r\n    /**\r\n     * The state of every key, indexed by keysym. If a particular key is\r\n     * pressed, the value of pressed for that keysym will be true. If a key\r\n     * is not currently pressed, it will not be defined. \r\n     */\r\n    this.pressed = {};\r\n\r\n    /**\r\n     * The state of every key, indexed by keysym, for strictly those keys whose\r\n     * status has been indirectly determined thorugh observation of other key\r\n     * events. If a particular key is implicitly pressed, the value of\r\n     * implicitlyPressed for that keysym will be true. If a key\r\n     * is not currently implicitly pressed (the key is not pressed OR the state\r\n     * of the key is explicitly known), it will not be defined.\r\n     *\r\n     * @private\r\n     * @tyle {Object.<Number, Boolean>}\r\n     */\r\n    var implicitlyPressed = {};\r\n\r\n    /**\r\n     * The last result of calling the onkeydown handler for each key, indexed\r\n     * by keysym. This is used to prevent/allow default actions for key events,\r\n     * even when the onkeydown handler cannot be called again because the key\r\n     * is (theoretically) still pressed.\r\n     *\r\n     * @private\r\n     */\r\n    var last_keydown_result = {};\r\n\r\n    /**\r\n     * The keysym most recently associated with a given keycode when keydown\r\n     * fired. This object maps keycodes to keysyms.\r\n     *\r\n     * @private\r\n     * @type {Object.<Number, Number>}\r\n     */\r\n    var recentKeysym = {};\r\n\r\n    /**\r\n     * Timeout before key repeat starts.\r\n     * @private\r\n     */\r\n    var key_repeat_timeout = null;\r\n\r\n    /**\r\n     * Interval which presses and releases the last key pressed while that\r\n     * key is still being held down.\r\n     * @private\r\n     */\r\n    var key_repeat_interval = null;\r\n\r\n    /**\r\n     * Given an array of keysyms indexed by location, returns the keysym\r\n     * for the given location, or the keysym for the standard location if\r\n     * undefined.\r\n     * \r\n     * @private\r\n     * @param {Number[]} keysyms\r\n     *     An array of keysyms, where the index of the keysym in the array is\r\n     *     the location value.\r\n     *\r\n     * @param {Number} location\r\n     *     The location on the keyboard corresponding to the key pressed, as\r\n     *     defined at: http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     */\r\n    var get_keysym = function get_keysym(keysyms, location) {\r\n\r\n        if (!keysyms)\r\n            return null;\r\n\r\n        return keysyms[location] || keysyms[0];\r\n    };\r\n\r\n    /**\r\n     * Returns true if the given keysym corresponds to a printable character,\r\n     * false otherwise.\r\n     *\r\n     * @param {Number} keysym\r\n     *     The keysym to check.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if the given keysym corresponds to a printable character,\r\n     *     false otherwise.\r\n     */\r\n    var isPrintable = function isPrintable(keysym) {\r\n\r\n        // Keysyms with Unicode equivalents are printable\r\n        return (keysym >= 0x00 && keysym <= 0xFF)\r\n            || (keysym & 0xFFFF0000) === 0x01000000;\r\n\r\n    };\r\n\r\n    function keysym_from_key_identifier(identifier, location, shifted) {\r\n\r\n        if (!identifier)\r\n            return null;\r\n\r\n        var typedCharacter;\r\n\r\n        // If identifier is U+xxxx, decode Unicode character \r\n        var unicodePrefixLocation = identifier.indexOf(\"U+\");\r\n        if (unicodePrefixLocation >= 0) {\r\n            var hex = identifier.substring(unicodePrefixLocation+2);\r\n            typedCharacter = String.fromCharCode(parseInt(hex, 16));\r\n        }\r\n\r\n        // If single character and not keypad, use that as typed character\r\n        else if (identifier.length === 1 && location !== 3)\r\n            typedCharacter = identifier;\r\n\r\n        // Otherwise, look up corresponding keysym\r\n        else\r\n            return get_keysym(keyidentifier_keysym[identifier], location);\r\n\r\n        // Alter case if necessary\r\n        if (shifted === true)\r\n            typedCharacter = typedCharacter.toUpperCase();\r\n        else if (shifted === false)\r\n            typedCharacter = typedCharacter.toLowerCase();\r\n\r\n        // Get codepoint\r\n        var codepoint = typedCharacter.charCodeAt(0);\r\n        return keysym_from_charcode(codepoint);\r\n\r\n    }\r\n\r\n    function isControlCharacter(codepoint) {\r\n        return codepoint <= 0x1F || (codepoint >= 0x7F && codepoint <= 0x9F);\r\n    }\r\n\r\n    function keysym_from_charcode(codepoint) {\r\n\r\n        // Keysyms for control characters\r\n        if (isControlCharacter(codepoint)) return 0xFF00 | codepoint;\r\n\r\n        // Keysyms for ASCII chars\r\n        if (codepoint >= 0x0000 && codepoint <= 0x00FF)\r\n            return codepoint;\r\n\r\n        // Keysyms for Unicode\r\n        if (codepoint >= 0x0100 && codepoint <= 0x10FFFF)\r\n            return 0x01000000 | codepoint;\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    function keysym_from_keycode(keyCode, location) {\r\n        return get_keysym(keycodeKeysyms[keyCode], location);\r\n    }\r\n\r\n    /**\r\n     * Heuristically detects if the legacy keyIdentifier property of\r\n     * a keydown/keyup event looks incorrectly derived. Chrome, and\r\n     * presumably others, will produce the keyIdentifier by assuming\r\n     * the keyCode is the Unicode codepoint for that key. This is not\r\n     * correct in all cases.\r\n     *\r\n     * @private\r\n     * @param {Number} keyCode\r\n     *     The keyCode from a browser keydown/keyup event.\r\n     *\r\n     * @param {String} keyIdentifier\r\n     *     The legacy keyIdentifier from a browser keydown/keyup event.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if the keyIdentifier looks sane, false if the keyIdentifier\r\n     *     appears incorrectly derived or is missing entirely.\r\n     */\r\n    var key_identifier_sane = function key_identifier_sane(keyCode, keyIdentifier) {\r\n\r\n        // Missing identifier is not sane\r\n        if (!keyIdentifier)\r\n            return false;\r\n\r\n        // Assume non-Unicode keyIdentifier values are sane\r\n        var unicodePrefixLocation = keyIdentifier.indexOf(\"U+\");\r\n        if (unicodePrefixLocation === -1)\r\n            return true;\r\n\r\n        // If the Unicode codepoint isn't identical to the keyCode,\r\n        // then the identifier is likely correct\r\n        var codepoint = parseInt(keyIdentifier.substring(unicodePrefixLocation+2), 16);\r\n        if (keyCode !== codepoint)\r\n            return true;\r\n\r\n        // The keyCodes for A-Z and 0-9 are actually identical to their\r\n        // Unicode codepoints\r\n        if ((keyCode >= 65 && keyCode <= 90) || (keyCode >= 48 && keyCode <= 57))\r\n            return true;\r\n\r\n        // The keyIdentifier does NOT appear sane\r\n        return false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Marks a key as pressed, firing the keydown event if registered. Key\r\n     * repeat for the pressed key will start after a delay if that key is\r\n     * not a modifier. The return value of this function depends on the\r\n     * return value of the keydown event handler, if any.\r\n     * \r\n     * @param {Number} keysym The keysym of the key to press.\r\n     * @return {Boolean} true if event should NOT be canceled, false otherwise.\r\n     */\r\n    this.press = function(keysym) {\r\n\r\n        // Don't bother with pressing the key if the key is unknown\r\n        if (keysym === null) return;\r\n\r\n        // Only press if released\r\n        if (!guac_keyboard.pressed[keysym]) {\r\n\r\n            // Mark key as pressed\r\n            guac_keyboard.pressed[keysym] = true;\r\n\r\n            // Send key event\r\n            if (guac_keyboard.onkeydown) {\r\n                var result = guac_keyboard.onkeydown(keysym);\r\n                last_keydown_result[keysym] = result;\r\n\r\n                // Stop any current repeat\r\n                window.clearTimeout(key_repeat_timeout);\r\n                window.clearInterval(key_repeat_interval);\r\n\r\n                // Repeat after a delay as long as pressed\r\n                if (!no_repeat[keysym])\r\n                    key_repeat_timeout = window.setTimeout(function() {\r\n                        key_repeat_interval = window.setInterval(function() {\r\n                            guac_keyboard.onkeyup(keysym);\r\n                            guac_keyboard.onkeydown(keysym);\r\n                        }, 50);\r\n                    }, 500);\r\n\r\n                return result;\r\n            }\r\n        }\r\n\r\n        // Return the last keydown result by default, resort to false if unknown\r\n        return last_keydown_result[keysym] || false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Marks a key as released, firing the keyup event if registered.\r\n     * \r\n     * @param {Number} keysym The keysym of the key to release.\r\n     */\r\n    this.release = function(keysym) {\r\n\r\n        // Only release if pressed\r\n        if (guac_keyboard.pressed[keysym]) {\r\n            \r\n            // Mark key as released\r\n            delete guac_keyboard.pressed[keysym];\r\n            delete implicitlyPressed[keysym];\r\n\r\n            // Stop repeat\r\n            window.clearTimeout(key_repeat_timeout);\r\n            window.clearInterval(key_repeat_interval);\r\n\r\n            // Send key event\r\n            if (keysym !== null && guac_keyboard.onkeyup)\r\n                guac_keyboard.onkeyup(keysym);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Presses and releases the keys necessary to type the given string of\r\n     * text.\r\n     *\r\n     * @param {String} str\r\n     *     The string to type.\r\n     */\r\n    this.type = function type(str) {\r\n\r\n        // Press/release the key corresponding to each character in the string\r\n        for (var i = 0; i < str.length; i++) {\r\n\r\n            // Determine keysym of current character\r\n            var codepoint = str.codePointAt ? str.codePointAt(i) : str.charCodeAt(i);\r\n            var keysym = keysym_from_charcode(codepoint);\r\n\r\n            // Press and release key for current character\r\n            guac_keyboard.press(keysym);\r\n            guac_keyboard.release(keysym);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Resets the state of this keyboard, releasing all keys, and firing keyup\r\n     * events for each released key.\r\n     */\r\n    this.reset = function() {\r\n\r\n        // Release all pressed keys\r\n        for (var keysym in guac_keyboard.pressed)\r\n            guac_keyboard.release(parseInt(keysym));\r\n\r\n        // Clear event log\r\n        eventLog = [];\r\n\r\n    };\r\n\r\n    /**\r\n     * Given the remote and local state of a particular key, resynchronizes the\r\n     * remote state of that key with the local state through pressing or\r\n     * releasing keysyms.\r\n     *\r\n     * @private\r\n     * @param {Boolean} remoteState\r\n     *     Whether the key is currently pressed remotely.\r\n     *\r\n     * @param {Boolean} localState\r\n     *     Whether the key is currently pressed remotely locally. If the state\r\n     *     of the key is not known, this may be undefined.\r\n     *\r\n     * @param {Number[]} keysyms\r\n     *     The keysyms which represent the key being updated.\r\n     *\r\n     * @param {KeyEvent} keyEvent\r\n     *     Guacamole's current best interpretation of the key event being\r\n     *     processed.\r\n     */\r\n    var updateModifierState = function updateModifierState(remoteState,\r\n        localState, keysyms, keyEvent) {\r\n\r\n        var i;\r\n\r\n        // Do not trust changes in modifier state for events directly involving\r\n        // that modifier: (1) the flag may erroneously be cleared despite\r\n        // another version of the same key still being held and (2) the change\r\n        // in flag may be due to the current event being processed, thus\r\n        // updating things here is at best redundant and at worst incorrect\r\n        if (keysyms.indexOf(keyEvent.keysym) !== -1)\r\n            return;\r\n\r\n        // Release all related keys if modifier is implicitly released\r\n        if (remoteState && localState === false) {\r\n            for (i = 0; i < keysyms.length; i++) {\r\n                guac_keyboard.release(keysyms[i]);\r\n            }\r\n        }\r\n\r\n        // Press if modifier is implicitly pressed\r\n        else if (!remoteState && localState) {\r\n\r\n            // Verify that modifier flag isn't already pressed or already set\r\n            // due to another version of the same key being held down\r\n            for (i = 0; i < keysyms.length; i++) {\r\n                if (guac_keyboard.pressed[keysyms[i]])\r\n                    return;\r\n            }\r\n\r\n            // Mark as implicitly pressed only if there is other information\r\n            // within the key event relating to a different key. Some\r\n            // platforms, such as iOS, will send essentially empty key events\r\n            // for modifier keys, using only the modifier flags to signal the\r\n            // identity of the key.\r\n            var keysym = keysyms[0];\r\n            if (keyEvent.keysym)\r\n                implicitlyPressed[keysym] = true;\r\n\r\n            guac_keyboard.press(keysym);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Given a keyboard event, updates the local modifier state and remote\r\n     * key state based on the modifier flags within the event. This function\r\n     * pays no attention to keycodes.\r\n     *\r\n     * @private\r\n     * @param {KeyboardEvent} e\r\n     *     The keyboard event containing the flags to update.\r\n     *\r\n     * @param {KeyEvent} keyEvent\r\n     *     Guacamole's current best interpretation of the key event being\r\n     *     processed.\r\n     */\r\n    var syncModifierStates = function syncModifierStates(e, keyEvent) {\r\n\r\n        // Get state\r\n        var state = Guacamole.Keyboard.ModifierState.fromKeyboardEvent(e);\r\n\r\n        // Resync state of alt\r\n        updateModifierState(guac_keyboard.modifiers.alt, state.alt, [\r\n            0xFFE9, // Left alt\r\n            0xFFEA, // Right alt\r\n            0xFE03  // AltGr\r\n        ], keyEvent);\r\n\r\n        // Resync state of shift\r\n        updateModifierState(guac_keyboard.modifiers.shift, state.shift, [\r\n            0xFFE1, // Left shift\r\n            0xFFE2  // Right shift\r\n        ], keyEvent);\r\n\r\n        // Resync state of ctrl\r\n        updateModifierState(guac_keyboard.modifiers.ctrl, state.ctrl, [\r\n            0xFFE3, // Left ctrl\r\n            0xFFE4  // Right ctrl\r\n        ], keyEvent);\r\n\r\n        // Resync state of meta\r\n        updateModifierState(guac_keyboard.modifiers.meta, state.meta, [\r\n            0xFFE7, // Left meta\r\n            0xFFE8  // Right meta\r\n        ], keyEvent);\r\n\r\n        // Resync state of hyper\r\n        updateModifierState(guac_keyboard.modifiers.hyper, state.hyper, [\r\n            0xFFEB, // Left hyper\r\n            0xFFEC  // Right hyper\r\n        ], keyEvent);\r\n\r\n        // Update state\r\n        guac_keyboard.modifiers = state;\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns whether all currently pressed keys were implicitly pressed. A\r\n     * key is implicitly pressed if its status was inferred indirectly from\r\n     * inspection of other key events.\r\n     *\r\n     * @private\r\n     * @returns {Boolean}\r\n     *     true if all currently pressed keys were implicitly pressed, false\r\n     *     otherwise.\r\n     */\r\n    var isStateImplicit = function isStateImplicit() {\r\n\r\n        for (var keysym in guac_keyboard.pressed) {\r\n            if (!implicitlyPressed[keysym])\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Reads through the event log, removing events from the head of the log\r\n     * when the corresponding true key presses are known (or as known as they\r\n     * can be).\r\n     * \r\n     * @private\r\n     * @return {Boolean} Whether the default action of the latest event should\r\n     *                   be prevented.\r\n     */\r\n    function interpret_events() {\r\n\r\n        // Do not prevent default if no event could be interpreted\r\n        var handled_event = interpret_event();\r\n        if (!handled_event)\r\n            return false;\r\n\r\n        // Interpret as much as possible\r\n        var last_event;\r\n        do {\r\n            last_event = handled_event;\r\n            handled_event = interpret_event();\r\n        } while (handled_event !== null);\r\n\r\n        // Reset keyboard state if we cannot expect to receive any further\r\n        // keyup events\r\n        if (isStateImplicit())\r\n            guac_keyboard.reset();\r\n\r\n        return last_event.defaultPrevented;\r\n\r\n    }\r\n\r\n    /**\r\n     * Releases Ctrl+Alt, if both are currently pressed and the given keysym\r\n     * looks like a key that may require AltGr.\r\n     *\r\n     * @private\r\n     * @param {Number} keysym The key that was just pressed.\r\n     */\r\n    var release_simulated_altgr = function release_simulated_altgr(keysym) {\r\n\r\n        // Both Ctrl+Alt must be pressed if simulated AltGr is in use\r\n        if (!guac_keyboard.modifiers.ctrl || !guac_keyboard.modifiers.alt)\r\n            return;\r\n\r\n        // Assume [A-Z] never require AltGr\r\n        if (keysym >= 0x0041 && keysym <= 0x005A)\r\n            return;\r\n\r\n        // Assume [a-z] never require AltGr\r\n        if (keysym >= 0x0061 && keysym <= 0x007A)\r\n            return;\r\n\r\n        // Release Ctrl+Alt if the keysym is printable\r\n        if (keysym <= 0xFF || (keysym & 0xFF000000) === 0x01000000) {\r\n            guac_keyboard.release(0xFFE3); // Left ctrl \r\n            guac_keyboard.release(0xFFE4); // Right ctrl \r\n            guac_keyboard.release(0xFFE9); // Left alt\r\n            guac_keyboard.release(0xFFEA); // Right alt\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Reads through the event log, interpreting the first event, if possible,\r\n     * and returning that event. If no events can be interpreted, due to a\r\n     * total lack of events or the need for more events, null is returned. Any\r\n     * interpreted events are automatically removed from the log.\r\n     * \r\n     * @private\r\n     * @return {KeyEvent}\r\n     *     The first key event in the log, if it can be interpreted, or null\r\n     *     otherwise.\r\n     */\r\n    var interpret_event = function interpret_event() {\r\n\r\n        // Peek at first event in log\r\n        var first = eventLog[0];\r\n        if (!first)\r\n            return null;\r\n\r\n        // Keydown event\r\n        if (first instanceof KeydownEvent) {\r\n\r\n            var keysym = null;\r\n            var accepted_events = [];\r\n\r\n            // If event itself is reliable, no need to wait for other events\r\n            if (first.reliable) {\r\n                keysym = first.keysym;\r\n                accepted_events = eventLog.splice(0, 1);\r\n            }\r\n\r\n            // If keydown is immediately followed by a keypress, use the indicated character\r\n            else if (eventLog[1] instanceof KeypressEvent) {\r\n                keysym = eventLog[1].keysym;\r\n                accepted_events = eventLog.splice(0, 2);\r\n            }\r\n\r\n            // If keydown is immediately followed by anything else, then no\r\n            // keypress can possibly occur to clarify this event, and we must\r\n            // handle it now\r\n            else if (eventLog[1]) {\r\n                keysym = first.keysym;\r\n                accepted_events = eventLog.splice(0, 1);\r\n            }\r\n\r\n            // Fire a key press if valid events were found\r\n            if (accepted_events.length > 0) {\r\n\r\n                if (keysym) {\r\n\r\n                    // Fire event\r\n                    release_simulated_altgr(keysym);\r\n                    var defaultPrevented = !guac_keyboard.press(keysym);\r\n                    recentKeysym[first.keyCode] = keysym;\r\n\r\n                    // Release the key now if we cannot rely on the associated\r\n                    // keyup event\r\n                    if (!first.keyupReliable)\r\n                        guac_keyboard.release(keysym);\r\n\r\n                    // Record whether default was prevented\r\n                    for (var i=0; i<accepted_events.length; i++)\r\n                        accepted_events[i].defaultPrevented = defaultPrevented;\r\n\r\n                }\r\n\r\n                return first;\r\n\r\n            }\r\n\r\n        } // end if keydown\r\n\r\n        // Keyup event\r\n        else if (first instanceof KeyupEvent && !quirks.keyupUnreliable) {\r\n\r\n            // Release specific key if known\r\n            var keysym = first.keysym;\r\n            if (keysym) {\r\n                guac_keyboard.release(keysym);\r\n                delete recentKeysym[first.keyCode];\r\n                first.defaultPrevented = true;\r\n            }\r\n\r\n            // Otherwise, fall back to releasing all keys\r\n            else {\r\n                guac_keyboard.reset();\r\n                return first;\r\n            }\r\n\r\n            return eventLog.shift();\r\n\r\n        } // end if keyup\r\n\r\n        // Ignore any other type of event (keypress by itself is invalid, and\r\n        // unreliable keyup events should simply be dumped)\r\n        else\r\n            return eventLog.shift();\r\n\r\n        // No event interpreted\r\n        return null;\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the keyboard location of the key associated with the given\r\n     * keyboard event. The location differentiates key events which otherwise\r\n     * have the same keycode, such as left shift vs. right shift.\r\n     *\r\n     * @private\r\n     * @param {KeyboardEvent} e\r\n     *     A JavaScript keyboard event, as received through the DOM via a\r\n     *     \"keydown\", \"keyup\", or \"keypress\" handler.\r\n     *\r\n     * @returns {Number}\r\n     *     The location of the key event on the keyboard, as defined at:\r\n     *     http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\r\n     */\r\n    var getEventLocation = function getEventLocation(e) {\r\n\r\n        // Use standard location, if possible\r\n        if ('location' in e)\r\n            return e.location;\r\n\r\n        // Failing that, attempt to use deprecated keyLocation\r\n        if ('keyLocation' in e)\r\n            return e.keyLocation;\r\n\r\n        // If no location is available, assume left side\r\n        return 0;\r\n\r\n    };\r\n\r\n    /**\r\n     * Attempts to mark the given Event as having been handled by this\r\n     * Guacamole.Keyboard. If the Event has already been marked as handled,\r\n     * false is returned.\r\n     *\r\n     * @param {Event} e\r\n     *     The Event to mark.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if the given Event was successfully marked, false if the given\r\n     *     Event was already marked.\r\n     */\r\n    var markEvent = function markEvent(e) {\r\n\r\n        // Fail if event is already marked\r\n        if (e[EVENT_MARKER])\r\n            return false;\r\n\r\n        // Mark event otherwise\r\n        e[EVENT_MARKER] = true;\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Attaches event listeners to the given Element, automatically translating\r\n     * received key, input, and composition events into simple keydown/keyup\r\n     * events signalled through this Guacamole.Keyboard's onkeydown and\r\n     * onkeyup handlers.\r\n     *\r\n     * @param {Element|Document} element\r\n     *     The Element to attach event listeners to for the sake of handling\r\n     *     key or input events.\r\n     */\r\n    this.listenTo = function listenTo(element) {\r\n\r\n        // When key pressed\r\n        element.addEventListener(\"keydown\", function(e) {\r\n\r\n            // Only intercept if handler set\r\n            if (!guac_keyboard.onkeydown) return;\r\n\r\n            // Ignore events which have already been handled\r\n            if (!markEvent(e)) return;\r\n\r\n            var keyCode;\r\n            if (window.event) keyCode = window.event.keyCode;\r\n            else if (e.which) keyCode = e.which;\r\n\r\n            // Fix modifier states\r\n            var keydownEvent = new KeydownEvent(keyCode, e.keyIdentifier, e.key, getEventLocation(e));\r\n            syncModifierStates(e, keydownEvent);\r\n\r\n            // Ignore (but do not prevent) the \"composition\" keycode sent by some\r\n            // browsers when an IME is in use (see: http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html)\r\n            if (keyCode === 229)\r\n                return;\r\n\r\n            // Log event\r\n            eventLog.push(keydownEvent);\r\n\r\n            // Interpret as many events as possible, prevent default if indicated\r\n            if (interpret_events())\r\n                e.preventDefault();\r\n\r\n        }, true);\r\n\r\n        // When key pressed\r\n        element.addEventListener(\"keypress\", function(e) {\r\n\r\n            // Only intercept if handler set\r\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\r\n\r\n            // Ignore events which have already been handled\r\n            if (!markEvent(e)) return;\r\n\r\n            var charCode;\r\n            if (window.event) charCode = window.event.keyCode;\r\n            else if (e.which) charCode = e.which;\r\n\r\n            // Fix modifier states\r\n            var keypressEvent = new KeypressEvent(charCode);\r\n            syncModifierStates(e, keypressEvent);\r\n\r\n            // Log event\r\n            eventLog.push(keypressEvent);\r\n\r\n            // Interpret as many events as possible, prevent default if indicated\r\n            if (interpret_events())\r\n                e.preventDefault();\r\n\r\n        }, true);\r\n\r\n        // When key released\r\n        element.addEventListener(\"keyup\", function(e) {\r\n\r\n            // Only intercept if handler set\r\n            if (!guac_keyboard.onkeyup) return;\r\n\r\n            // Ignore events which have already been handled\r\n            if (!markEvent(e)) return;\r\n\r\n            e.preventDefault();\r\n\r\n            var keyCode;\r\n            if (window.event) keyCode = window.event.keyCode;\r\n            else if (e.which) keyCode = e.which;\r\n\r\n            // Fix modifier states\r\n            var keyupEvent = new KeyupEvent(keyCode, e.keyIdentifier, e.key, getEventLocation(e));\r\n            syncModifierStates(e, keyupEvent);\r\n\r\n            // Log event, call for interpretation\r\n            eventLog.push(keyupEvent);\r\n            interpret_events();\r\n\r\n        }, true);\r\n\r\n        /**\r\n         * Handles the given \"input\" event, typing the data within the input text.\r\n         * If the event is complete (text is provided), handling of \"compositionend\"\r\n         * events is suspended, as such events may conflict with input events.\r\n         *\r\n         * @private\r\n         * @param {InputEvent} e\r\n         *     The \"input\" event to handle.\r\n         */\r\n        var handleInput = function handleInput(e) {\r\n\r\n            // Only intercept if handler set\r\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\r\n\r\n            // Ignore events which have already been handled\r\n            if (!markEvent(e)) return;\r\n\r\n            // Type all content written\r\n            if (e.data && !e.isComposing) {\r\n                element.removeEventListener(\"compositionend\", handleComposition, false);\r\n                guac_keyboard.type(e.data);\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * Handles the given \"compositionend\" event, typing the data within the\r\n         * composed text. If the event is complete (composed text is provided),\r\n         * handling of \"input\" events is suspended, as such events may conflict\r\n         * with composition events.\r\n         *\r\n         * @private\r\n         * @param {CompositionEvent} e\r\n         *     The \"compositionend\" event to handle.\r\n         */\r\n        var handleComposition = function handleComposition(e) {\r\n\r\n            // Only intercept if handler set\r\n            if (!guac_keyboard.onkeydown && !guac_keyboard.onkeyup) return;\r\n\r\n            // Ignore events which have already been handled\r\n            if (!markEvent(e)) return;\r\n\r\n            // Type all content written\r\n            if (e.data) {\r\n                element.removeEventListener(\"input\", handleInput, false);\r\n                guac_keyboard.type(e.data);\r\n            }\r\n\r\n        };\r\n\r\n        // Automatically type text entered into the wrapped field\r\n        element.addEventListener(\"input\", handleInput, false);\r\n        element.addEventListener(\"compositionend\", handleComposition, false);\r\n\r\n    };\r\n\r\n    // Listen to given element, if any\r\n    if (element)\r\n        guac_keyboard.listenTo(element);\r\n\r\n};\r\n\r\n/**\r\n * The unique numerical identifier to assign to the next Guacamole.Keyboard\r\n * instance.\r\n *\r\n * @private\r\n * @type {Number}\r\n */\r\nGuacamole.Keyboard._nextID = 0;\r\n\r\n/**\r\n * The state of all supported keyboard modifiers.\r\n * @constructor\r\n */\r\nGuacamole.Keyboard.ModifierState = function() {\r\n    \r\n    /**\r\n     * Whether shift is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.shift = false;\r\n    \r\n    /**\r\n     * Whether ctrl is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.ctrl = false;\r\n    \r\n    /**\r\n     * Whether alt is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.alt = false;\r\n    \r\n    /**\r\n     * Whether meta (apple key) is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.meta = false;\r\n\r\n    /**\r\n     * Whether hyper (windows key) is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.hyper = false;\r\n    \r\n};\r\n\r\n/**\r\n * Returns the modifier state applicable to the keyboard event given.\r\n * \r\n * @param {KeyboardEvent} e The keyboard event to read.\r\n * @returns {Guacamole.Keyboard.ModifierState} The current state of keyboard\r\n *                                             modifiers.\r\n */\r\nGuacamole.Keyboard.ModifierState.fromKeyboardEvent = function(e) {\r\n    \r\n    var state = new Guacamole.Keyboard.ModifierState();\r\n\r\n    // Assign states from old flags\r\n    state.shift = e.shiftKey;\r\n    state.ctrl  = e.ctrlKey;\r\n    state.alt   = e.altKey;\r\n    state.meta  = e.metaKey;\r\n\r\n    // Use DOM3 getModifierState() for others\r\n    if (e.getModifierState) {\r\n        state.hyper = e.getModifierState(\"OS\")\r\n                   || e.getModifierState(\"Super\")\r\n                   || e.getModifierState(\"Hyper\")\r\n                   || e.getModifierState(\"Win\");\r\n    }\r\n\r\n    return state;\r\n    \r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Abstract ordered drawing surface. Each Layer contains a canvas element and\r\n * provides simple drawing instructions for drawing to that canvas element,\r\n * however unlike the canvas element itself, drawing operations on a Layer are\r\n * guaranteed to run in order, even if such an operation must wait for an image\r\n * to load before completing.\r\n * \r\n * @constructor\r\n * \r\n * @param {Number} width The width of the Layer, in pixels. The canvas element\r\n *                       backing this Layer will be given this width.\r\n *                       \r\n * @param {Number} height The height of the Layer, in pixels. The canvas element\r\n *                        backing this Layer will be given this height.\r\n */\r\nGuacamole.Layer = function(width, height) {\r\n\r\n    /**\r\n     * Reference to this Layer.\r\n     * @private\r\n     */\r\n    var layer = this;\r\n\r\n    /**\r\n     * The number of pixels the width or height of a layer must change before\r\n     * the underlying canvas is resized. The underlying canvas will be kept at\r\n     * dimensions which are integer multiples of this factor.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type Number\r\n     */\r\n    var CANVAS_SIZE_FACTOR = 64;\r\n\r\n    /**\r\n     * The canvas element backing this Layer.\r\n     * @private\r\n     */\r\n    var canvas = document.createElement(\"canvas\");\r\n\r\n    /**\r\n     * The 2D display context of the canvas element backing this Layer.\r\n     * @private\r\n     */\r\n    var context = canvas.getContext(\"2d\");\r\n    context.save();\r\n\r\n    /**\r\n     * Whether the layer has not yet been drawn to. Once any draw operation\r\n     * which affects the underlying canvas is invoked, this flag will be set to\r\n     * false.\r\n     *\r\n     * @private\r\n     * @type Boolean\r\n     */\r\n    var empty = true;\r\n\r\n    /**\r\n     * Whether a new path should be started with the next path drawing\r\n     * operations.\r\n     * @private\r\n     */\r\n    var pathClosed = true;\r\n\r\n    /**\r\n     * The number of states on the state stack.\r\n     * \r\n     * Note that there will ALWAYS be one element on the stack, but that\r\n     * element is not exposed. It is only used to reset the layer to its\r\n     * initial state.\r\n     * \r\n     * @private\r\n     */\r\n    var stackSize = 0;\r\n\r\n    /**\r\n     * Map of all Guacamole channel masks to HTML5 canvas composite operation\r\n     * names. Not all channel mask combinations are currently implemented.\r\n     * @private\r\n     */\r\n    var compositeOperation = {\r\n     /* 0x0 NOT IMPLEMENTED */\r\n        0x1: \"destination-in\",\r\n        0x2: \"destination-out\",\r\n     /* 0x3 NOT IMPLEMENTED */\r\n        0x4: \"source-in\",\r\n     /* 0x5 NOT IMPLEMENTED */\r\n        0x6: \"source-atop\",\r\n     /* 0x7 NOT IMPLEMENTED */\r\n        0x8: \"source-out\",\r\n        0x9: \"destination-atop\",\r\n        0xA: \"xor\",\r\n        0xB: \"destination-over\",\r\n        0xC: \"copy\",\r\n     /* 0xD NOT IMPLEMENTED */\r\n        0xE: \"source-over\",\r\n        0xF: \"lighter\"\r\n    };\r\n\r\n    /**\r\n     * Resizes the canvas element backing this Layer. This function should only\r\n     * be used internally.\r\n     * \r\n     * @private\r\n     * @param {Number} [newWidth=0]\r\n     *     The new width to assign to this Layer.\r\n     *\r\n     * @param {Number} [newHeight=0]\r\n     *     The new height to assign to this Layer.\r\n     */\r\n    var resize = function resize(newWidth, newHeight) {\r\n\r\n        // Default size to zero\r\n        newWidth = newWidth || 0;\r\n        newHeight = newHeight || 0;\r\n\r\n        // Calculate new dimensions of internal canvas\r\n        var canvasWidth  = Math.ceil(newWidth  / CANVAS_SIZE_FACTOR) * CANVAS_SIZE_FACTOR;\r\n        var canvasHeight = Math.ceil(newHeight / CANVAS_SIZE_FACTOR) * CANVAS_SIZE_FACTOR;\r\n\r\n        // Resize only if canvas dimensions are actually changing\r\n        if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\r\n\r\n            // Copy old data only if relevant and non-empty\r\n            var oldData = null;\r\n            if (!empty && canvas.width !== 0 && canvas.height !== 0) {\r\n\r\n                // Create canvas and context for holding old data\r\n                oldData = document.createElement(\"canvas\");\r\n                oldData.width = Math.min(layer.width, newWidth);\r\n                oldData.height = Math.min(layer.height, newHeight);\r\n\r\n                var oldDataContext = oldData.getContext(\"2d\");\r\n\r\n                // Copy image data from current\r\n                oldDataContext.drawImage(canvas,\r\n                        0, 0, oldData.width, oldData.height,\r\n                        0, 0, oldData.width, oldData.height);\r\n\r\n            }\r\n\r\n            // Preserve composite operation\r\n            var oldCompositeOperation = context.globalCompositeOperation;\r\n\r\n            // Resize canvas\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            // Redraw old data, if any\r\n            if (oldData)\r\n                context.drawImage(oldData,\r\n                    0, 0, oldData.width, oldData.height,\r\n                    0, 0, oldData.width, oldData.height);\r\n\r\n            // Restore composite operation\r\n            context.globalCompositeOperation = oldCompositeOperation;\r\n\r\n            // Acknowledge reset of stack (happens on resize of canvas)\r\n            stackSize = 0;\r\n            context.save();\r\n\r\n        }\r\n\r\n        // If the canvas size is not changing, manually force state reset\r\n        else\r\n            layer.reset();\r\n\r\n        // Assign new layer dimensions\r\n        layer.width = newWidth;\r\n        layer.height = newHeight;\r\n\r\n    };\r\n\r\n    /**\r\n     * Given the X and Y coordinates of the upper-left corner of a rectangle\r\n     * and the rectangle's width and height, resize the backing canvas element\r\n     * as necessary to ensure that the rectangle fits within the canvas\r\n     * element's coordinate space. This function will only make the canvas\r\n     * larger. If the rectangle already fits within the canvas element's\r\n     * coordinate space, the canvas is left unchanged.\r\n     * \r\n     * @private\r\n     * @param {Number} x The X coordinate of the upper-left corner of the\r\n     *                   rectangle to fit.\r\n     * @param {Number} y The Y coordinate of the upper-left corner of the\r\n     *                   rectangle to fit.\r\n     * @param {Number} w The width of the the rectangle to fit.\r\n     * @param {Number} h The height of the the rectangle to fit.\r\n     */\r\n    function fitRect(x, y, w, h) {\r\n        \r\n        // Calculate bounds\r\n        var opBoundX = w + x;\r\n        var opBoundY = h + y;\r\n        \r\n        // Determine max width\r\n        var resizeWidth;\r\n        if (opBoundX > layer.width)\r\n            resizeWidth = opBoundX;\r\n        else\r\n            resizeWidth = layer.width;\r\n\r\n        // Determine max height\r\n        var resizeHeight;\r\n        if (opBoundY > layer.height)\r\n            resizeHeight = opBoundY;\r\n        else\r\n            resizeHeight = layer.height;\r\n\r\n        // Resize if necessary\r\n        layer.resize(resizeWidth, resizeHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Set to true if this Layer should resize itself to accomodate the\r\n     * dimensions of any drawing operation, and false (the default) otherwise.\r\n     * \r\n     * Note that setting this property takes effect immediately, and thus may\r\n     * take effect on operations that were started in the past but have not\r\n     * yet completed. If you wish the setting of this flag to only modify\r\n     * future operations, you will need to make the setting of this flag an\r\n     * operation with sync().\r\n     * \r\n     * @example\r\n     * // Set autosize to true for all future operations\r\n     * layer.sync(function() {\r\n     *     layer.autosize = true;\r\n     * });\r\n     * \r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    this.autosize = false;\r\n\r\n    /**\r\n     * The current width of this layer.\r\n     * @type {Number}\r\n     */\r\n    this.width = width;\r\n\r\n    /**\r\n     * The current height of this layer.\r\n     * @type {Number}\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * Returns the canvas element backing this Layer. Note that the dimensions\r\n     * of the canvas may not exactly match those of the Layer, as resizing a\r\n     * canvas while maintaining its state is an expensive operation.\r\n     *\r\n     * @returns {HTMLCanvasElement}\r\n     *     The canvas element backing this Layer.\r\n     */\r\n    this.getCanvas = function getCanvas() {\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Returns a new canvas element containing the same image as this Layer.\r\n     * Unlike getCanvas(), the canvas element returned is guaranteed to have\r\n     * the exact same dimensions as the Layer.\r\n     *\r\n     * @returns {HTMLCanvasElement}\r\n     *     A new canvas element containing a copy of the image content this\r\n     *     Layer.\r\n     */\r\n    this.toCanvas = function toCanvas() {\r\n\r\n        // Create new canvas having same dimensions\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = layer.width;\r\n        canvas.height = layer.height;\r\n\r\n        // Copy image contents to new canvas\r\n        var context = canvas.getContext('2d');\r\n        context.drawImage(layer.getCanvas(), 0, 0);\r\n\r\n        return canvas;\r\n\r\n    };\r\n\r\n    /**\r\n     * Changes the size of this Layer to the given width and height. Resizing\r\n     * is only attempted if the new size provided is actually different from\r\n     * the current size.\r\n     * \r\n     * @param {Number} newWidth The new width to assign to this Layer.\r\n     * @param {Number} newHeight The new height to assign to this Layer.\r\n     */\r\n    this.resize = function(newWidth, newHeight) {\r\n        if (newWidth !== layer.width || newHeight !== layer.height)\r\n            resize(newWidth, newHeight);\r\n    };\r\n\r\n    /**\r\n     * Draws the specified image at the given coordinates. The image specified\r\n     * must already be loaded.\r\n     * \r\n     * @param {Number} x\r\n     *     The destination X coordinate.\r\n     *\r\n     * @param {Number} y\r\n     *     The destination Y coordinate.\r\n     *\r\n     * @param {CanvasImageSource} image\r\n     *     The image to draw. Note that this is not a URL.\r\n     */\r\n    this.drawImage = function(x, y, image) {\r\n        if (layer.autosize) fitRect(x, y, image.width, image.height);\r\n        context.drawImage(image, x, y);\r\n        empty = false;\r\n    };\r\n\r\n    /**\r\n     * Transfer a rectangle of image data from one Layer to this Layer using the\r\n     * specified transfer function.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     * @param {Function} transferFunction The transfer function to use to\r\n     *                                    transfer data from source to\r\n     *                                    destination.\r\n     */\r\n    this.transfer = function(srcLayer, srcx, srcy, srcw, srch, x, y, transferFunction) {\r\n\r\n        var srcCanvas = srcLayer.getCanvas();\r\n\r\n        // If entire rectangle outside source canvas, stop\r\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\r\n\r\n        // Otherwise, clip rectangle to area\r\n        if (srcx + srcw > srcCanvas.width)\r\n            srcw = srcCanvas.width - srcx;\r\n\r\n        if (srcy + srch > srcCanvas.height)\r\n            srch = srcCanvas.height - srcy;\r\n\r\n        // Stop if nothing to draw.\r\n        if (srcw === 0 || srch === 0) return;\r\n\r\n        if (layer.autosize) fitRect(x, y, srcw, srch);\r\n\r\n        // Get image data from src and dst\r\n        var src = srcLayer.getCanvas().getContext(\"2d\").getImageData(srcx, srcy, srcw, srch);\r\n        var dst = context.getImageData(x , y, srcw, srch);\r\n\r\n        // Apply transfer for each pixel\r\n        for (var i=0; i<srcw*srch*4; i+=4) {\r\n\r\n            // Get source pixel environment\r\n            var src_pixel = new Guacamole.Layer.Pixel(\r\n                src.data[i],\r\n                src.data[i+1],\r\n                src.data[i+2],\r\n                src.data[i+3]\r\n            );\r\n                \r\n            // Get destination pixel environment\r\n            var dst_pixel = new Guacamole.Layer.Pixel(\r\n                dst.data[i],\r\n                dst.data[i+1],\r\n                dst.data[i+2],\r\n                dst.data[i+3]\r\n            );\r\n\r\n            // Apply transfer function\r\n            transferFunction(src_pixel, dst_pixel);\r\n\r\n            // Save pixel data\r\n            dst.data[i  ] = dst_pixel.red;\r\n            dst.data[i+1] = dst_pixel.green;\r\n            dst.data[i+2] = dst_pixel.blue;\r\n            dst.data[i+3] = dst_pixel.alpha;\r\n\r\n        }\r\n\r\n        // Draw image data\r\n        context.putImageData(dst, x, y);\r\n        empty = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Put a rectangle of image data from one Layer to this Layer directly\r\n     * without performing any alpha blending. Simply copy the data.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     */\r\n    this.put = function(srcLayer, srcx, srcy, srcw, srch, x, y) {\r\n\r\n        var srcCanvas = srcLayer.getCanvas();\r\n\r\n        // If entire rectangle outside source canvas, stop\r\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\r\n\r\n        // Otherwise, clip rectangle to area\r\n        if (srcx + srcw > srcCanvas.width)\r\n            srcw = srcCanvas.width - srcx;\r\n\r\n        if (srcy + srch > srcCanvas.height)\r\n            srch = srcCanvas.height - srcy;\r\n\r\n        // Stop if nothing to draw.\r\n        if (srcw === 0 || srch === 0) return;\r\n\r\n        if (layer.autosize) fitRect(x, y, srcw, srch);\r\n\r\n        // Get image data from src and dst\r\n        var src = srcLayer.getCanvas().getContext(\"2d\").getImageData(srcx, srcy, srcw, srch);\r\n        context.putImageData(src, x, y);\r\n        empty = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Copy a rectangle of image data from one Layer to this Layer. This\r\n     * operation will copy exactly the image data that will be drawn once all\r\n     * operations of the source Layer that were pending at the time this\r\n     * function was called are complete. This operation will not alter the\r\n     * size of the source Layer even if its autosize property is set to true.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The Layer to copy image data from.\r\n     * @param {Number} srcx The X coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcy The Y coordinate of the upper-left corner of the\r\n     *                      rectangle within the source Layer's coordinate\r\n     *                      space to copy data from.\r\n     * @param {Number} srcw The width of the rectangle within the source Layer's\r\n     *                      coordinate space to copy data from.\r\n     * @param {Number} srch The height of the rectangle within the source\r\n     *                      Layer's coordinate space to copy data from.\r\n     * @param {Number} x The destination X coordinate.\r\n     * @param {Number} y The destination Y coordinate.\r\n     */\r\n    this.copy = function(srcLayer, srcx, srcy, srcw, srch, x, y) {\r\n\r\n        var srcCanvas = srcLayer.getCanvas();\r\n\r\n        // If entire rectangle outside source canvas, stop\r\n        if (srcx >= srcCanvas.width || srcy >= srcCanvas.height) return;\r\n\r\n        // Otherwise, clip rectangle to area\r\n        if (srcx + srcw > srcCanvas.width)\r\n            srcw = srcCanvas.width - srcx;\r\n\r\n        if (srcy + srch > srcCanvas.height)\r\n            srch = srcCanvas.height - srcy;\r\n\r\n        // Stop if nothing to draw.\r\n        if (srcw === 0 || srch === 0) return;\r\n\r\n        if (layer.autosize) fitRect(x, y, srcw, srch);\r\n        context.drawImage(srcCanvas, srcx, srcy, srcw, srch, x, y, srcw, srch);\r\n        empty = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Starts a new path at the specified point.\r\n     * \r\n     * @param {Number} x The X coordinate of the point to draw.\r\n     * @param {Number} y The Y coordinate of the point to draw.\r\n     */\r\n    this.moveTo = function(x, y) {\r\n        \r\n        // Start a new path if current path is closed\r\n        if (pathClosed) {\r\n            context.beginPath();\r\n            pathClosed = false;\r\n        }\r\n        \r\n        if (layer.autosize) fitRect(x, y, 0, 0);\r\n        context.moveTo(x, y);\r\n\r\n    };\r\n\r\n    /**\r\n     * Add the specified line to the current path.\r\n     * \r\n     * @param {Number} x The X coordinate of the endpoint of the line to draw.\r\n     * @param {Number} y The Y coordinate of the endpoint of the line to draw.\r\n     */\r\n    this.lineTo = function(x, y) {\r\n        \r\n        // Start a new path if current path is closed\r\n        if (pathClosed) {\r\n            context.beginPath();\r\n            pathClosed = false;\r\n        }\r\n        \r\n        if (layer.autosize) fitRect(x, y, 0, 0);\r\n        context.lineTo(x, y);\r\n        \r\n    };\r\n\r\n    /**\r\n     * Add the specified arc to the current path.\r\n     * \r\n     * @param {Number} x The X coordinate of the center of the circle which\r\n     *                   will contain the arc.\r\n     * @param {Number} y The Y coordinate of the center of the circle which\r\n     *                   will contain the arc.\r\n     * @param {Number} radius The radius of the circle.\r\n     * @param {Number} startAngle The starting angle of the arc, in radians.\r\n     * @param {Number} endAngle The ending angle of the arc, in radians.\r\n     * @param {Boolean} negative Whether the arc should be drawn in order of\r\n     *                           decreasing angle.\r\n     */\r\n    this.arc = function(x, y, radius, startAngle, endAngle, negative) {\r\n        \r\n        // Start a new path if current path is closed\r\n        if (pathClosed) {\r\n            context.beginPath();\r\n            pathClosed = false;\r\n        }\r\n        \r\n        if (layer.autosize) fitRect(x, y, 0, 0);\r\n        context.arc(x, y, radius, startAngle, endAngle, negative);\r\n        \r\n    };\r\n\r\n    /**\r\n     * Starts a new path at the specified point.\r\n     * \r\n     * @param {Number} cp1x The X coordinate of the first control point.\r\n     * @param {Number} cp1y The Y coordinate of the first control point.\r\n     * @param {Number} cp2x The X coordinate of the second control point.\r\n     * @param {Number} cp2y The Y coordinate of the second control point.\r\n     * @param {Number} x The X coordinate of the endpoint of the curve.\r\n     * @param {Number} y The Y coordinate of the endpoint of the curve.\r\n     */\r\n    this.curveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        \r\n        // Start a new path if current path is closed\r\n        if (pathClosed) {\r\n            context.beginPath();\r\n            pathClosed = false;\r\n        }\r\n        \r\n        if (layer.autosize) fitRect(x, y, 0, 0);\r\n        context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n        \r\n    };\r\n\r\n    /**\r\n     * Closes the current path by connecting the end point with the start\r\n     * point (if any) with a straight line.\r\n     */\r\n    this.close = function() {\r\n        context.closePath();\r\n        pathClosed = true;\r\n    };\r\n\r\n    /**\r\n     * Add the specified rectangle to the current path.\r\n     * \r\n     * @param {Number} x The X coordinate of the upper-left corner of the\r\n     *                   rectangle to draw.\r\n     * @param {Number} y The Y coordinate of the upper-left corner of the\r\n     *                   rectangle to draw.\r\n     * @param {Number} w The width of the rectangle to draw.\r\n     * @param {Number} h The height of the rectangle to draw.\r\n     */\r\n    this.rect = function(x, y, w, h) {\r\n            \r\n        // Start a new path if current path is closed\r\n        if (pathClosed) {\r\n            context.beginPath();\r\n            pathClosed = false;\r\n        }\r\n        \r\n        if (layer.autosize) fitRect(x, y, w, h);\r\n        context.rect(x, y, w, h);\r\n        \r\n    };\r\n\r\n    /**\r\n     * Clip all future drawing operations by the current path. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as fillColor()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     */\r\n    this.clip = function() {\r\n\r\n        // Set new clipping region\r\n        context.clip();\r\n\r\n        // Path now implicitly closed\r\n        pathClosed = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Stroke the current path with the specified color. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {String} cap The line cap style. Can be \"round\", \"square\",\r\n     *                     or \"butt\".\r\n     * @param {String} join The line join style. Can be \"round\", \"bevel\",\r\n     *                      or \"miter\".\r\n     * @param {Number} thickness The line thickness in pixels.\r\n     * @param {Number} r The red component of the color to fill.\r\n     * @param {Number} g The green component of the color to fill.\r\n     * @param {Number} b The blue component of the color to fill.\r\n     * @param {Number} a The alpha component of the color to fill.\r\n     */\r\n    this.strokeColor = function(cap, join, thickness, r, g, b, a) {\r\n\r\n        // Stroke with color\r\n        context.lineCap = cap;\r\n        context.lineJoin = join;\r\n        context.lineWidth = thickness;\r\n        context.strokeStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a/255.0 + \")\";\r\n        context.stroke();\r\n        empty = false;\r\n\r\n        // Path now implicitly closed\r\n        pathClosed = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Fills the current path with the specified color. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Number} r The red component of the color to fill.\r\n     * @param {Number} g The green component of the color to fill.\r\n     * @param {Number} b The blue component of the color to fill.\r\n     * @param {Number} a The alpha component of the color to fill.\r\n     */\r\n    this.fillColor = function(r, g, b, a) {\r\n\r\n        // Fill with color\r\n        context.fillStyle = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a/255.0 + \")\";\r\n        context.fill();\r\n        empty = false;\r\n\r\n        // Path now implicitly closed\r\n        pathClosed = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Stroke the current path with the image within the specified layer. The\r\n     * image data will be tiled infinitely within the stroke. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {String} cap The line cap style. Can be \"round\", \"square\",\r\n     *                     or \"butt\".\r\n     * @param {String} join The line join style. Can be \"round\", \"bevel\",\r\n     *                      or \"miter\".\r\n     * @param {Number} thickness The line thickness in pixels.\r\n     * @param {Guacamole.Layer} srcLayer The layer to use as a repeating pattern\r\n     *                                   within the stroke.\r\n     */\r\n    this.strokeLayer = function(cap, join, thickness, srcLayer) {\r\n\r\n        // Stroke with image data\r\n        context.lineCap = cap;\r\n        context.lineJoin = join;\r\n        context.lineWidth = thickness;\r\n        context.strokeStyle = context.createPattern(\r\n            srcLayer.getCanvas(),\r\n            \"repeat\"\r\n        );\r\n        context.stroke();\r\n        empty = false;\r\n\r\n        // Path now implicitly closed\r\n        pathClosed = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Fills the current path with the image within the specified layer. The\r\n     * image data will be tiled infinitely within the stroke. The current path\r\n     * is implicitly closed. The current path can continue to be reused\r\n     * for other operations (such as clip()) but a new path will be started\r\n     * once a path drawing operation (path() or rect()) is used.\r\n     * \r\n     * @param {Guacamole.Layer} srcLayer The layer to use as a repeating pattern\r\n     *                                   within the fill.\r\n     */\r\n    this.fillLayer = function(srcLayer) {\r\n\r\n        // Fill with image data \r\n        context.fillStyle = context.createPattern(\r\n            srcLayer.getCanvas(),\r\n            \"repeat\"\r\n        );\r\n        context.fill();\r\n        empty = false;\r\n\r\n        // Path now implicitly closed\r\n        pathClosed = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Push current layer state onto stack.\r\n     */\r\n    this.push = function() {\r\n\r\n        // Save current state onto stack\r\n        context.save();\r\n        stackSize++;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pop layer state off stack.\r\n     */\r\n    this.pop = function() {\r\n\r\n        // Restore current state from stack\r\n        if (stackSize > 0) {\r\n            context.restore();\r\n            stackSize--;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Reset the layer, clearing the stack, the current path, and any transform\r\n     * matrix.\r\n     */\r\n    this.reset = function() {\r\n\r\n        // Clear stack\r\n        while (stackSize > 0) {\r\n            context.restore();\r\n            stackSize--;\r\n        }\r\n\r\n        // Restore to initial state\r\n        context.restore();\r\n        context.save();\r\n\r\n        // Clear path\r\n        context.beginPath();\r\n        pathClosed = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the given affine transform (defined with six values from the\r\n     * transform's matrix).\r\n     * \r\n     * @param {Number} a The first value in the affine transform's matrix.\r\n     * @param {Number} b The second value in the affine transform's matrix.\r\n     * @param {Number} c The third value in the affine transform's matrix.\r\n     * @param {Number} d The fourth value in the affine transform's matrix.\r\n     * @param {Number} e The fifth value in the affine transform's matrix.\r\n     * @param {Number} f The sixth value in the affine transform's matrix.\r\n     */\r\n    this.setTransform = function(a, b, c, d, e, f) {\r\n        context.setTransform(\r\n            a, b, c,\r\n            d, e, f\r\n          /*0, 0, 1*/\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Applies the given affine transform (defined with six values from the\r\n     * transform's matrix).\r\n     * \r\n     * @param {Number} a The first value in the affine transform's matrix.\r\n     * @param {Number} b The second value in the affine transform's matrix.\r\n     * @param {Number} c The third value in the affine transform's matrix.\r\n     * @param {Number} d The fourth value in the affine transform's matrix.\r\n     * @param {Number} e The fifth value in the affine transform's matrix.\r\n     * @param {Number} f The sixth value in the affine transform's matrix.\r\n     */\r\n    this.transform = function(a, b, c, d, e, f) {\r\n        context.transform(\r\n            a, b, c,\r\n            d, e, f\r\n          /*0, 0, 1*/\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Sets the channel mask for future operations on this Layer.\r\n     * \r\n     * The channel mask is a Guacamole-specific compositing operation identifier\r\n     * with a single bit representing each of four channels (in order): source\r\n     * image where destination transparent, source where destination opaque,\r\n     * destination where source transparent, and destination where source\r\n     * opaque.\r\n     * \r\n     * @param {Number} mask The channel mask for future operations on this\r\n     *                      Layer.\r\n     */\r\n    this.setChannelMask = function(mask) {\r\n        context.globalCompositeOperation = compositeOperation[mask];\r\n    };\r\n\r\n    /**\r\n     * Sets the miter limit for stroke operations using the miter join. This\r\n     * limit is the maximum ratio of the size of the miter join to the stroke\r\n     * width. If this ratio is exceeded, the miter will not be drawn for that\r\n     * joint of the path.\r\n     * \r\n     * @param {Number} limit The miter limit for stroke operations using the\r\n     *                       miter join.\r\n     */\r\n    this.setMiterLimit = function(limit) {\r\n        context.miterLimit = limit;\r\n    };\r\n\r\n    // Initialize canvas dimensions\r\n    resize(width, height);\r\n\r\n    // Explicitly render canvas below other elements in the layer (such as\r\n    // child layers). Chrome and others may fail to render layers properly\r\n    // without this.\r\n    canvas.style.zIndex = -1;\r\n\r\n};\r\n\r\n/**\r\n * Channel mask for the composite operation \"rout\".\r\n */\r\nGuacamole.Layer.ROUT  = 0x2;\r\n\r\n/**\r\n * Channel mask for the composite operation \"atop\".\r\n */\r\nGuacamole.Layer.ATOP  = 0x6;\r\n\r\n/**\r\n * Channel mask for the composite operation \"xor\".\r\n */\r\nGuacamole.Layer.XOR   = 0xA;\r\n\r\n/**\r\n * Channel mask for the composite operation \"rover\".\r\n */\r\nGuacamole.Layer.ROVER = 0xB;\r\n\r\n/**\r\n * Channel mask for the composite operation \"over\".\r\n */\r\nGuacamole.Layer.OVER  = 0xE;\r\n\r\n/**\r\n * Channel mask for the composite operation \"plus\".\r\n */\r\nGuacamole.Layer.PLUS  = 0xF;\r\n\r\n/**\r\n * Channel mask for the composite operation \"rin\".\r\n * Beware that WebKit-based browsers may leave the contents of the destionation\r\n * layer where the source layer is transparent, despite the definition of this\r\n * operation.\r\n */\r\nGuacamole.Layer.RIN   = 0x1;\r\n\r\n/**\r\n * Channel mask for the composite operation \"in\".\r\n * Beware that WebKit-based browsers may leave the contents of the destionation\r\n * layer where the source layer is transparent, despite the definition of this\r\n * operation.\r\n */\r\nGuacamole.Layer.IN    = 0x4;\r\n\r\n/**\r\n * Channel mask for the composite operation \"out\".\r\n * Beware that WebKit-based browsers may leave the contents of the destionation\r\n * layer where the source layer is transparent, despite the definition of this\r\n * operation.\r\n */\r\nGuacamole.Layer.OUT   = 0x8;\r\n\r\n/**\r\n * Channel mask for the composite operation \"ratop\".\r\n * Beware that WebKit-based browsers may leave the contents of the destionation\r\n * layer where the source layer is transparent, despite the definition of this\r\n * operation.\r\n */\r\nGuacamole.Layer.RATOP = 0x9;\r\n\r\n/**\r\n * Channel mask for the composite operation \"src\".\r\n * Beware that WebKit-based browsers may leave the contents of the destionation\r\n * layer where the source layer is transparent, despite the definition of this\r\n * operation.\r\n */\r\nGuacamole.Layer.SRC   = 0xC;\r\n\r\n/**\r\n * Represents a single pixel of image data. All components have a minimum value\r\n * of 0 and a maximum value of 255.\r\n * \r\n * @constructor\r\n * \r\n * @param {Number} r The red component of this pixel.\r\n * @param {Number} g The green component of this pixel.\r\n * @param {Number} b The blue component of this pixel.\r\n * @param {Number} a The alpha component of this pixel.\r\n */\r\nGuacamole.Layer.Pixel = function(r, g, b, a) {\r\n\r\n    /**\r\n     * The red component of this pixel, where 0 is the minimum value,\r\n     * and 255 is the maximum.\r\n     */\r\n    this.red   = r;\r\n\r\n    /**\r\n     * The green component of this pixel, where 0 is the minimum value,\r\n     * and 255 is the maximum.\r\n     */\r\n    this.green = g;\r\n\r\n    /**\r\n     * The blue component of this pixel, where 0 is the minimum value,\r\n     * and 255 is the maximum.\r\n     */\r\n    this.blue  = b;\r\n\r\n    /**\r\n     * The alpha component of this pixel, where 0 is the minimum value,\r\n     * and 255 is the maximum.\r\n     */\r\n    this.alpha = a;\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Provides cross-browser mouse events for a given element. The events of\r\n * the given element are automatically populated with handlers that translate\r\n * mouse events into a non-browser-specific event provided by the\r\n * Guacamole.Mouse instance.\r\n * \r\n * @constructor\r\n * @param {Element} element The Element to use to provide mouse events.\r\n */\r\nGuacamole.Mouse = function(element) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Mouse.\r\n     * @private\r\n     */\r\n    var guac_mouse = this;\r\n\r\n    /**\r\n     * The number of mousemove events to require before re-enabling mouse\r\n     * event handling after receiving a touch event.\r\n     */\r\n    this.touchMouseThreshold = 3;\r\n\r\n    /**\r\n     * The minimum amount of pixels scrolled required for a single scroll button\r\n     * click.\r\n     */\r\n    this.scrollThreshold = 53;\r\n\r\n    /**\r\n     * The number of pixels to scroll per line.\r\n     */\r\n    this.PIXELS_PER_LINE = 18;\r\n\r\n    /**\r\n     * The number of pixels to scroll per page.\r\n     */\r\n    this.PIXELS_PER_PAGE = this.PIXELS_PER_LINE * 16;\r\n\r\n    /**\r\n     * The current mouse state. The properties of this state are updated when\r\n     * mouse events fire. This state object is also passed in as a parameter to\r\n     * the handler of any mouse events.\r\n     * \r\n     * @type {Guacamole.Mouse.State}\r\n     */\r\n    this.currentState = new Guacamole.Mouse.State(\r\n        0, 0, \r\n        false, false, false, false, false\r\n    );\r\n\r\n    /**\r\n     * Fired whenever the user presses a mouse button down over the element\r\n     * associated with this Guacamole.Mouse.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousedown = null;\r\n\r\n    /**\r\n     * Fired whenever the user releases a mouse button down over the element\r\n     * associated with this Guacamole.Mouse.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmouseup = null;\r\n\r\n    /**\r\n     * Fired whenever the user moves the mouse over the element associated with\r\n     * this Guacamole.Mouse.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousemove = null;\r\n\r\n    /**\r\n     * Fired whenever the mouse leaves the boundaries of the element associated\r\n     * with this Guacamole.Mouse.\r\n     * \r\n     * @event\r\n     */\r\n\tthis.onmouseout = null;\r\n\r\n    /**\r\n     * Counter of mouse events to ignore. This decremented by mousemove, and\r\n     * while non-zero, mouse events will have no effect.\r\n     * @private\r\n     */\r\n    var ignore_mouse = 0;\r\n\r\n    /**\r\n     * Cumulative scroll delta amount. This value is accumulated through scroll\r\n     * events and results in scroll button clicks if it exceeds a certain\r\n     * threshold.\r\n     *\r\n     * @private\r\n     */\r\n    var scroll_delta = 0;\r\n\r\n    function cancelEvent(e) {\r\n        e.stopPropagation();\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.returnValue = false;\r\n    }\r\n\r\n    // Block context menu so right-click gets sent properly\r\n    element.addEventListener(\"contextmenu\", function(e) {\r\n        cancelEvent(e);\r\n    }, false);\r\n\r\n    element.addEventListener(\"mousemove\", function(e) {\r\n\r\n        cancelEvent(e);\r\n\r\n        // If ignoring events, decrement counter\r\n        if (ignore_mouse) {\r\n            ignore_mouse--;\r\n            return;\r\n        }\r\n\r\n        guac_mouse.currentState.fromClientPosition(element, e.clientX, e.clientY);\r\n\r\n        if (guac_mouse.onmousemove)\r\n            guac_mouse.onmousemove(guac_mouse.currentState);\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"mousedown\", function(e) {\r\n\r\n        cancelEvent(e);\r\n\r\n        // Do not handle if ignoring events\r\n        if (ignore_mouse)\r\n            return;\r\n\r\n        switch (e.button) {\r\n            case 0:\r\n                guac_mouse.currentState.left = true;\r\n                break;\r\n            case 1:\r\n                guac_mouse.currentState.middle = true;\r\n                break;\r\n            case 2:\r\n                guac_mouse.currentState.right = true;\r\n                break;\r\n        }\r\n\r\n        if (guac_mouse.onmousedown)\r\n            guac_mouse.onmousedown(guac_mouse.currentState);\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"mouseup\", function(e) {\r\n\r\n        cancelEvent(e);\r\n\r\n        // Do not handle if ignoring events\r\n        if (ignore_mouse)\r\n            return;\r\n\r\n        switch (e.button) {\r\n            case 0:\r\n                guac_mouse.currentState.left = false;\r\n                break;\r\n            case 1:\r\n                guac_mouse.currentState.middle = false;\r\n                break;\r\n            case 2:\r\n                guac_mouse.currentState.right = false;\r\n                break;\r\n        }\r\n\r\n        if (guac_mouse.onmouseup)\r\n            guac_mouse.onmouseup(guac_mouse.currentState);\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"mouseout\", function(e) {\r\n\r\n        // Get parent of the element the mouse pointer is leaving\r\n       \tif (!e) e = window.event;\r\n\r\n        // Check that mouseout is due to actually LEAVING the element\r\n        var target = e.relatedTarget || e.toElement;\r\n        while (target) {\r\n            if (target === element)\r\n                return;\r\n            target = target.parentNode;\r\n        }\r\n\r\n        cancelEvent(e);\r\n\r\n        // Release all buttons\r\n        if (guac_mouse.currentState.left\r\n            || guac_mouse.currentState.middle\r\n            || guac_mouse.currentState.right) {\r\n\r\n            guac_mouse.currentState.left = false;\r\n            guac_mouse.currentState.middle = false;\r\n            guac_mouse.currentState.right = false;\r\n\r\n            if (guac_mouse.onmouseup)\r\n                guac_mouse.onmouseup(guac_mouse.currentState);\r\n        }\r\n\r\n        // Fire onmouseout event\r\n        if (guac_mouse.onmouseout)\r\n            guac_mouse.onmouseout();\r\n\r\n    }, false);\r\n\r\n    // Override selection on mouse event element.\r\n    element.addEventListener(\"selectstart\", function(e) {\r\n        cancelEvent(e);\r\n    }, false);\r\n\r\n    // Ignore all pending mouse events when touch events are the apparent source\r\n    function ignorePendingMouseEvents() { ignore_mouse = guac_mouse.touchMouseThreshold; }\r\n\r\n    element.addEventListener(\"touchmove\",  ignorePendingMouseEvents, false);\r\n    element.addEventListener(\"touchstart\", ignorePendingMouseEvents, false);\r\n    element.addEventListener(\"touchend\",   ignorePendingMouseEvents, false);\r\n\r\n    // Scroll wheel support\r\n    function mousewheel_handler(e) {\r\n\r\n        // Determine approximate scroll amount (in pixels)\r\n        var delta = e.deltaY || -e.wheelDeltaY || -e.wheelDelta;\r\n\r\n        // If successfully retrieved scroll amount, convert to pixels if not\r\n        // already in pixels\r\n        if (delta) {\r\n\r\n            // Convert to pixels if delta was lines\r\n            if (e.deltaMode === 1)\r\n                delta = e.deltaY * guac_mouse.PIXELS_PER_LINE;\r\n\r\n            // Convert to pixels if delta was pages\r\n            else if (e.deltaMode === 2)\r\n                delta = e.deltaY * guac_mouse.PIXELS_PER_PAGE;\r\n\r\n        }\r\n\r\n        // Otherwise, assume legacy mousewheel event and line scrolling\r\n        else\r\n            delta = e.detail * guac_mouse.PIXELS_PER_LINE;\r\n        \r\n        // Update overall delta\r\n        scroll_delta += delta;\r\n\r\n        // Up\r\n        if (scroll_delta <= -guac_mouse.scrollThreshold) {\r\n\r\n            // Repeatedly click the up button until insufficient delta remains\r\n            do {\r\n\r\n                if (guac_mouse.onmousedown) {\r\n                    guac_mouse.currentState.up = true;\r\n                    guac_mouse.onmousedown(guac_mouse.currentState);\r\n                }\r\n\r\n                if (guac_mouse.onmouseup) {\r\n                    guac_mouse.currentState.up = false;\r\n                    guac_mouse.onmouseup(guac_mouse.currentState);\r\n                }\r\n\r\n                scroll_delta += guac_mouse.scrollThreshold;\r\n\r\n            } while (scroll_delta <= -guac_mouse.scrollThreshold);\r\n\r\n            // Reset delta\r\n            scroll_delta = 0;\r\n\r\n        }\r\n\r\n        // Down\r\n        if (scroll_delta >= guac_mouse.scrollThreshold) {\r\n\r\n            // Repeatedly click the down button until insufficient delta remains\r\n            do {\r\n\r\n                if (guac_mouse.onmousedown) {\r\n                    guac_mouse.currentState.down = true;\r\n                    guac_mouse.onmousedown(guac_mouse.currentState);\r\n                }\r\n\r\n                if (guac_mouse.onmouseup) {\r\n                    guac_mouse.currentState.down = false;\r\n                    guac_mouse.onmouseup(guac_mouse.currentState);\r\n                }\r\n\r\n                scroll_delta -= guac_mouse.scrollThreshold;\r\n\r\n            } while (scroll_delta >= guac_mouse.scrollThreshold);\r\n\r\n            // Reset delta\r\n            scroll_delta = 0;\r\n\r\n        }\r\n\r\n        cancelEvent(e);\r\n\r\n    }\r\n\r\n    element.addEventListener('DOMMouseScroll', mousewheel_handler, false);\r\n    element.addEventListener('mousewheel',     mousewheel_handler, false);\r\n    element.addEventListener('wheel',          mousewheel_handler, false);\r\n\r\n    /**\r\n     * Whether the browser supports CSS3 cursor styling, including hotspot\r\n     * coordinates.\r\n     *\r\n     * @private\r\n     * @type {Boolean}\r\n     */\r\n    var CSS3_CURSOR_SUPPORTED = (function() {\r\n\r\n        var div = document.createElement(\"div\");\r\n\r\n        // If no cursor property at all, then no support\r\n        if (!(\"cursor\" in div.style))\r\n            return false;\r\n\r\n        try {\r\n            // Apply simple 1x1 PNG\r\n            div.style.cursor = \"url(data:image/png;base64,\"\r\n                             + \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAAB\"\r\n                             + \"AQMAAAAl21bKAAAAA1BMVEX///+nxBvI\"\r\n                             + \"AAAACklEQVQI12NgAAAAAgAB4iG8MwAA\"\r\n                             + \"AABJRU5ErkJggg==) 0 0, auto\";\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n\r\n        // Verify cursor property is set to URL with hotspot\r\n        return /\\burl\\([^()]*\\)\\s+0\\s+0\\b/.test(div.style.cursor || \"\");\r\n\r\n    })();\r\n\r\n    /**\r\n     * Changes the local mouse cursor to the given canvas, having the given\r\n     * hotspot coordinates. This affects styling of the element backing this\r\n     * Guacamole.Mouse only, and may fail depending on browser support for\r\n     * setting the mouse cursor.\r\n     * \r\n     * If setting the local cursor is desired, it is up to the implementation\r\n     * to do something else, such as use the software cursor built into\r\n     * Guacamole.Display, if the local cursor cannot be set.\r\n     *\r\n     * @param {HTMLCanvasElement} canvas The cursor image.\r\n     * @param {Number} x The X-coordinate of the cursor hotspot.\r\n     * @param {Number} y The Y-coordinate of the cursor hotspot.\r\n     * @return {Boolean} true if the cursor was successfully set, false if the\r\n     *                   cursor could not be set for any reason.\r\n     */\r\n    this.setCursor = function(canvas, x, y) {\r\n\r\n        // Attempt to set via CSS3 cursor styling\r\n        if (CSS3_CURSOR_SUPPORTED) {\r\n            var dataURL = canvas.toDataURL('image/png');\r\n            element.style.cursor = \"url(\" + dataURL + \") \" + x + \" \" + y + \", auto\";\r\n            return true;\r\n        }\r\n\r\n        // Otherwise, setting cursor failed\r\n        return false;\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Simple container for properties describing the state of a mouse.\r\n * \r\n * @constructor\r\n * @param {Number} x The X position of the mouse pointer in pixels.\r\n * @param {Number} y The Y position of the mouse pointer in pixels.\r\n * @param {Boolean} left Whether the left mouse button is pressed. \r\n * @param {Boolean} middle Whether the middle mouse button is pressed. \r\n * @param {Boolean} right Whether the right mouse button is pressed. \r\n * @param {Boolean} up Whether the up mouse button is pressed (the fourth\r\n *                     button, usually part of a scroll wheel). \r\n * @param {Boolean} down Whether the down mouse button is pressed (the fifth\r\n *                       button, usually part of a scroll wheel). \r\n */\r\nGuacamole.Mouse.State = function(x, y, left, middle, right, up, down) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Mouse.State.\r\n     * @private\r\n     */\r\n    var guac_state = this;\r\n\r\n    /**\r\n     * The current X position of the mouse pointer.\r\n     * @type {Number}\r\n     */\r\n    this.x = x;\r\n\r\n    /**\r\n     * The current Y position of the mouse pointer.\r\n     * @type {Number}\r\n     */\r\n    this.y = y;\r\n\r\n    /**\r\n     * Whether the left mouse button is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.left = left;\r\n\r\n    /**\r\n     * Whether the middle mouse button is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.middle = middle;\r\n\r\n    /**\r\n     * Whether the right mouse button is currently pressed.\r\n     * @type {Boolean}\r\n     */\r\n    this.right = right;\r\n\r\n    /**\r\n     * Whether the up mouse button is currently pressed. This is the fourth\r\n     * mouse button, associated with upward scrolling of the mouse scroll\r\n     * wheel.\r\n     * @type {Boolean}\r\n     */\r\n    this.up = up;\r\n\r\n    /**\r\n     * Whether the down mouse button is currently pressed. This is the fifth \r\n     * mouse button, associated with downward scrolling of the mouse scroll\r\n     * wheel.\r\n     * @type {Boolean}\r\n     */\r\n    this.down = down;\r\n\r\n    /**\r\n     * Updates the position represented within this state object by the given\r\n     * element and clientX/clientY coordinates (commonly available within event\r\n     * objects). Position is translated from clientX/clientY (relative to\r\n     * viewport) to element-relative coordinates.\r\n     * \r\n     * @param {Element} element The element the coordinates should be relative\r\n     *                          to.\r\n     * @param {Number} clientX The X coordinate to translate, viewport-relative.\r\n     * @param {Number} clientY The Y coordinate to translate, viewport-relative.\r\n     */\r\n    this.fromClientPosition = function(element, clientX, clientY) {\r\n    \r\n        guac_state.x = clientX - element.offsetLeft;\r\n        guac_state.y = clientY - element.offsetTop;\r\n\r\n        // This is all JUST so we can get the mouse position within the element\r\n        var parent = element.offsetParent;\r\n        while (parent && !(parent === document.body)) {\r\n            guac_state.x -= parent.offsetLeft - parent.scrollLeft;\r\n            guac_state.y -= parent.offsetTop  - parent.scrollTop;\r\n\r\n            parent = parent.offsetParent;\r\n        }\r\n\r\n        // Element ultimately depends on positioning within document body,\r\n        // take document scroll into account. \r\n        if (parent) {\r\n            var documentScrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft;\r\n            var documentScrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n\r\n            guac_state.x -= parent.offsetLeft - documentScrollLeft;\r\n            guac_state.y -= parent.offsetTop  - documentScrollTop;\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Provides cross-browser relative touch event translation for a given element.\r\n * \r\n * Touch events are translated into mouse events as if the touches occurred\r\n * on a touchpad (drag to push the mouse pointer, tap to click).\r\n * \r\n * @constructor\r\n * @param {Element} element The Element to use to provide touch events.\r\n */\r\nGuacamole.Mouse.Touchpad = function(element) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Mouse.Touchpad.\r\n     * @private\r\n     */\r\n    var guac_touchpad = this;\r\n\r\n    /**\r\n     * The distance a two-finger touch must move per scrollwheel event, in\r\n     * pixels.\r\n     */\r\n    this.scrollThreshold = 20 * (window.devicePixelRatio || 1);\r\n\r\n    /**\r\n     * The maximum number of milliseconds to wait for a touch to end for the\r\n     * gesture to be considered a click.\r\n     */\r\n    this.clickTimingThreshold = 250;\r\n\r\n    /**\r\n     * The maximum number of pixels to allow a touch to move for the gesture to\r\n     * be considered a click.\r\n     */\r\n    this.clickMoveThreshold = 10 * (window.devicePixelRatio || 1);\r\n\r\n    /**\r\n     * The current mouse state. The properties of this state are updated when\r\n     * mouse events fire. This state object is also passed in as a parameter to\r\n     * the handler of any mouse events.\r\n     * \r\n     * @type {Guacamole.Mouse.State}\r\n     */\r\n    this.currentState = new Guacamole.Mouse.State(\r\n        0, 0, \r\n        false, false, false, false, false\r\n    );\r\n\r\n    /**\r\n     * Fired whenever a mouse button is effectively pressed. This can happen\r\n     * as part of a \"click\" gesture initiated by the user by tapping one\r\n     * or more fingers over the touchpad element, as part of a \"scroll\"\r\n     * gesture initiated by dragging two fingers up or down, etc.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousedown = null;\r\n\r\n    /**\r\n     * Fired whenever a mouse button is effectively released. This can happen\r\n     * as part of a \"click\" gesture initiated by the user by tapping one\r\n     * or more fingers over the touchpad element, as part of a \"scroll\"\r\n     * gesture initiated by dragging two fingers up or down, etc.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmouseup = null;\r\n\r\n    /**\r\n     * Fired whenever the user moves the mouse by dragging their finger over\r\n     * the touchpad element.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousemove = null;\r\n\r\n    var touch_count = 0;\r\n    var last_touch_x = 0;\r\n    var last_touch_y = 0;\r\n    var last_touch_time = 0;\r\n    var pixels_moved = 0;\r\n\r\n    var touch_buttons = {\r\n        1: \"left\",\r\n        2: \"right\",\r\n        3: \"middle\"\r\n    };\r\n\r\n    var gesture_in_progress = false;\r\n    var click_release_timeout = null;\r\n\r\n    element.addEventListener(\"touchend\", function(e) {\r\n        \r\n        e.preventDefault();\r\n            \r\n        // If we're handling a gesture AND this is the last touch\r\n        if (gesture_in_progress && e.touches.length === 0) {\r\n            \r\n            var time = new Date().getTime();\r\n\r\n            // Get corresponding mouse button\r\n            var button = touch_buttons[touch_count];\r\n\r\n            // If mouse already down, release anad clear timeout\r\n            if (guac_touchpad.currentState[button]) {\r\n\r\n                // Fire button up event\r\n                guac_touchpad.currentState[button] = false;\r\n                if (guac_touchpad.onmouseup)\r\n                    guac_touchpad.onmouseup(guac_touchpad.currentState);\r\n\r\n                // Clear timeout, if set\r\n                if (click_release_timeout) {\r\n                    window.clearTimeout(click_release_timeout);\r\n                    click_release_timeout = null;\r\n                }\r\n\r\n            }\r\n\r\n            // If single tap detected (based on time and distance)\r\n            if (time - last_touch_time <= guac_touchpad.clickTimingThreshold\r\n                    && pixels_moved < guac_touchpad.clickMoveThreshold) {\r\n\r\n                // Fire button down event\r\n                guac_touchpad.currentState[button] = true;\r\n                if (guac_touchpad.onmousedown)\r\n                    guac_touchpad.onmousedown(guac_touchpad.currentState);\r\n\r\n                // Delay mouse up - mouse up should be canceled if\r\n                // touchstart within timeout.\r\n                click_release_timeout = window.setTimeout(function() {\r\n                    \r\n                    // Fire button up event\r\n                    guac_touchpad.currentState[button] = false;\r\n                    if (guac_touchpad.onmouseup)\r\n                        guac_touchpad.onmouseup(guac_touchpad.currentState);\r\n                    \r\n                    // Gesture now over\r\n                    gesture_in_progress = false;\r\n\r\n                }, guac_touchpad.clickTimingThreshold);\r\n\r\n            }\r\n\r\n            // If we're not waiting to see if this is a click, stop gesture\r\n            if (!click_release_timeout)\r\n                gesture_in_progress = false;\r\n\r\n        }\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"touchstart\", function(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        // Track number of touches, but no more than three\r\n        touch_count = Math.min(e.touches.length, 3);\r\n\r\n        // Clear timeout, if set\r\n        if (click_release_timeout) {\r\n            window.clearTimeout(click_release_timeout);\r\n            click_release_timeout = null;\r\n        }\r\n\r\n        // Record initial touch location and time for touch movement\r\n        // and tap gestures\r\n        if (!gesture_in_progress) {\r\n\r\n            // Stop mouse events while touching\r\n            gesture_in_progress = true;\r\n\r\n            // Record touch location and time\r\n            var starting_touch = e.touches[0];\r\n            last_touch_x = starting_touch.clientX;\r\n            last_touch_y = starting_touch.clientY;\r\n            last_touch_time = new Date().getTime();\r\n            pixels_moved = 0;\r\n\r\n        }\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"touchmove\", function(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        // Get change in touch location\r\n        var touch = e.touches[0];\r\n        var delta_x = touch.clientX - last_touch_x;\r\n        var delta_y = touch.clientY - last_touch_y;\r\n\r\n        // Track pixels moved\r\n        pixels_moved += Math.abs(delta_x) + Math.abs(delta_y);\r\n\r\n        // If only one touch involved, this is mouse move\r\n        if (touch_count === 1) {\r\n\r\n            // Calculate average velocity in Manhatten pixels per millisecond\r\n            var velocity = pixels_moved / (new Date().getTime() - last_touch_time);\r\n\r\n            // Scale mouse movement relative to velocity\r\n            var scale = 1 + velocity;\r\n\r\n            // Update mouse location\r\n            guac_touchpad.currentState.x += delta_x*scale;\r\n            guac_touchpad.currentState.y += delta_y*scale;\r\n\r\n            // Prevent mouse from leaving screen\r\n\r\n            if (guac_touchpad.currentState.x < 0)\r\n                guac_touchpad.currentState.x = 0;\r\n            else if (guac_touchpad.currentState.x >= element.offsetWidth)\r\n                guac_touchpad.currentState.x = element.offsetWidth - 1;\r\n\r\n            if (guac_touchpad.currentState.y < 0)\r\n                guac_touchpad.currentState.y = 0;\r\n            else if (guac_touchpad.currentState.y >= element.offsetHeight)\r\n                guac_touchpad.currentState.y = element.offsetHeight - 1;\r\n\r\n            // Fire movement event, if defined\r\n            if (guac_touchpad.onmousemove)\r\n                guac_touchpad.onmousemove(guac_touchpad.currentState);\r\n\r\n            // Update touch location\r\n            last_touch_x = touch.clientX;\r\n            last_touch_y = touch.clientY;\r\n\r\n        }\r\n\r\n        // Interpret two-finger swipe as scrollwheel\r\n        else if (touch_count === 2) {\r\n\r\n            // If change in location passes threshold for scroll\r\n            if (Math.abs(delta_y) >= guac_touchpad.scrollThreshold) {\r\n\r\n                // Decide button based on Y movement direction\r\n                var button;\r\n                if (delta_y > 0) button = \"down\";\r\n                else             button = \"up\";\r\n\r\n                // Fire button down event\r\n                guac_touchpad.currentState[button] = true;\r\n                if (guac_touchpad.onmousedown)\r\n                    guac_touchpad.onmousedown(guac_touchpad.currentState);\r\n\r\n                // Fire button up event\r\n                guac_touchpad.currentState[button] = false;\r\n                if (guac_touchpad.onmouseup)\r\n                    guac_touchpad.onmouseup(guac_touchpad.currentState);\r\n\r\n                // Only update touch location after a scroll has been\r\n                // detected\r\n                last_touch_x = touch.clientX;\r\n                last_touch_y = touch.clientY;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }, false);\r\n\r\n};\r\n\r\n/**\r\n * Provides cross-browser absolute touch event translation for a given element.\r\n *\r\n * Touch events are translated into mouse events as if the touches occurred\r\n * on a touchscreen (tapping anywhere on the screen clicks at that point,\r\n * long-press to right-click).\r\n *\r\n * @constructor\r\n * @param {Element} element The Element to use to provide touch events.\r\n */\r\nGuacamole.Mouse.Touchscreen = function(element) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Mouse.Touchscreen.\r\n     * @private\r\n     */\r\n    var guac_touchscreen = this;\r\n\r\n    /**\r\n     * Whether a gesture is known to be in progress. If false, touch events\r\n     * will be ignored.\r\n     *\r\n     * @private\r\n     */\r\n    var gesture_in_progress = false;\r\n\r\n    /**\r\n     * The start X location of a gesture.\r\n     * @private\r\n     */\r\n    var gesture_start_x = null;\r\n\r\n    /**\r\n     * The start Y location of a gesture.\r\n     * @private\r\n     */\r\n    var gesture_start_y = null;\r\n\r\n    /**\r\n     * The timeout associated with the delayed, cancellable click release.\r\n     *\r\n     * @private\r\n     */\r\n    var click_release_timeout = null;\r\n\r\n    /**\r\n     * The timeout associated with long-press for right click.\r\n     *\r\n     * @private\r\n     */\r\n    var long_press_timeout = null;\r\n\r\n    /**\r\n     * The distance a two-finger touch must move per scrollwheel event, in\r\n     * pixels.\r\n     */\r\n    this.scrollThreshold = 20 * (window.devicePixelRatio || 1);\r\n\r\n    /**\r\n     * The maximum number of milliseconds to wait for a touch to end for the\r\n     * gesture to be considered a click.\r\n     */\r\n    this.clickTimingThreshold = 250;\r\n\r\n    /**\r\n     * The maximum number of pixels to allow a touch to move for the gesture to\r\n     * be considered a click.\r\n     */\r\n    this.clickMoveThreshold = 16 * (window.devicePixelRatio || 1);\r\n\r\n    /**\r\n     * The amount of time a press must be held for long press to be\r\n     * detected.\r\n     */\r\n    this.longPressThreshold = 500;\r\n\r\n    /**\r\n     * The current mouse state. The properties of this state are updated when\r\n     * mouse events fire. This state object is also passed in as a parameter to\r\n     * the handler of any mouse events.\r\n     *\r\n     * @type {Guacamole.Mouse.State}\r\n     */\r\n    this.currentState = new Guacamole.Mouse.State(\r\n        0, 0,\r\n        false, false, false, false, false\r\n    );\r\n\r\n    /**\r\n     * Fired whenever a mouse button is effectively pressed. This can happen\r\n     * as part of a \"mousedown\" gesture initiated by the user by pressing one\r\n     * finger over the touchscreen element, as part of a \"scroll\" gesture\r\n     * initiated by dragging two fingers up or down, etc.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousedown = null;\r\n\r\n    /**\r\n     * Fired whenever a mouse button is effectively released. This can happen\r\n     * as part of a \"mouseup\" gesture initiated by the user by removing the\r\n     * finger pressed against the touchscreen element, or as part of a \"scroll\"\r\n     * gesture initiated by dragging two fingers up or down, etc.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmouseup = null;\r\n\r\n    /**\r\n     * Fired whenever the user moves the mouse by dragging their finger over\r\n     * the touchscreen element. Note that unlike Guacamole.Mouse.Touchpad,\r\n     * dragging a finger over the touchscreen element will always cause\r\n     * the mouse button to be effectively down, as if clicking-and-dragging.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.Mouse.State} state The current mouse state.\r\n     */\r\n\tthis.onmousemove = null;\r\n\r\n    /**\r\n     * Presses the given mouse button, if it isn't already pressed. Valid\r\n     * button values are \"left\", \"middle\", \"right\", \"up\", and \"down\".\r\n     *\r\n     * @private\r\n     * @param {String} button The mouse button to press.\r\n     */\r\n    function press_button(button) {\r\n        if (!guac_touchscreen.currentState[button]) {\r\n            guac_touchscreen.currentState[button] = true;\r\n            if (guac_touchscreen.onmousedown)\r\n                guac_touchscreen.onmousedown(guac_touchscreen.currentState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Releases the given mouse button, if it isn't already released. Valid\r\n     * button values are \"left\", \"middle\", \"right\", \"up\", and \"down\".\r\n     *\r\n     * @private\r\n     * @param {String} button The mouse button to release.\r\n     */\r\n    function release_button(button) {\r\n        if (guac_touchscreen.currentState[button]) {\r\n            guac_touchscreen.currentState[button] = false;\r\n            if (guac_touchscreen.onmouseup)\r\n                guac_touchscreen.onmouseup(guac_touchscreen.currentState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clicks (presses and releases) the given mouse button. Valid button\r\n     * values are \"left\", \"middle\", \"right\", \"up\", and \"down\".\r\n     *\r\n     * @private\r\n     * @param {String} button The mouse button to click.\r\n     */\r\n    function click_button(button) {\r\n        press_button(button);\r\n        release_button(button);\r\n    }\r\n\r\n    /**\r\n     * Moves the mouse to the given coordinates. These coordinates must be\r\n     * relative to the browser window, as they will be translated based on\r\n     * the touch event target's location within the browser window.\r\n     *\r\n     * @private\r\n     * @param {Number} x The X coordinate of the mouse pointer.\r\n     * @param {Number} y The Y coordinate of the mouse pointer.\r\n     */\r\n    function move_mouse(x, y) {\r\n        guac_touchscreen.currentState.fromClientPosition(element, x, y);\r\n        if (guac_touchscreen.onmousemove)\r\n            guac_touchscreen.onmousemove(guac_touchscreen.currentState);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the given touch event exceeds the movement threshold for\r\n     * clicking, based on where the touch gesture began.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} e The touch event to check.\r\n     * @return {Boolean} true if the movement threshold is exceeded, false\r\n     *                   otherwise.\r\n     */\r\n    function finger_moved(e) {\r\n        var touch = e.touches[0] || e.changedTouches[0];\r\n        var delta_x = touch.clientX - gesture_start_x;\r\n        var delta_y = touch.clientY - gesture_start_y;\r\n        return Math.sqrt(delta_x*delta_x + delta_y*delta_y) >= guac_touchscreen.clickMoveThreshold;\r\n    }\r\n\r\n    /**\r\n     * Begins a new gesture at the location of the first touch in the given\r\n     * touch event.\r\n     * \r\n     * @private\r\n     * @param {TouchEvent} e The touch event beginning this new gesture.\r\n     */\r\n    function begin_gesture(e) {\r\n        var touch = e.touches[0];\r\n        gesture_in_progress = true;\r\n        gesture_start_x = touch.clientX;\r\n        gesture_start_y = touch.clientY;\r\n    }\r\n\r\n    /**\r\n     * End the current gesture entirely. Wait for all touches to be done before\r\n     * resuming gesture detection.\r\n     * \r\n     * @private\r\n     */\r\n    function end_gesture() {\r\n        window.clearTimeout(click_release_timeout);\r\n        window.clearTimeout(long_press_timeout);\r\n        gesture_in_progress = false;\r\n    }\r\n\r\n    element.addEventListener(\"touchend\", function(e) {\r\n\r\n        // Do not handle if no gesture\r\n        if (!gesture_in_progress)\r\n            return;\r\n\r\n        // Ignore if more than one touch\r\n        if (e.touches.length !== 0 || e.changedTouches.length !== 1) {\r\n            end_gesture();\r\n            return;\r\n        }\r\n\r\n        // Long-press, if any, is over\r\n        window.clearTimeout(long_press_timeout);\r\n\r\n        // Always release mouse button if pressed\r\n        release_button(\"left\");\r\n\r\n        // If finger hasn't moved enough to cancel the click\r\n        if (!finger_moved(e)) {\r\n\r\n            e.preventDefault();\r\n\r\n            // If not yet pressed, press and start delay release\r\n            if (!guac_touchscreen.currentState.left) {\r\n\r\n                var touch = e.changedTouches[0];\r\n                move_mouse(touch.clientX, touch.clientY);\r\n                press_button(\"left\");\r\n\r\n                // Release button after a delay, if not canceled\r\n                click_release_timeout = window.setTimeout(function() {\r\n                    release_button(\"left\");\r\n                    end_gesture();\r\n                }, guac_touchscreen.clickTimingThreshold);\r\n\r\n            }\r\n\r\n        } // end if finger not moved\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"touchstart\", function(e) {\r\n\r\n        // Ignore if more than one touch\r\n        if (e.touches.length !== 1) {\r\n            end_gesture();\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        // New touch begins a new gesture\r\n        begin_gesture(e);\r\n\r\n        // Keep button pressed if tap after left click\r\n        window.clearTimeout(click_release_timeout);\r\n\r\n        // Click right button if this turns into a long-press\r\n        long_press_timeout = window.setTimeout(function() {\r\n            var touch = e.touches[0];\r\n            move_mouse(touch.clientX, touch.clientY);\r\n            click_button(\"right\");\r\n            end_gesture();\r\n        }, guac_touchscreen.longPressThreshold);\r\n\r\n    }, false);\r\n\r\n    element.addEventListener(\"touchmove\", function(e) {\r\n\r\n        // Do not handle if no gesture\r\n        if (!gesture_in_progress)\r\n            return;\r\n\r\n        // Cancel long press if finger moved\r\n        if (finger_moved(e))\r\n            window.clearTimeout(long_press_timeout);\r\n\r\n        // Ignore if more than one touch\r\n        if (e.touches.length !== 1) {\r\n            end_gesture();\r\n            return;\r\n        }\r\n\r\n        // Update mouse position if dragging\r\n        if (guac_touchscreen.currentState.left) {\r\n\r\n            e.preventDefault();\r\n\r\n            // Update state\r\n            var touch = e.touches[0];\r\n            move_mouse(touch.clientX, touch.clientY);\r\n\r\n        }\r\n\r\n    }, false);\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n/**\r\n * The namespace used by the Guacamole JavaScript API. Absolutely all classes\r\n * defined by the Guacamole JavaScript API will be within this namespace.\r\n *\r\n * @namespace\r\n */\r\nvar Guacamole = Guacamole || {};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * An object used by the Guacamole client to house arbitrarily-many named\r\n * input and output streams.\r\n * \r\n * @constructor\r\n * @param {Guacamole.Client} client\r\n *     The client owning this object.\r\n *\r\n * @param {Number} index\r\n *     The index of this object.\r\n */\r\nGuacamole.Object = function guacamoleObject(client, index) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Object.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.Object}\r\n     */\r\n    var guacObject = this;\r\n\r\n    /**\r\n     * Map of stream name to corresponding queue of callbacks. The queue of\r\n     * callbacks is guaranteed to be in order of request.\r\n     *\r\n     * @private\r\n     * @type {Object.<String, Function[]>}\r\n     */\r\n    var bodyCallbacks = {};\r\n\r\n    /**\r\n     * Removes and returns the callback at the head of the callback queue for\r\n     * the stream having the given name. If no such callbacks exist, null is\r\n     * returned.\r\n     *\r\n     * @private\r\n     * @param {String} name\r\n     *     The name of the stream to retrieve a callback for.\r\n     *\r\n     * @returns {Function}\r\n     *     The next callback associated with the stream having the given name,\r\n     *     or null if no such callback exists.\r\n     */\r\n    var dequeueBodyCallback = function dequeueBodyCallback(name) {\r\n\r\n        // If no callbacks defined, simply return null\r\n        var callbacks = bodyCallbacks[name];\r\n        if (!callbacks)\r\n            return null;\r\n\r\n        // Otherwise, pull off first callback, deleting the queue if empty\r\n        var callback = callbacks.shift();\r\n        if (callbacks.length === 0)\r\n            delete bodyCallbacks[name];\r\n\r\n        // Return found callback\r\n        return callback;\r\n\r\n    };\r\n\r\n    /**\r\n     * Adds the given callback to the tail of the callback queue for the stream\r\n     * having the given name.\r\n     *\r\n     * @private\r\n     * @param {String} name\r\n     *     The name of the stream to associate with the given callback.\r\n     *\r\n     * @param {Function} callback\r\n     *     The callback to add to the queue of the stream with the given name.\r\n     */\r\n    var enqueueBodyCallback = function enqueueBodyCallback(name, callback) {\r\n\r\n        // Get callback queue by name, creating first if necessary\r\n        var callbacks = bodyCallbacks[name];\r\n        if (!callbacks) {\r\n            callbacks = [];\r\n            bodyCallbacks[name] = callbacks;\r\n        }\r\n\r\n        // Add callback to end of queue\r\n        callbacks.push(callback);\r\n\r\n    };\r\n\r\n    /**\r\n     * The index of this object.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.index = index;\r\n\r\n    /**\r\n     * Called when this object receives the body of a requested input stream.\r\n     * By default, all objects will invoke the callbacks provided to their\r\n     * requestInputStream() functions based on the name of the stream\r\n     * requested. This behavior can be overridden by specifying a different\r\n     * handler here.\r\n     *\r\n     * @event\r\n     * @param {Guacamole.InputStream} inputStream\r\n     *     The input stream of the received body.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the data being received.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the stream whose body has been received.\r\n     */\r\n    this.onbody = function defaultBodyHandler(inputStream, mimetype, name) {\r\n\r\n        // Call queued callback for the received body, if any\r\n        var callback = dequeueBodyCallback(name);\r\n        if (callback)\r\n            callback(inputStream, mimetype);\r\n\r\n    };\r\n\r\n    /**\r\n     * Called when this object is being undefined. Once undefined, no further\r\n     * communication involving this object may occur.\r\n     * \r\n     * @event\r\n     */\r\n    this.onundefine = null;\r\n\r\n    /**\r\n     * Requests read access to the input stream having the given name. If\r\n     * successful, a new input stream will be created.\r\n     *\r\n     * @param {String} name\r\n     *     The name of the input stream to request.\r\n     *\r\n     * @param {Function} [bodyCallback]\r\n     *     The callback to invoke when the body of the requested input stream\r\n     *     is received. This callback will be provided a Guacamole.InputStream\r\n     *     and its mimetype as its two only arguments. If the onbody handler of\r\n     *     this object is overridden, this callback will not be invoked.\r\n     */\r\n    this.requestInputStream = function requestInputStream(name, bodyCallback) {\r\n\r\n        // Queue body callback if provided\r\n        if (bodyCallback)\r\n            enqueueBodyCallback(name, bodyCallback);\r\n\r\n        // Send request for input stream\r\n        client.requestObjectInputStream(guacObject.index, name);\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates a new output stream associated with this object and having the\r\n     * given mimetype and name. The legality of a mimetype and name is dictated\r\n     * by the object itself.\r\n     *\r\n     * @param {String} mimetype\r\n     *     The mimetype of the data which will be sent to the output stream.\r\n     *\r\n     * @param {String} name\r\n     *     The defined name of an output stream within this object.\r\n     *\r\n     * @returns {Guacamole.OutputStream}\r\n     *     An output stream which will write blobs to the named output stream\r\n     *     of this object.\r\n     */\r\n    this.createOutputStream = function createOutputStream(mimetype, name) {\r\n        return client.createObjectOutputStream(guacObject.index, mimetype, name);\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * The reserved name denoting the root stream of any object. The contents of\r\n * the root stream MUST be a JSON map of stream name to mimetype.\r\n *\r\n * @constant\r\n * @type {String}\r\n */\r\nGuacamole.Object.ROOT_STREAM = '/';\r\n\r\n/**\r\n * The mimetype of a stream containing JSON which maps available stream names\r\n * to their corresponding mimetype. The root stream of a Guacamole.Object MUST\r\n * have this mimetype.\r\n *\r\n * @constant\r\n * @type {String}\r\n */\r\nGuacamole.Object.STREAM_INDEX_MIMETYPE = 'application/vnd.glyptodon.guacamole.stream-index+json';\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Dynamic on-screen keyboard. Given the layout object for an on-screen\r\n * keyboard, this object will construct a clickable on-screen keyboard with its\r\n * own key events.\r\n *\r\n * @constructor\r\n * @param {Guacamole.OnScreenKeyboard.Layout} layout\r\n *     The layout of the on-screen keyboard to display.\r\n */\r\nGuacamole.OnScreenKeyboard = function(layout) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.OnScreenKeyboard.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.OnScreenKeyboard}\r\n     */\r\n    var osk = this;\r\n\r\n    /**\r\n     * Map of currently-set modifiers to the keysym associated with their\r\n     * original press. When the modifier is cleared, this keysym must be\r\n     * released.\r\n     *\r\n     * @private\r\n     * @type {Object.<String, Number>}\r\n     */\r\n    var modifierKeysyms = {};\r\n\r\n    /**\r\n     * Map of all key names to their current pressed states. If a key is not\r\n     * pressed, it may not be in this map at all, but all pressed keys will\r\n     * have a corresponding mapping to true.\r\n     *\r\n     * @private\r\n     * @type {Object.<String, Boolean>}\r\n     */\r\n    var pressed = {};\r\n\r\n    /**\r\n     * All scalable elements which are part of the on-screen keyboard. Each\r\n     * scalable element is carefully controlled to ensure the interface layout\r\n     * and sizing remains constant, even on browsers that would otherwise\r\n     * experience rounding error due to unit conversions.\r\n     *\r\n     * @private\r\n     * @type {ScaledElement[]}\r\n     */\r\n    var scaledElements = [];\r\n\r\n    /**\r\n     * Adds a CSS class to an element.\r\n     * \r\n     * @private\r\n     * @function\r\n     * @param {Element} element\r\n     *     The element to add a class to.\r\n     *\r\n     * @param {String} classname\r\n     *     The name of the class to add.\r\n     */\r\n    var addClass = function addClass(element, classname) {\r\n\r\n        // If classList supported, use that\r\n        if (element.classList)\r\n            element.classList.add(classname);\r\n\r\n        // Otherwise, simply append the class\r\n        else\r\n            element.className += \" \" + classname;\r\n\r\n    };\r\n\r\n    /**\r\n     * Removes a CSS class from an element.\r\n     * \r\n     * @private\r\n     * @function\r\n     * @param {Element} element\r\n     *     The element to remove a class from.\r\n     *\r\n     * @param {String} classname\r\n     *     The name of the class to remove.\r\n     */\r\n    var removeClass = function removeClass(element, classname) {\r\n\r\n        // If classList supported, use that\r\n        if (element.classList)\r\n            element.classList.remove(classname);\r\n\r\n        // Otherwise, manually filter out classes with given name\r\n        else {\r\n            element.className = element.className.replace(/([^ ]+)[ ]*/g,\r\n                function removeMatchingClasses(match, testClassname) {\r\n\r\n                    // If same class, remove\r\n                    if (testClassname === classname)\r\n                        return \"\";\r\n\r\n                    // Otherwise, allow\r\n                    return match;\r\n                    \r\n                }\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Counter of mouse events to ignore. This decremented by mousemove, and\r\n     * while non-zero, mouse events will have no effect.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var ignoreMouse = 0;\r\n\r\n    /**\r\n     * Ignores all pending mouse events when touch events are the apparent\r\n     * source. Mouse events are ignored until at least touchMouseThreshold\r\n     * mouse events occur without corresponding touch events.\r\n     *\r\n     * @private\r\n     */\r\n    var ignorePendingMouseEvents = function ignorePendingMouseEvents() {\r\n        ignoreMouse = osk.touchMouseThreshold;\r\n    };\r\n\r\n    /**\r\n     * An element whose dimensions are maintained according to an arbitrary\r\n     * scale. The conversion factor for these arbitrary units to pixels is\r\n     * provided later via a call to scale().\r\n     *\r\n     * @private\r\n     * @constructor\r\n     * @param {Element} element\r\n     *     The element whose scale should be maintained.\r\n     *\r\n     * @param {Number} width\r\n     *     The width of the element, in arbitrary units, relative to other\r\n     *     ScaledElements.\r\n     *\r\n     * @param {Number} height\r\n     *     The height of the element, in arbitrary units, relative to other\r\n     *     ScaledElements.\r\n     *     \r\n     * @param {Boolean} [scaleFont=false]\r\n     *     Whether the line height and font size should be scaled as well.\r\n     */\r\n    var ScaledElement = function ScaledElement(element, width, height, scaleFont) {\r\n\r\n        /**\r\n         * The width of this ScaledElement, in arbitrary units, relative to\r\n         * other ScaledElements.\r\n         *\r\n         * @type {Number}\r\n         */\r\n         this.width = width;\r\n\r\n        /**\r\n         * The height of this ScaledElement, in arbitrary units, relative to\r\n         * other ScaledElements.\r\n         *\r\n         * @type {Number}\r\n         */\r\n         this.height = height;\r\n \r\n        /**\r\n         * Resizes the associated element, updating its dimensions according to\r\n         * the given pixels per unit.\r\n         *\r\n         * @param {Number} pixels\r\n         *     The number of pixels to assign per arbitrary unit.\r\n         */\r\n        this.scale = function(pixels) {\r\n\r\n            // Scale element width/height\r\n            element.style.width  = (width  * pixels) + \"px\";\r\n            element.style.height = (height * pixels) + \"px\";\r\n\r\n            // Scale font, if requested\r\n            if (scaleFont) {\r\n                element.style.lineHeight = (height * pixels) + \"px\";\r\n                element.style.fontSize   = pixels + \"px\";\r\n            }\r\n\r\n        };\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns whether all modifiers having the given names are currently\r\n     * active.\r\n     *\r\n     * @private\r\n     * @param {String[]} names\r\n     *     The names of all modifiers to test.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if all specified modifiers are pressed, false otherwise.\r\n     */\r\n    var modifiersPressed = function modifiersPressed(names) {\r\n\r\n        // If any required modifiers are not pressed, return false\r\n        for (var i=0; i < names.length; i++) {\r\n\r\n            // Test whether current modifier is pressed\r\n            var name = names[i];\r\n            if (!(name in modifierKeysyms))\r\n                return false;\r\n\r\n        }\r\n\r\n        // Otherwise, all required modifiers are pressed\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the single matching Key object associated with the key of the\r\n     * given name, where that Key object's requirements (such as pressed\r\n     * modifiers) are all currently satisfied.\r\n     *\r\n     * @private\r\n     * @param {String} keyName\r\n     *     The name of the key to retrieve.\r\n     *\r\n     * @returns {Guacamole.OnScreenKeyboard.Key}\r\n     *     The Key object associated with the given name, where that object's\r\n     *     requirements are all currently satisfied, or null if no such Key\r\n     *     can be found.\r\n     */\r\n    var getActiveKey = function getActiveKey(keyName) {\r\n\r\n        // Get key array for given name\r\n        var keys = osk.keys[keyName];\r\n        if (!keys)\r\n            return null;\r\n\r\n        // Find last matching key\r\n        for (var i = keys.length - 1; i >= 0; i--) {\r\n\r\n            // Get candidate key\r\n            var candidate = keys[i];\r\n\r\n            // If all required modifiers are pressed, use that key\r\n            if (modifiersPressed(candidate.requires))\r\n                return candidate;\r\n\r\n        }\r\n\r\n        // No valid key\r\n        return null;\r\n\r\n    };\r\n\r\n    /**\r\n     * Presses the key having the given name, updating the associated key\r\n     * element with the \"guac-keyboard-pressed\" CSS class. If the key is\r\n     * already pressed, this function has no effect.\r\n     *\r\n     * @private\r\n     * @param {String} keyName\r\n     *     The name of the key to press.\r\n     *\r\n     * @param {String} keyElement\r\n     *     The element associated with the given key.\r\n     */\r\n    var press = function press(keyName, keyElement) {\r\n\r\n        // Press key if not yet pressed\r\n        if (!pressed[keyName]) {\r\n\r\n            addClass(keyElement, \"guac-keyboard-pressed\");\r\n\r\n            // Get current key based on modifier state\r\n            var key = getActiveKey(keyName);\r\n\r\n            // Update modifier state\r\n            if (key.modifier) {\r\n\r\n                // Construct classname for modifier\r\n                var modifierClass = \"guac-keyboard-modifier-\" + getCSSName(key.modifier);\r\n\r\n                // Retrieve originally-pressed keysym, if modifier was already pressed\r\n                var originalKeysym = modifierKeysyms[key.modifier];\r\n\r\n                // Activate modifier if not pressed\r\n                if (!originalKeysym) {\r\n                    \r\n                    addClass(keyboard, modifierClass);\r\n                    modifierKeysyms[key.modifier] = key.keysym;\r\n                    \r\n                    // Send key event\r\n                    if (osk.onkeydown)\r\n                        osk.onkeydown(key.keysym);\r\n\r\n                }\r\n\r\n                // Deactivate if not pressed\r\n                else {\r\n\r\n                    removeClass(keyboard, modifierClass);\r\n                    delete modifierKeysyms[key.modifier];\r\n                    \r\n                    // Send key event\r\n                    if (osk.onkeyup)\r\n                        osk.onkeyup(originalKeysym);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // If not modifier, send key event now\r\n            else if (osk.onkeydown)\r\n                osk.onkeydown(key.keysym);\r\n\r\n            // Mark key as pressed\r\n            pressed[keyName] = true;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Releases the key having the given name, removing the\r\n     * \"guac-keyboard-pressed\" CSS class from the associated element. If the\r\n     * key is already released, this function has no effect.\r\n     *\r\n     * @private\r\n     * @param {String} keyName\r\n     *     The name of the key to release.\r\n     *\r\n     * @param {String} keyElement\r\n     *     The element associated with the given key.\r\n     */\r\n    var release = function release(keyName, keyElement) {\r\n\r\n        // Release key if currently pressed\r\n        if (pressed[keyName]) {\r\n\r\n            removeClass(keyElement, \"guac-keyboard-pressed\");\r\n\r\n            // Get current key based on modifier state\r\n            var key = getActiveKey(keyName);\r\n\r\n            // Send key event if not a modifier key\r\n            if (!key.modifier && osk.onkeyup)\r\n                osk.onkeyup(key.keysym);\r\n\r\n            // Mark key as released\r\n            pressed[keyName] = false;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // Create keyboard\r\n    var keyboard = document.createElement(\"div\");\r\n    keyboard.className = \"guac-keyboard\";\r\n\r\n    // Do not allow selection or mouse movement to propagate/register.\r\n    keyboard.onselectstart =\r\n    keyboard.onmousemove   =\r\n    keyboard.onmouseup     =\r\n    keyboard.onmousedown   = function handleMouseEvents(e) {\r\n\r\n        // If ignoring events, decrement counter\r\n        if (ignoreMouse)\r\n            ignoreMouse--;\r\n\r\n        e.stopPropagation();\r\n        return false;\r\n\r\n    };\r\n\r\n    /**\r\n     * The number of mousemove events to require before re-enabling mouse\r\n     * event handling after receiving a touch event.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.touchMouseThreshold = 3;\r\n\r\n    /**\r\n     * Fired whenever the user presses a key on this Guacamole.OnScreenKeyboard.\r\n     * \r\n     * @event\r\n     * @param {Number} keysym The keysym of the key being pressed.\r\n     */\r\n    this.onkeydown = null;\r\n\r\n    /**\r\n     * Fired whenever the user releases a key on this Guacamole.OnScreenKeyboard.\r\n     * \r\n     * @event\r\n     * @param {Number} keysym The keysym of the key being released.\r\n     */\r\n    this.onkeyup = null;\r\n\r\n    /**\r\n     * The keyboard layout provided at time of construction.\r\n     *\r\n     * @type {Guacamole.OnScreenKeyboard.Layout}\r\n     */\r\n    this.layout = new Guacamole.OnScreenKeyboard.Layout(layout);\r\n\r\n    /**\r\n     * Returns the element containing the entire on-screen keyboard.\r\n     * @returns {Element} The element containing the entire on-screen keyboard.\r\n     */\r\n    this.getElement = function() {\r\n        return keyboard;\r\n    };\r\n\r\n    /**\r\n     * Resizes all elements within this Guacamole.OnScreenKeyboard such that\r\n     * the width is close to but does not exceed the specified width. The\r\n     * height of the keyboard is determined based on the width.\r\n     * \r\n     * @param {Number} width The width to resize this Guacamole.OnScreenKeyboard\r\n     *                       to, in pixels.\r\n     */\r\n    this.resize = function(width) {\r\n\r\n        // Get pixel size of a unit\r\n        var unit = Math.floor(width * 10 / osk.layout.width) / 10;\r\n\r\n        // Resize all scaled elements\r\n        for (var i=0; i<scaledElements.length; i++) {\r\n            var scaledElement = scaledElements[i];\r\n            scaledElement.scale(unit);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Given the name of a key and its corresponding definition, which may be\r\n     * an array of keys objects, a number (keysym), a string (key title), or a\r\n     * single key object, returns an array of key objects, deriving any missing\r\n     * properties as needed, and ensuring the key name is defined.\r\n     *\r\n     * @private\r\n     * @param {String} name\r\n     *     The name of the key being coerced into an array of Key objects.\r\n     *\r\n     * @param {Number|String|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[]} object\r\n     *     The object defining the behavior of the key having the given name,\r\n     *     which may be the title of the key (a string), the keysym (a number),\r\n     *     a single Key object, or an array of Key objects.\r\n     *     \r\n     * @returns {Guacamole.OnScreenKeyboard.Key[]}\r\n     *     An array of all keys associated with the given name.\r\n     */\r\n    var asKeyArray = function asKeyArray(name, object) {\r\n\r\n        // If already an array, just coerce into a true Key[] \r\n        if (object instanceof Array) {\r\n            var keys = [];\r\n            for (var i=0; i < object.length; i++) {\r\n                keys.push(new Guacamole.OnScreenKeyboard.Key(object[i], name));\r\n            }\r\n            return keys;\r\n        }\r\n\r\n        // Derive key object from keysym if that's all we have\r\n        if (typeof object === 'number') {\r\n            return [new Guacamole.OnScreenKeyboard.Key({\r\n                name   : name,\r\n                keysym : object\r\n            })];\r\n        }\r\n\r\n        // Derive key object from title if that's all we have\r\n        if (typeof object === 'string') {\r\n            return [new Guacamole.OnScreenKeyboard.Key({\r\n                name  : name,\r\n                title : object\r\n            })];\r\n        }\r\n\r\n        // Otherwise, assume it's already a key object, just not an array\r\n        return [new Guacamole.OnScreenKeyboard.Key(object, name)];\r\n\r\n    };\r\n\r\n    /**\r\n     * Converts the rather forgiving key mapping allowed by\r\n     * Guacamole.OnScreenKeyboard.Layout into a rigorous mapping of key name\r\n     * to key definition, where the key definition is always an array of Key\r\n     * objects.\r\n     *\r\n     * @private\r\n     * @param {Object.<String, Number|String|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[]>} keys\r\n     *     A mapping of key name to key definition, where the key definition is\r\n     *     the title of the key (a string), the keysym (a number), a single\r\n     *     Key object, or an array of Key objects.\r\n     *\r\n     * @returns {Object.<String, Guacamole.OnScreenKeyboard.Key[]>}\r\n     *     A more-predictable mapping of key name to key definition, where the\r\n     *     key definition is always simply an array of Key objects.\r\n     */\r\n    var getKeys = function getKeys(keys) {\r\n\r\n        var keyArrays = {};\r\n\r\n        // Coerce all keys into individual key arrays\r\n        for (var name in layout.keys) {\r\n            keyArrays[name] = asKeyArray(name, keys[name]);\r\n        }\r\n\r\n        return keyArrays;\r\n\r\n    };\r\n\r\n    /**\r\n     * Map of all key names to their corresponding set of keys. Each key name\r\n     * may correspond to multiple keys due to the effect of modifiers.\r\n     *\r\n     * @type {Object.<String, Guacamole.OnScreenKeyboard.Key[]>}\r\n     */\r\n    this.keys = getKeys(layout.keys);\r\n\r\n    /**\r\n     * Given an arbitrary string representing the name of some component of the\r\n     * on-screen keyboard, returns a string formatted for use as a CSS class\r\n     * name. The result will be lowercase. Word boundaries previously denoted\r\n     * by CamelCase will be replaced by individual hyphens, as will all\r\n     * contiguous non-alphanumeric characters.\r\n     *\r\n     * @private\r\n     * @param {String} name\r\n     *     An arbitrary string representing the name of some component of the\r\n     *     on-screen keyboard.\r\n     *\r\n     * @returns {String}\r\n     *     A string formatted for use as a CSS class name.\r\n     */\r\n    var getCSSName = function getCSSName(name) {\r\n\r\n        // Convert name from possibly-CamelCase to hyphenated lowercase\r\n        var cssName = name\r\n               .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n               .replace(/[^A-Za-z0-9]+/g, '-')\r\n               .toLowerCase();\r\n\r\n        return cssName;\r\n\r\n    };\r\n\r\n    /**\r\n     * Appends DOM elements to the given element as dictated by the layout\r\n     * structure object provided. If a name is provided, an additional CSS\r\n     * class, prepended with \"guac-keyboard-\", will be added to the top-level\r\n     * element.\r\n     * \r\n     * If the layout structure object is an array, all elements within that\r\n     * array will be recursively appended as children of a group, and the\r\n     * top-level element will be given the CSS class \"guac-keyboard-group\".\r\n     *\r\n     * If the layout structure object is an object, all properties within that\r\n     * object will be recursively appended as children of a group, and the\r\n     * top-level element will be given the CSS class \"guac-keyboard-group\". The\r\n     * name of each property will be applied as the name of each child object\r\n     * for the sake of CSS. Each property will be added in sorted order.\r\n     *\r\n     * If the layout structure object is a string, the key having that name\r\n     * will be appended. The key will be given the CSS class\r\n     * \"guac-keyboard-key\" and \"guac-keyboard-key-NAME\", where NAME is the name\r\n     * of the key. If the name of the key is a single character, this will\r\n     * first be transformed into the C-style hexadecimal literal for the\r\n     * Unicode codepoint of that character. For example, the key \"A\" would\r\n     * become \"guac-keyboard-key-0x41\".\r\n     * \r\n     * If the layout structure object is a number, a gap of that size will be\r\n     * inserted. The gap will be given the CSS class \"guac-keyboard-gap\", and\r\n     * will be scaled according to the same size units as each key.\r\n     *\r\n     * @private\r\n     * @param {Element} element\r\n     *     The element to append elements to.\r\n     *\r\n     * @param {Array|Object|String|Number} object\r\n     *     The layout structure object to use when constructing the elements to\r\n     *     append.\r\n     *\r\n     * @param {String} [name]\r\n     *     The name of the top-level element being appended, if any.\r\n     */\r\n    var appendElements = function appendElements(element, object, name) {\r\n\r\n        var i;\r\n\r\n        // Create div which will become the group or key\r\n        var div = document.createElement('div');\r\n\r\n        // Add class based on name, if name given\r\n        if (name)\r\n            addClass(div, 'guac-keyboard-' + getCSSName(name));\r\n\r\n        // If an array, append each element\r\n        if (object instanceof Array) {\r\n\r\n            // Add group class\r\n            addClass(div, 'guac-keyboard-group');\r\n\r\n            // Append all elements of array\r\n            for (i=0; i < object.length; i++)\r\n                appendElements(div, object[i]);\r\n\r\n        }\r\n\r\n        // If an object, append each property value\r\n        else if (object instanceof Object) {\r\n\r\n            // Add group class\r\n            addClass(div, 'guac-keyboard-group');\r\n\r\n            // Append all children, sorted by name\r\n            var names = Object.keys(object).sort();\r\n            for (i=0; i < names.length; i++) {\r\n                var name = names[i];\r\n                appendElements(div, object[name], name);\r\n            }\r\n\r\n        }\r\n\r\n        // If a number, create as a gap \r\n        else if (typeof object === 'number') {\r\n\r\n            // Add gap class\r\n            addClass(div, 'guac-keyboard-gap');\r\n\r\n            // Maintain scale\r\n            scaledElements.push(new ScaledElement(div, object, object));\r\n\r\n        }\r\n\r\n        // If a string, create as a key\r\n        else if (typeof object === 'string') {\r\n\r\n            // If key name is only one character, use codepoint for name\r\n            var keyName = object;\r\n            if (keyName.length === 1)\r\n                keyName = '0x' + keyName.charCodeAt(0).toString(16);\r\n\r\n            // Add key container class\r\n            addClass(div, 'guac-keyboard-key-container');\r\n\r\n            // Create key element which will contain all possible caps\r\n            var keyElement = document.createElement('div');\r\n            keyElement.className = 'guac-keyboard-key '\r\n                                 + 'guac-keyboard-key-' + getCSSName(keyName);\r\n\r\n            // Add all associated keys as caps within DOM\r\n            var keys = osk.keys[object];\r\n            if (keys) {\r\n                for (i=0; i < keys.length; i++) {\r\n\r\n                    // Get current key\r\n                    var key = keys[i];\r\n\r\n                    // Create cap element for key\r\n                    var capElement = document.createElement('div');\r\n                    capElement.className   = 'guac-keyboard-cap';\r\n                    capElement.textContent = key.title;\r\n\r\n                    // Add classes for any requirements\r\n                    for (var j=0; j < key.requires.length; j++) {\r\n                        var requirement = key.requires[j];\r\n                        addClass(capElement, 'guac-keyboard-requires-' + getCSSName(requirement));\r\n                        addClass(keyElement, 'guac-keyboard-uses-'     + getCSSName(requirement));\r\n                    }\r\n\r\n                    // Add cap to key within DOM\r\n                    keyElement.appendChild(capElement);\r\n\r\n                }\r\n            }\r\n\r\n            // Add key to DOM, maintain scale\r\n            div.appendChild(keyElement);\r\n            scaledElements.push(new ScaledElement(div, osk.layout.keyWidths[object] || 1, 1, true));\r\n\r\n            /**\r\n             * Handles a touch event which results in the pressing of an OSK\r\n             * key. Touch events will result in mouse events being ignored for\r\n             * touchMouseThreshold events.\r\n             *\r\n             * @private\r\n             * @param {TouchEvent} e\r\n             *     The touch event being handled.\r\n             */\r\n            var touchPress = function touchPress(e) {\r\n                e.preventDefault();\r\n                ignoreMouse = osk.touchMouseThreshold;\r\n                press(object, keyElement);\r\n            };\r\n\r\n            /**\r\n             * Handles a touch event which results in the release of an OSK\r\n             * key. Touch events will result in mouse events being ignored for\r\n             * touchMouseThreshold events.\r\n             *\r\n             * @private\r\n             * @param {TouchEvent} e\r\n             *     The touch event being handled.\r\n             */\r\n            var touchRelease = function touchRelease(e) {\r\n                e.preventDefault();\r\n                ignoreMouse = osk.touchMouseThreshold;\r\n                release(object, keyElement);\r\n            };\r\n\r\n            /**\r\n             * Handles a mouse event which results in the pressing of an OSK\r\n             * key. If mouse events are currently being ignored, this handler\r\n             * does nothing.\r\n             *\r\n             * @private\r\n             * @param {MouseEvent} e\r\n             *     The touch event being handled.\r\n             */\r\n            var mousePress = function mousePress(e) {\r\n                e.preventDefault();\r\n                if (ignoreMouse === 0)\r\n                    press(object, keyElement);\r\n            };\r\n\r\n            /**\r\n             * Handles a mouse event which results in the release of an OSK\r\n             * key. If mouse events are currently being ignored, this handler\r\n             * does nothing.\r\n             *\r\n             * @private\r\n             * @param {MouseEvent} e\r\n             *     The touch event being handled.\r\n             */\r\n            var mouseRelease = function mouseRelease(e) {\r\n                e.preventDefault();\r\n                if (ignoreMouse === 0)\r\n                    release(object, keyElement);\r\n            };\r\n\r\n            // Handle touch events on key\r\n            keyElement.addEventListener(\"touchstart\", touchPress,   true);\r\n            keyElement.addEventListener(\"touchend\",   touchRelease, true);\r\n\r\n            // Handle mouse events on key\r\n            keyElement.addEventListener(\"mousedown\", mousePress,   true);\r\n            keyElement.addEventListener(\"mouseup\",   mouseRelease, true);\r\n            keyElement.addEventListener(\"mouseout\",  mouseRelease, true);\r\n\r\n        } // end if object is key name\r\n\r\n        // Add newly-created group/key\r\n        element.appendChild(div);\r\n\r\n    };\r\n\r\n    // Create keyboard layout in DOM\r\n    appendElements(keyboard, layout.layout);\r\n\r\n};\r\n\r\n/**\r\n * Represents an entire on-screen keyboard layout, including all available\r\n * keys, their behaviors, and their relative position and sizing.\r\n *\r\n * @constructor\r\n * @param {Guacamole.OnScreenKeyboard.Layout|Object} template\r\n *     The object whose identically-named properties will be used to initialize\r\n *     the properties of this layout.\r\n */\r\nGuacamole.OnScreenKeyboard.Layout = function(template) {\r\n\r\n    /**\r\n     * The language of keyboard layout, such as \"en_US\". This property is for\r\n     * informational purposes only, but it is recommend to conform to the\r\n     * [language code]_[country code] format.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.language = template.language;\r\n\r\n    /**\r\n     * The type of keyboard layout, such as \"qwerty\". This property is for\r\n     * informational purposes only, and does not conform to any standard.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.type = template.type;\r\n\r\n    /**\r\n     * Map of key name to corresponding keysym, title, or key object. If only\r\n     * the keysym or title is provided, the key object will be created\r\n     * implicitly. In all cases, the name property of the key object will be\r\n     * taken from the name given in the mapping.\r\n     *\r\n     * @type {Object.<String, Number|String|Guacamole.OnScreenKeyboard.Key|Guacamole.OnScreenKeyboard.Key[]>}\r\n     */\r\n    this.keys = template.keys;\r\n\r\n    /**\r\n     * Arbitrarily nested, arbitrarily grouped key names. The contents of the\r\n     * layout will be traversed to produce an identically-nested grouping of\r\n     * keys in the DOM tree. All strings will be transformed into their\r\n     * corresponding sets of keys, while all objects and arrays will be\r\n     * transformed into named groups and anonymous groups respectively. Any\r\n     * numbers present will be transformed into gaps of that size, scaled\r\n     * according to the same units as each key.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    this.layout = template.layout;\r\n\r\n    /**\r\n     * The width of the entire keyboard, in arbitrary units. The width of each\r\n     * key is relative to this width, as both width values are assumed to be in\r\n     * the same units. The conversion factor between these units and pixels is\r\n     * derived later via a call to resize() on the Guacamole.OnScreenKeyboard.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.width = template.width;\r\n\r\n    /**\r\n     * The width of each key, in arbitrary units, relative to other keys in\r\n     * this layout. The true pixel size of each key will be determined by the\r\n     * overall size of the keyboard. If not defined here, the width of each\r\n     * key will default to 1.\r\n     *\r\n     * @type {Object.<String, Number>}\r\n     */\r\n    this.keyWidths = template.keyWidths || {};\r\n\r\n};\r\n\r\n/**\r\n * Represents a single key, or a single possible behavior of a key. Each key\r\n * on the on-screen keyboard must have at least one associated\r\n * Guacamole.OnScreenKeyboard.Key, whether that key is explicitly defined or\r\n * implied, and may have multiple Guacamole.OnScreenKeyboard.Key if behavior\r\n * depends on modifier states.\r\n *\r\n * @constructor\r\n * @param {Guacamole.OnScreenKeyboard.Key|Object} template\r\n *     The object whose identically-named properties will be used to initialize\r\n *     the properties of this key.\r\n *     \r\n * @param {String} [name]\r\n *     The name to use instead of any name provided within the template, if\r\n *     any. If omitted, the name within the template will be used, assuming the\r\n *     template contains a name.\r\n */\r\nGuacamole.OnScreenKeyboard.Key = function(template, name) {\r\n\r\n    /**\r\n     * The unique name identifying this key within the keyboard layout.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.name = name || template.name;\r\n\r\n    /**\r\n     * The human-readable title that will be displayed to the user within the\r\n     * key. If not provided, this will be derived from the key name.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.title = template.title || this.name;\r\n\r\n    /**\r\n     * The keysym to be pressed/released when this key is pressed/released. If\r\n     * not provided, this will be derived from the title if the title is a\r\n     * single character.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.keysym = template.keysym || (function deriveKeysym(title) {\r\n\r\n        // Do not derive keysym if title is not exactly one character\r\n        if (!title || title.length !== 1)\r\n            return null;\r\n\r\n        // For characters between U+0000 and U+00FF, the keysym is the codepoint\r\n        var charCode = title.charCodeAt(0);\r\n        if (charCode >= 0x0000 && charCode <= 0x00FF)\r\n            return charCode;\r\n\r\n        // For characters between U+0100 and U+10FFFF, the keysym is the codepoint or'd with 0x01000000\r\n        if (charCode >= 0x0100 && charCode <= 0x10FFFF)\r\n            return 0x01000000 | charCode;\r\n\r\n        // Unable to derive keysym\r\n        return null;\r\n\r\n    })(this.title);\r\n\r\n    /**\r\n     * The name of the modifier set when the key is pressed and cleared when\r\n     * this key is released, if any. The names of modifiers are distinct from\r\n     * the names of keys; both the \"RightShift\" and \"LeftShift\" keys may set\r\n     * the \"shift\" modifier, for example. By default, the key will affect no\r\n     * modifiers.\r\n     * \r\n     * @type {String}\r\n     */\r\n    this.modifier = template.modifier;\r\n\r\n    /**\r\n     * An array containing the names of each modifier required for this key to\r\n     * have an effect. For example, a lowercase letter may require nothing,\r\n     * while an uppercase letter would require \"shift\", assuming the Shift key\r\n     * is named \"shift\" within the layout. By default, the key will require\r\n     * no modifiers.\r\n     *\r\n     * @type {String[]}\r\n     */\r\n    this.requires = template.requires || [];\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Abstract stream which can receive data.\r\n * \r\n * @constructor\r\n * @param {Guacamole.Client} client The client owning this stream.\r\n * @param {Number} index The index of this stream.\r\n */\r\nGuacamole.OutputStream = function(client, index) {\r\n\r\n    /**\r\n     * Reference to this stream.\r\n     * @private\r\n     */\r\n    var guac_stream = this;\r\n\r\n    /**\r\n     * The index of this stream.\r\n     * @type {Number}\r\n     */\r\n    this.index = index;\r\n\r\n    /**\r\n     * Fired whenever an acknowledgement is received from the server, indicating\r\n     * that a stream operation has completed, or an error has occurred.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Status} status The status of the operation.\r\n     */\r\n    this.onack = null;\r\n\r\n    /**\r\n     * Writes the given base64-encoded data to this stream as a blob.\r\n     * \r\n     * @param {String} data The base64-encoded data to send.\r\n     */\r\n    this.sendBlob = function(data) {\r\n        client.sendBlob(guac_stream.index, data);\r\n    };\r\n\r\n    /**\r\n     * Closes this stream.\r\n     */\r\n    this.sendEnd = function() {\r\n        client.endStream(guac_stream.index);\r\n    };\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Simple Guacamole protocol parser that invokes an oninstruction event when\r\n * full instructions are available from data received via receive().\r\n * \r\n * @constructor\r\n */\r\nGuacamole.Parser = function() {\r\n\r\n    /**\r\n     * Reference to this parser.\r\n     * @private\r\n     */\r\n    var parser = this;\r\n\r\n    /**\r\n     * Current buffer of received data. This buffer grows until a full\r\n     * element is available. After a full element is available, that element\r\n     * is flushed into the element buffer.\r\n     * \r\n     * @private\r\n     */\r\n    var buffer = \"\";\r\n\r\n    /**\r\n     * Buffer of all received, complete elements. After an entire instruction\r\n     * is read, this buffer is flushed, and a new instruction begins.\r\n     * \r\n     * @private\r\n     */\r\n    var element_buffer = [];\r\n\r\n    // The location of the last element's terminator\r\n    var element_end = -1;\r\n\r\n    // Where to start the next length search or the next element\r\n    var start_index = 0;\r\n\r\n    /**\r\n     * Appends the given instruction data packet to the internal buffer of\r\n     * this Guacamole.Parser, executing all completed instructions at\r\n     * the beginning of this buffer, if any.\r\n     *\r\n     * @param {String} packet The instruction data to receive.\r\n     */\r\n    this.receive = function(packet) {\r\n\r\n        // Truncate buffer as necessary\r\n        if (start_index > 4096 && element_end >= start_index) {\r\n\r\n            buffer = buffer.substring(start_index);\r\n\r\n            // Reset parse relative to truncation\r\n            element_end -= start_index;\r\n            start_index = 0;\r\n\r\n        }\r\n\r\n        // Append data to buffer\r\n        buffer += packet;\r\n\r\n        // While search is within currently received data\r\n        while (element_end < buffer.length) {\r\n\r\n            // If we are waiting for element data\r\n            if (element_end >= start_index) {\r\n\r\n                // We now have enough data for the element. Parse.\r\n                var element = buffer.substring(start_index, element_end);\r\n                var terminator = buffer.substring(element_end, element_end+1);\r\n\r\n                // Add element to array\r\n                element_buffer.push(element);\r\n\r\n                // If last element, handle instruction\r\n                if (terminator == \";\") {\r\n\r\n                    // Get opcode\r\n                    var opcode = element_buffer.shift();\r\n\r\n                    // Call instruction handler.\r\n                    if (parser.oninstruction != null)\r\n                        parser.oninstruction(opcode, element_buffer);\r\n\r\n                    // Clear elements\r\n                    element_buffer.length = 0;\r\n\r\n                }\r\n                else if (terminator != ',')\r\n                    throw new Error(\"Illegal terminator.\");\r\n\r\n                // Start searching for length at character after\r\n                // element terminator\r\n                start_index = element_end + 1;\r\n\r\n            }\r\n\r\n            // Search for end of length\r\n            var length_end = buffer.indexOf(\".\", start_index);\r\n            if (length_end != -1) {\r\n\r\n                // Parse length\r\n                var length = parseInt(buffer.substring(element_end+1, length_end));\r\n                if (isNaN(length))\r\n                    throw new Error(\"Non-numeric character in element length.\");\r\n\r\n                // Calculate start of element\r\n                start_index = length_end + 1;\r\n\r\n                // Calculate location of element terminator\r\n                element_end = start_index + length;\r\n\r\n            }\r\n            \r\n            // If no period yet, continue search when more data\r\n            // is received\r\n            else {\r\n                start_index = buffer.length;\r\n                break;\r\n            }\r\n\r\n        } // end parse loop\r\n\r\n    };\r\n\r\n    /**\r\n     * Fired once for every complete Guacamole instruction received, in order.\r\n     * \r\n     * @event\r\n     * @param {String} opcode The Guacamole instruction opcode.\r\n     * @param {Array} parameters The parameters provided for the instruction,\r\n     *                           if any.\r\n     */\r\n    this.oninstruction = null;\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A description of the format of raw PCM audio, such as that used by\r\n * Guacamole.RawAudioPlayer and Guacamole.RawAudioRecorder. This object\r\n * describes the number of bytes per sample, the number of channels, and the\r\n * overall sample rate.\r\n *\r\n * @constructor\r\n * @param {Guacamole.RawAudioFormat|Object} template\r\n *     The object whose properties should be copied into the corresponding\r\n *     properties of the new Guacamole.RawAudioFormat.\r\n */\r\nGuacamole.RawAudioFormat = function RawAudioFormat(template) {\r\n\r\n    /**\r\n     * The number of bytes in each sample of audio data. This value is\r\n     * independent of the number of channels.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.bytesPerSample = template.bytesPerSample;\r\n\r\n    /**\r\n     * The number of audio channels (ie: 1 for mono, 2 for stereo).\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.channels = template.channels;\r\n\r\n    /**\r\n     * The number of samples per second, per channel.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.rate = template.rate;\r\n\r\n};\r\n\r\n/**\r\n * Parses the given mimetype, returning a new Guacamole.RawAudioFormat\r\n * which describes the type of raw audio data represented by that mimetype. If\r\n * the mimetype is not a supported raw audio data mimetype, null is returned.\r\n *\r\n * @param {String} mimetype\r\n *     The audio mimetype to parse.\r\n *\r\n * @returns {Guacamole.RawAudioFormat}\r\n *     A new Guacamole.RawAudioFormat which describes the type of raw\r\n *     audio data represented by the given mimetype, or null if the given\r\n *     mimetype is not supported.\r\n */\r\nGuacamole.RawAudioFormat.parse = function parseFormat(mimetype) {\r\n\r\n    var bytesPerSample;\r\n\r\n    // Rate is absolutely required - if null is still present later, the\r\n    // mimetype must not be supported\r\n    var rate = null;\r\n\r\n    // Default for both \"audio/L8\" and \"audio/L16\" is one channel\r\n    var channels = 1;\r\n\r\n    // \"audio/L8\" has one byte per sample\r\n    if (mimetype.substring(0, 9) === 'audio/L8;') {\r\n        mimetype = mimetype.substring(9);\r\n        bytesPerSample = 1;\r\n    }\r\n\r\n    // \"audio/L16\" has two bytes per sample\r\n    else if (mimetype.substring(0, 10) === 'audio/L16;') {\r\n        mimetype = mimetype.substring(10);\r\n        bytesPerSample = 2;\r\n    }\r\n\r\n    // All other types are unsupported\r\n    else\r\n        return null;\r\n\r\n    // Parse all parameters\r\n    var parameters = mimetype.split(',');\r\n    for (var i = 0; i < parameters.length; i++) {\r\n\r\n        var parameter = parameters[i];\r\n\r\n        // All parameters must have an equals sign separating name from value\r\n        var equals = parameter.indexOf('=');\r\n        if (equals === -1)\r\n            return null;\r\n\r\n        // Parse name and value from parameter string\r\n        var name  = parameter.substring(0, equals);\r\n        var value = parameter.substring(equals+1);\r\n\r\n        // Handle each supported parameter\r\n        switch (name) {\r\n\r\n            // Number of audio channels\r\n            case 'channels':\r\n                channels = parseInt(value);\r\n                break;\r\n\r\n            // Sample rate\r\n            case 'rate':\r\n                rate = parseInt(value);\r\n                break;\r\n\r\n            // All other parameters are unsupported\r\n            default:\r\n                return null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // The rate parameter is required\r\n    if (rate === null)\r\n        return null;\r\n\r\n    // Return parsed format details\r\n    return new Guacamole.RawAudioFormat({\r\n        bytesPerSample : bytesPerSample,\r\n        channels       : channels,\r\n        rate           : rate\r\n    });\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A recording of a Guacamole session. Given a {@link Guacamole.Tunnel}, the\r\n * Guacamole.SessionRecording automatically handles incoming Guacamole\r\n * instructions, storing them for playback. Playback of the recording may be\r\n * controlled through function calls to the Guacamole.SessionRecording, even\r\n * while the recording has not yet finished being created or downloaded.\r\n *\r\n * @constructor\r\n * @param {Guacamole.Tunnel} tunnel\r\n *     The Guacamole.Tunnel from which the instructions of the recording should\r\n *     be read.\r\n */\r\nGuacamole.SessionRecording = function SessionRecording(tunnel) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.SessionRecording.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording}\r\n     */\r\n    var recording = this;\r\n\r\n    /**\r\n     * The minimum number of characters which must have been read between\r\n     * keyframes.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var KEYFRAME_CHAR_INTERVAL = 16384;\r\n\r\n    /**\r\n     * The minimum number of milliseconds which must elapse between keyframes.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var KEYFRAME_TIME_INTERVAL = 5000;\r\n\r\n    /**\r\n     * The maximum amount of time to spend in any particular seek operation\r\n     * before returning control to the main thread, in milliseconds. Seek\r\n     * operations exceeding this amount of time will proceed asynchronously.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var MAXIMUM_SEEK_TIME = 5;\r\n\r\n    /**\r\n     * All frames parsed from the provided tunnel.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording._Frame[]}\r\n     */\r\n    var frames = [];\r\n\r\n    /**\r\n     * All instructions which have been read since the last frame was added to\r\n     * the frames array.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording._Frame.Instruction[]}\r\n     */\r\n    var instructions = [];\r\n\r\n    /**\r\n     * The approximate number of characters which have been read from the\r\n     * provided tunnel since the last frame was flagged for use as a keyframe.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var charactersSinceLastKeyframe = 0;\r\n\r\n    /**\r\n     * The timestamp of the last frame which was flagged for use as a keyframe.\r\n     * If no timestamp has yet been flagged, this will be 0.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var lastKeyframeTimestamp = 0;\r\n\r\n    /**\r\n     * Tunnel which feeds arbitrary instructions to the client used by this\r\n     * Guacamole.SessionRecording for playback of the session recording.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording._PlaybackTunnel}\r\n     */\r\n    var playbackTunnel = new Guacamole.SessionRecording._PlaybackTunnel();\r\n\r\n    /**\r\n     * Guacamole.Client instance used for visible playback of the session\r\n     * recording.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.Client}\r\n     */\r\n    var playbackClient = new Guacamole.Client(playbackTunnel);\r\n\r\n    /**\r\n     * The current frame rendered within the playback client. If no frame is\r\n     * yet rendered, this will be -1.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var currentFrame = -1;\r\n\r\n    /**\r\n     * The timestamp of the frame when playback began, in milliseconds. If\r\n     * playback is not in progress, this will be null.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var startVideoTimestamp = null;\r\n\r\n    /**\r\n     * The real-world timestamp when playback began, in milliseconds. If\r\n     * playback is not in progress, this will be null.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var startRealTimestamp = null;\r\n\r\n    /**\r\n     * The ID of the timeout which will continue the in-progress seek\r\n     * operation. If no seek operation is in progress, the ID stored here (if\r\n     * any) will not be valid.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var seekTimeout = null;\r\n\r\n    // Start playback client connected\r\n    playbackClient.connect();\r\n\r\n    // Hide cursor unless mouse position is received\r\n    playbackClient.getDisplay().showCursor(false);\r\n\r\n    // Read instructions from provided tunnel, extracting each frame\r\n    tunnel.oninstruction = function handleInstruction(opcode, args) {\r\n\r\n        // Store opcode and arguments for received instruction\r\n        var instruction = new Guacamole.SessionRecording._Frame.Instruction(opcode, args.slice());\r\n        instructions.push(instruction);\r\n        charactersSinceLastKeyframe += instruction.getSize();\r\n\r\n        // Once a sync is received, store all instructions since the last\r\n        // frame as a new frame\r\n        if (opcode === 'sync') {\r\n\r\n            // Parse frame timestamp from sync instruction\r\n            var timestamp = parseInt(args[0]);\r\n\r\n            // Add a new frame containing the instructions read since last frame\r\n            var frame = new Guacamole.SessionRecording._Frame(timestamp, instructions);\r\n            frames.push(frame);\r\n\r\n            // This frame should eventually become a keyframe if enough data\r\n            // has been processed and enough recording time has elapsed, or if\r\n            // this is the absolute first frame\r\n            if (frames.length === 1 || (charactersSinceLastKeyframe >= KEYFRAME_CHAR_INTERVAL\r\n                    && timestamp - lastKeyframeTimestamp >= KEYFRAME_TIME_INTERVAL)) {\r\n                frame.keyframe = true;\r\n                lastKeyframeTimestamp = timestamp;\r\n                charactersSinceLastKeyframe = 0;\r\n            }\r\n\r\n            // Clear set of instructions in preparation for next frame\r\n            instructions = [];\r\n\r\n            // Notify that additional content is available\r\n            if (recording.onprogress)\r\n                recording.onprogress(recording.getDuration());\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Converts the given absolute timestamp to a timestamp which is relative\r\n     * to the first frame in the recording.\r\n     *\r\n     * @private\r\n     * @param {Number} timestamp\r\n     *     The timestamp to convert to a relative timestamp.\r\n     *\r\n     * @returns {Number}\r\n     *     The difference in milliseconds between the given timestamp and the\r\n     *     first frame of the recording, or zero if no frames yet exist.\r\n     */\r\n    var toRelativeTimestamp = function toRelativeTimestamp(timestamp) {\r\n\r\n        // If no frames yet exist, all timestamps are zero\r\n        if (frames.length === 0)\r\n            return 0;\r\n\r\n        // Calculate timestamp relative to first frame\r\n        return timestamp - frames[0].timestamp;\r\n\r\n    };\r\n\r\n    /**\r\n     * Searches through the given region of frames for the frame having a\r\n     * relative timestamp closest to the timestamp given.\r\n     *\r\n     * @private\r\n     * @param {Number} minIndex\r\n     *     The index of the first frame in the region (the frame having the\r\n     *     smallest timestamp).\r\n     *\r\n     * @param {Number} maxIndex\r\n     *     The index of the last frame in the region (the frame having the\r\n     *     largest timestamp).\r\n     *\r\n     * @param {Number} timestamp\r\n     *     The relative timestamp to search for, where zero denotes the first\r\n     *     frame in the recording.\r\n     *\r\n     * @returns {Number}\r\n     *     The index of the frame having a relative timestamp closest to the\r\n     *     given value.\r\n     */\r\n    var findFrame = function findFrame(minIndex, maxIndex, timestamp) {\r\n\r\n        // Do not search if the region contains only one element\r\n        if (minIndex === maxIndex)\r\n            return minIndex;\r\n\r\n        // Split search region into two halves\r\n        var midIndex = Math.floor((minIndex + maxIndex) / 2);\r\n        var midTimestamp = toRelativeTimestamp(frames[midIndex].timestamp);\r\n\r\n        // If timestamp is within lesser half, search again within that half\r\n        if (timestamp < midTimestamp && midIndex > minIndex)\r\n            return findFrame(minIndex, midIndex - 1, timestamp);\r\n\r\n        // If timestamp is within greater half, search again within that half\r\n        if (timestamp > midTimestamp && midIndex < maxIndex)\r\n            return findFrame(midIndex + 1, maxIndex, timestamp);\r\n\r\n        // Otherwise, we lucked out and found a frame with exactly the\r\n        // desired timestamp\r\n        return midIndex;\r\n\r\n    };\r\n\r\n    /**\r\n     * Replays the instructions associated with the given frame, sending those\r\n     * instructions to the playback client.\r\n     *\r\n     * @private\r\n     * @param {Number} index\r\n     *     The index of the frame within the frames array which should be\r\n     *     replayed.\r\n     */\r\n    var replayFrame = function replayFrame(index) {\r\n\r\n        var frame = frames[index];\r\n\r\n        // Replay all instructions within the retrieved frame\r\n        for (var i = 0; i < frame.instructions.length; i++) {\r\n            var instruction = frame.instructions[i];\r\n            playbackTunnel.receiveInstruction(instruction.opcode, instruction.args);\r\n        }\r\n\r\n        // Store client state if frame is flagged as a keyframe\r\n        if (frame.keyframe && !frame.clientState) {\r\n            playbackClient.exportState(function storeClientState(state) {\r\n                frame.clientState = state;\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Moves the playback position to the given frame, resetting the state of\r\n     * the playback client and replaying frames as necessary. The seek\r\n     * operation will proceed asynchronously. If a seek operation is already in\r\n     * progress, that seek is first aborted. The progress of the seek operation\r\n     * can be observed through the onseek handler and the provided callback.\r\n     *\r\n     * @private\r\n     * @param {Number} index\r\n     *     The index of the frame which should become the new playback\r\n     *     position.\r\n     *\r\n     * @param {function} callback\r\n     *     The callback to invoke once the seek operation has completed.\r\n     *\r\n     * @param {Number} [delay=0]\r\n     *     The number of milliseconds that the seek operation should be\r\n     *     scheduled to take.\r\n     */\r\n    var seekToFrame = function seekToFrame(index, callback, delay) {\r\n\r\n        // Abort any in-progress seek\r\n        abortSeek();\r\n\r\n        // Replay frames asynchronously\r\n        seekTimeout = window.setTimeout(function continueSeek() {\r\n\r\n            var startIndex;\r\n\r\n            // Back up until startIndex represents current state\r\n            for (startIndex = index; startIndex >= 0; startIndex--) {\r\n\r\n                var frame = frames[startIndex];\r\n\r\n                // If we've reached the current frame, startIndex represents\r\n                // current state by definition\r\n                if (startIndex === currentFrame)\r\n                    break;\r\n\r\n                // If frame has associated absolute state, make that frame the\r\n                // current state\r\n                if (frame.clientState) {\r\n                    playbackClient.importState(frame.clientState);\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            // Advance to frame index after current state\r\n            startIndex++;\r\n\r\n            var startTime = new Date().getTime();\r\n\r\n            // Replay any applicable incremental frames\r\n            for (; startIndex <= index; startIndex++) {\r\n\r\n                // Stop seeking if the operation is taking too long\r\n                var currentTime = new Date().getTime();\r\n                if (currentTime - startTime >= MAXIMUM_SEEK_TIME)\r\n                    break;\r\n\r\n                replayFrame(startIndex);\r\n            }\r\n\r\n            // Current frame is now at requested index\r\n            currentFrame = startIndex - 1;\r\n\r\n            // Notify of changes in position\r\n            if (recording.onseek)\r\n                recording.onseek(recording.getPosition());\r\n\r\n            // If the seek operation has not yet completed, schedule continuation\r\n            if (currentFrame !== index)\r\n                seekToFrame(index, callback,\r\n                    Math.max(delay - (new Date().getTime() - startTime), 0));\r\n\r\n            // Notify that the requested seek has completed\r\n            else\r\n                callback();\r\n\r\n        }, delay || 0);\r\n\r\n    };\r\n\r\n    /**\r\n     * Aborts the seek operation currently in progress, if any. If no seek\r\n     * operation is in progress, this function has no effect.\r\n     *\r\n     * @private\r\n     */\r\n    var abortSeek = function abortSeek() {\r\n        window.clearTimeout(seekTimeout);\r\n    };\r\n\r\n    /**\r\n     * Advances playback to the next frame in the frames array and schedules\r\n     * playback of the frame following that frame based on their associated\r\n     * timestamps. If no frames exist after the next frame, playback is paused.\r\n     *\r\n     * @private\r\n     */\r\n    var continuePlayback = function continuePlayback() {\r\n\r\n        // If frames remain after advancing, schedule next frame\r\n        if (currentFrame + 1 < frames.length) {\r\n\r\n            // Pull the upcoming frame\r\n            var next = frames[currentFrame + 1];\r\n\r\n            // Calculate the real timestamp corresponding to when the next\r\n            // frame begins\r\n            var nextRealTimestamp = next.timestamp - startVideoTimestamp + startRealTimestamp;\r\n\r\n            // Calculate the relative delay between the current time and\r\n            // the next frame start\r\n            var delay = Math.max(nextRealTimestamp - new Date().getTime(), 0);\r\n\r\n            // Advance to next frame after enough time has elapsed\r\n            seekToFrame(currentFrame + 1, function frameDelayElapsed() {\r\n                continuePlayback();\r\n            }, delay);\r\n\r\n        }\r\n\r\n        // Otherwise stop playback\r\n        else\r\n            recording.pause();\r\n\r\n    };\r\n\r\n    /**\r\n     * Fired when new frames have become available while the recording is\r\n     * being downloaded.\r\n     *\r\n     * @event\r\n     * @param {Number} duration\r\n     *     The new duration of the recording, in milliseconds.\r\n     */\r\n    this.onprogress = null;\r\n\r\n    /**\r\n     * Fired whenever playback of the recording has started.\r\n     *\r\n     * @event\r\n     */\r\n    this.onplay = null;\r\n\r\n    /**\r\n     * Fired whenever playback of the recording has been paused. This may\r\n     * happen when playback is explicitly paused with a call to pause(), or\r\n     * when playback is implicitly paused due to reaching the end of the\r\n     * recording.\r\n     *\r\n     * @event\r\n     */\r\n    this.onpause = null;\r\n\r\n    /**\r\n     * Fired whenever the playback position within the recording changes.\r\n     *\r\n     * @event\r\n     * @param {Number} position\r\n     *     The new position within the recording, in milliseconds.\r\n     */\r\n    this.onseek = null;\r\n\r\n    /**\r\n     * Connects the underlying tunnel, beginning download of the Guacamole\r\n     * session. Playback of the Guacamole session cannot occur until at least\r\n     * one frame worth of instructions has been downloaded.\r\n     *\r\n     * @param {String} data\r\n     *     The data to send to the tunnel when connecting.\r\n     */\r\n    this.connect = function connect(data) {\r\n        tunnel.connect(data);\r\n    };\r\n\r\n    /**\r\n     * Disconnects the underlying tunnel, stopping further download of the\r\n     * Guacamole session.\r\n     */\r\n    this.disconnect = function disconnect() {\r\n        tunnel.disconnect();\r\n    };\r\n\r\n    /**\r\n     * Returns the underlying display of the Guacamole.Client used by this\r\n     * Guacamole.SessionRecording for playback. The display contains an Element\r\n     * which can be added to the DOM, causing the display (and thus playback of\r\n     * the recording) to become visible.\r\n     *\r\n     * @return {Guacamole.Display}\r\n     *     The underlying display of the Guacamole.Client used by this\r\n     *     Guacamole.SessionRecording for playback.\r\n     */\r\n    this.getDisplay = function getDisplay() {\r\n        return playbackClient.getDisplay();\r\n    };\r\n\r\n    /**\r\n     * Returns whether playback is currently in progress.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if playback is currently in progress, false otherwise.\r\n     */\r\n    this.isPlaying = function isPlaying() {\r\n        return !!startVideoTimestamp;\r\n    };\r\n\r\n    /**\r\n     * Returns the current playback position within the recording, in\r\n     * milliseconds, where zero is the start of the recording.\r\n     *\r\n     * @returns {Number}\r\n     *     The current playback position within the recording, in milliseconds.\r\n     */\r\n    this.getPosition = function getPosition() {\r\n\r\n        // Position is simply zero if playback has not started at all\r\n        if (currentFrame === -1)\r\n            return 0;\r\n\r\n        // Return current position as a millisecond timestamp relative to the\r\n        // start of the recording\r\n        return toRelativeTimestamp(frames[currentFrame].timestamp);\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the duration of this recording, in milliseconds. If the\r\n     * recording is still being downloaded, this value will gradually increase.\r\n     *\r\n     * @returns {Number}\r\n     *     The duration of this recording, in milliseconds.\r\n     */\r\n    this.getDuration = function getDuration() {\r\n\r\n        // If no frames yet exist, duration is zero\r\n        if (frames.length === 0)\r\n            return 0;\r\n\r\n        // Recording duration is simply the timestamp of the last frame\r\n        return toRelativeTimestamp(frames[frames.length - 1].timestamp);\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins continuous playback of the recording downloaded thus far.\r\n     * Playback of the recording will continue until pause() is invoked or\r\n     * until no further frames exist. Playback is initially paused when a\r\n     * Guacamole.SessionRecording is created, and must be explicitly started\r\n     * through a call to this function. If playback is already in progress,\r\n     * this function has no effect. If a seek operation is in progress,\r\n     * playback resumes at the current position, and the seek is aborted as if\r\n     * completed.\r\n     */\r\n    this.play = function play() {\r\n\r\n        // If playback is not already in progress and frames remain,\r\n        // begin playback\r\n        if (!recording.isPlaying() && currentFrame + 1 < frames.length) {\r\n\r\n            // Notify that playback is starting\r\n            if (recording.onplay)\r\n                recording.onplay();\r\n\r\n            // Store timestamp of playback start for relative scheduling of\r\n            // future frames\r\n            var next = frames[currentFrame + 1];\r\n            startVideoTimestamp = next.timestamp;\r\n            startRealTimestamp = new Date().getTime();\r\n\r\n            // Begin playback of video\r\n            continuePlayback();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Seeks to the given position within the recording. If the recording is\r\n     * currently being played back, playback will continue after the seek is\r\n     * performed. If the recording is currently paused, playback will be\r\n     * paused after the seek is performed. If a seek operation is already in\r\n     * progress, that seek is first aborted. The seek operation will proceed\r\n     * asynchronously.\r\n     *\r\n     * @param {Number} position\r\n     *     The position within the recording to seek to, in milliseconds.\r\n     *\r\n     * @param {function} [callback]\r\n     *     The callback to invoke once the seek operation has completed.\r\n     */\r\n    this.seek = function seek(position, callback) {\r\n\r\n        // Do not seek if no frames exist\r\n        if (frames.length === 0)\r\n            return;\r\n\r\n        // Pause playback, preserving playback state\r\n        var originallyPlaying = recording.isPlaying();\r\n        recording.pause();\r\n\r\n        // Perform seek\r\n        seekToFrame(findFrame(0, frames.length - 1, position), function restorePlaybackState() {\r\n\r\n            // Restore playback state\r\n            if (originallyPlaying)\r\n                recording.play();\r\n\r\n            // Notify that seek has completed\r\n            if (callback)\r\n                callback();\r\n\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses playback of the recording, if playback is currently in progress.\r\n     * If playback is not in progress, this function has no effect. If a seek\r\n     * operation is in progress, the seek is aborted. Playback is initially\r\n     * paused when a Guacamole.SessionRecording is created, and must be\r\n     * explicitly started through a call to play().\r\n     */\r\n    this.pause = function pause() {\r\n\r\n        // Abort any in-progress seek / playback\r\n        abortSeek();\r\n\r\n        // Stop playback only if playback is in progress\r\n        if (recording.isPlaying()) {\r\n\r\n            // Notify that playback is stopping\r\n            if (recording.onpause)\r\n                recording.onpause();\r\n\r\n            // Playback is stopped\r\n            startVideoTimestamp = null;\r\n            startRealTimestamp = null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * A single frame of Guacamole session data. Each frame is made up of the set\r\n * of instructions used to generate that frame, and the timestamp as dictated\r\n * by the \"sync\" instruction terminating the frame. Optionally, a frame may\r\n * also be associated with a snapshot of Guacamole client state, such that the\r\n * frame can be rendered without replaying all previous frames.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Number} timestamp\r\n *     The timestamp of this frame, as dictated by the \"sync\" instruction which\r\n *     terminates the frame.\r\n *\r\n * @param {Guacamole.SessionRecording._Frame.Instruction[]} instructions\r\n *     All instructions which are necessary to generate this frame relative to\r\n *     the previous frame in the Guacamole session.\r\n */\r\nGuacamole.SessionRecording._Frame = function _Frame(timestamp, instructions) {\r\n\r\n    /**\r\n     * Whether this frame should be used as a keyframe if possible. This value\r\n     * is purely advisory. The stored clientState must eventually be manually\r\n     * set for the frame to be used as a keyframe. By default, frames are not\r\n     * keyframes.\r\n     *\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    this.keyframe = false;\r\n\r\n    /**\r\n     * The timestamp of this frame, as dictated by the \"sync\" instruction which\r\n     * terminates the frame.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.timestamp = timestamp;\r\n\r\n    /**\r\n     * All instructions which are necessary to generate this frame relative to\r\n     * the previous frame in the Guacamole session.\r\n     *\r\n     * @type {Guacamole.SessionRecording._Frame.Instruction[]}\r\n     */\r\n    this.instructions = instructions;\r\n\r\n    /**\r\n     * A snapshot of client state after this frame was rendered, as returned by\r\n     * a call to exportState(). If no such snapshot has been taken, this will\r\n     * be null.\r\n     *\r\n     * @type {Object}\r\n     * @default null\r\n     */\r\n    this.clientState = null;\r\n\r\n};\r\n\r\n/**\r\n * A Guacamole protocol instruction. Each Guacamole protocol instruction is\r\n * made up of an opcode and set of arguments.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {String} opcode\r\n *     The opcode of this Guacamole instruction.\r\n *\r\n * @param {String[]} args\r\n *     All arguments associated with this Guacamole instruction.\r\n */\r\nGuacamole.SessionRecording._Frame.Instruction = function Instruction(opcode, args) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.SessionRecording._Frame.Instruction.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording._Frame.Instruction}\r\n     */\r\n    var instruction = this;\r\n\r\n    /**\r\n     * The opcode of this Guacamole instruction.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.opcode = opcode;\r\n\r\n    /**\r\n     * All arguments associated with this Guacamole instruction.\r\n     *\r\n     * @type {String[]}\r\n     */\r\n    this.args = args;\r\n\r\n    /**\r\n     * Returns the approximate number of characters which make up this\r\n     * instruction. This value is only approximate as it excludes the length\r\n     * prefixes and various delimiters used by the Guacamole protocol; only\r\n     * the content of the opcode and each argument is taken into account.\r\n     *\r\n     * @returns {Number}\r\n     *     The approximate size of this instruction, in characters.\r\n     */\r\n    this.getSize = function getSize() {\r\n\r\n        // Init with length of opcode\r\n        var size = instruction.opcode.length;\r\n\r\n        // Add length of all arguments\r\n        for (var i = 0; i < instruction.args.length; i++)\r\n            size += instruction.args[i].length;\r\n\r\n        return size;\r\n\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * A read-only Guacamole.Tunnel implementation which streams instructions\r\n * received through explicit calls to its receiveInstruction() function.\r\n *\r\n * @private\r\n * @constructor\r\n * @augments {Guacamole.Tunnel}\r\n */\r\nGuacamole.SessionRecording._PlaybackTunnel = function _PlaybackTunnel() {\r\n\r\n    /**\r\n     * Reference to this Guacamole.SessionRecording._PlaybackTunnel.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.SessionRecording._PlaybackTunnel}\r\n     */\r\n    var tunnel = this;\r\n\r\n    this.connect = function connect(data) {\r\n        // Do nothing\r\n    };\r\n\r\n    this.sendMessage = function sendMessage(elements) {\r\n        // Do nothing\r\n    };\r\n\r\n    this.disconnect = function disconnect() {\r\n        // Do nothing\r\n    };\r\n\r\n    /**\r\n     * Invokes this tunnel's oninstruction handler, notifying users of this\r\n     * tunnel (such as a Guacamole.Client instance) that an instruction has\r\n     * been received. If the oninstruction handler has not been set, this\r\n     * function has no effect.\r\n     *\r\n     * @param {String} opcode\r\n     *     The opcode of the Guacamole instruction.\r\n     *\r\n     * @param {String[]} args\r\n     *     All arguments associated with this Guacamole instruction.\r\n     */\r\n    this.receiveInstruction = function receiveInstruction(opcode, args) {\r\n        if (tunnel.oninstruction)\r\n            tunnel.oninstruction(opcode, args);\r\n    };\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A Guacamole status. Each Guacamole status consists of a status code, defined\r\n * by the protocol, and an optional human-readable message, usually only\r\n * included for debugging convenience.\r\n *\r\n * @constructor\r\n * @param {Number} code\r\n *     The Guacamole status code, as defined by Guacamole.Status.Code.\r\n *\r\n * @param {String} [message]\r\n *     An optional human-readable message.\r\n */\r\nGuacamole.Status = function(code, message) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.Status.\r\n     * @private\r\n     */\r\n    var guac_status = this;\r\n\r\n    /**\r\n     * The Guacamole status code.\r\n     * @see Guacamole.Status.Code\r\n     * @type {Number}\r\n     */\r\n    this.code = code;\r\n\r\n    /**\r\n     * An arbitrary human-readable message associated with this status, if any.\r\n     * The human-readable message is not required, and is generally provided\r\n     * for debugging purposes only. For user feedback, it is better to translate\r\n     * the Guacamole status code into a message.\r\n     * \r\n     * @type {String}\r\n     */\r\n    this.message = message;\r\n\r\n    /**\r\n     * Returns whether this status represents an error.\r\n     * @returns {Boolean} true if this status represents an error, false\r\n     *                    otherwise.\r\n     */\r\n    this.isError = function() {\r\n        return guac_status.code < 0 || guac_status.code > 0x00FF;\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Enumeration of all Guacamole status codes.\r\n */\r\nGuacamole.Status.Code = {\r\n\r\n    /**\r\n     * The operation succeeded.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SUCCESS\": 0x0000,\r\n\r\n    /**\r\n     * The requested operation is unsupported.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UNSUPPORTED\": 0x0100,\r\n\r\n    /**\r\n     * The operation could not be performed due to an internal failure.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SERVER_ERROR\": 0x0200,\r\n\r\n    /**\r\n     * The operation could not be performed as the server is busy.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SERVER_BUSY\": 0x0201,\r\n\r\n    /**\r\n     * The operation could not be performed because the upstream server is not\r\n     * responding.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UPSTREAM_TIMEOUT\": 0x0202,\r\n\r\n    /**\r\n     * The operation was unsuccessful due to an error or otherwise unexpected\r\n     * condition of the upstream server.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UPSTREAM_ERROR\": 0x0203,\r\n\r\n    /**\r\n     * The operation could not be performed as the requested resource does not\r\n     * exist.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"RESOURCE_NOT_FOUND\": 0x0204,\r\n\r\n    /**\r\n     * The operation could not be performed as the requested resource is\r\n     * already in use.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"RESOURCE_CONFLICT\": 0x0205,\r\n\r\n    /**\r\n     * The operation could not be performed as the requested resource is now\r\n     * closed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"RESOURCE_CLOSED\": 0x0206,\r\n\r\n    /**\r\n     * The operation could not be performed because the upstream server does\r\n     * not appear to exist.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UPSTREAM_NOT_FOUND\": 0x0207,\r\n\r\n    /**\r\n     * The operation could not be performed because the upstream server is not\r\n     * available to service the request.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UPSTREAM_UNAVAILABLE\": 0x0208,\r\n\r\n    /**\r\n     * The session within the upstream server has ended because it conflicted\r\n     * with another session.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SESSION_CONFLICT\": 0x0209,\r\n\r\n    /**\r\n     * The session within the upstream server has ended because it appeared to\r\n     * be inactive.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SESSION_TIMEOUT\": 0x020A,\r\n\r\n    /**\r\n     * The session within the upstream server has been forcibly terminated.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"SESSION_CLOSED\": 0x020B,\r\n\r\n    /**\r\n     * The operation could not be performed because bad parameters were given.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_BAD_REQUEST\": 0x0300,\r\n\r\n    /**\r\n     * Permission was denied to perform the operation, as the user is not yet\r\n     * authorized (not yet logged in, for example).\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_UNAUTHORIZED\": 0x0301,\r\n\r\n    /**\r\n     * Permission was denied to perform the operation, and this permission will\r\n     * not be granted even if the user is authorized.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_FORBIDDEN\": 0x0303,\r\n\r\n    /**\r\n     * The client took too long to respond.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_TIMEOUT\": 0x0308,\r\n\r\n    /**\r\n     * The client sent too much data.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_OVERRUN\": 0x030D,\r\n\r\n    /**\r\n     * The client sent data of an unsupported or unexpected type.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_BAD_TYPE\": 0x030F,\r\n\r\n    /**\r\n     * The operation failed because the current client is already using too\r\n     * many resources.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"CLIENT_TOO_MANY\": 0x031D\r\n\r\n};\r\n\r\n/**\r\n * Returns the Guacamole protocol status code which most closely\r\n * represents the given HTTP status code.\r\n *\r\n * @param {Number} status\r\n *     The HTTP status code to translate into a Guacamole protocol status\r\n *     code.\r\n *\r\n * @returns {Number}\r\n *     The Guacamole protocol status code which most closely represents the\r\n *     given HTTP status code.\r\n */\r\nGuacamole.Status.Code.fromHTTPCode = function fromHTTPCode(status) {\r\n\r\n    // Translate status codes with known equivalents\r\n    switch (status) {\r\n\r\n        // HTTP 400 - Bad request\r\n        case 400:\r\n            return Guacamole.Status.Code.CLIENT_BAD_REQUEST;\r\n\r\n        // HTTP 403 - Forbidden\r\n        case 403:\r\n            return Guacamole.Status.Code.CLIENT_FORBIDDEN;\r\n\r\n        // HTTP 404 - Resource not found\r\n        case 404:\r\n            return Guacamole.Status.Code.RESOURCE_NOT_FOUND;\r\n\r\n        // HTTP 429 - Too many requests\r\n        case 429:\r\n            return Guacamole.Status.Code.CLIENT_TOO_MANY;\r\n\r\n        // HTTP 503 - Server unavailable\r\n        case 503:\r\n            return Guacamole.Status.Code.SERVER_BUSY;\r\n\r\n    }\r\n\r\n    // Default all other codes to generic internal error\r\n    return Guacamole.Status.Code.SERVER_ERROR;\r\n\r\n};\r\n\r\n/**\r\n * Returns the Guacamole protocol status code which most closely\r\n * represents the given WebSocket status code.\r\n *\r\n * @param {Number} code\r\n *     The WebSocket status code to translate into a Guacamole protocol\r\n *     status code.\r\n *\r\n * @returns {Number}\r\n *     The Guacamole protocol status code which most closely represents the\r\n *     given WebSocket status code.\r\n */\r\nGuacamole.Status.Code.fromWebSocketCode = function fromWebSocketCode(code) {\r\n\r\n    // Translate status codes with known equivalents\r\n    switch (code) {\r\n\r\n        // Successful disconnect (no error)\r\n        case 1000: // Normal Closure\r\n            return Guacamole.Status.Code.SUCCESS;\r\n\r\n        // Codes which indicate the server is not reachable\r\n        case 1006: // Abnormal Closure (also signalled by JavaScript when the connection cannot be opened in the first place)\r\n        case 1015: // TLS Handshake\r\n            return Guacamole.Status.Code.UPSTREAM_NOT_FOUND;\r\n\r\n        // Codes which indicate the server is reachable but busy/unavailable\r\n        case 1001: // Going Away\r\n        case 1012: // Service Restart\r\n        case 1013: // Try Again Later\r\n        case 1014: // Bad Gateway\r\n            return Guacamole.Status.Code.UPSTREAM_UNAVAILABLE;\r\n\r\n    }\r\n\r\n    // Default all other codes to generic internal error\r\n    return Guacamole.Status.Code.SERVER_ERROR;\r\n\r\n};\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A reader which automatically handles the given input stream, returning\r\n * strictly text data. Note that this object will overwrite any installed event\r\n * handlers on the given Guacamole.InputStream.\r\n * \r\n * @constructor\r\n * @param {Guacamole.InputStream} stream The stream that data will be read\r\n *                                       from.\r\n */\r\nGuacamole.StringReader = function(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.InputStream.\r\n     * @private\r\n     */\r\n    var guac_reader = this;\r\n\r\n    /**\r\n     * Wrapped Guacamole.ArrayBufferReader.\r\n     * @private\r\n     * @type {Guacamole.ArrayBufferReader}\r\n     */\r\n    var array_reader = new Guacamole.ArrayBufferReader(stream);\r\n\r\n    /**\r\n     * The number of bytes remaining for the current codepoint.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var bytes_remaining = 0;\r\n\r\n    /**\r\n     * The current codepoint value, as calculated from bytes read so far.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var codepoint = 0;\r\n\r\n    /**\r\n     * Decodes the given UTF-8 data into a Unicode string. The data may end in\r\n     * the middle of a multibyte character.\r\n     * \r\n     * @private\r\n     * @param {ArrayBuffer} buffer Arbitrary UTF-8 data.\r\n     * @return {String} A decoded Unicode string.\r\n     */\r\n    function __decode_utf8(buffer) {\r\n\r\n        var text = \"\";\r\n\r\n        var bytes = new Uint8Array(buffer);\r\n        for (var i=0; i<bytes.length; i++) {\r\n\r\n            // Get current byte\r\n            var value = bytes[i];\r\n\r\n            // Start new codepoint if nothing yet read\r\n            if (bytes_remaining === 0) {\r\n\r\n                // 1 byte (0xxxxxxx)\r\n                if ((value | 0x7F) === 0x7F)\r\n                    text += String.fromCharCode(value);\r\n\r\n                // 2 byte (110xxxxx)\r\n                else if ((value | 0x1F) === 0xDF) {\r\n                    codepoint = value & 0x1F;\r\n                    bytes_remaining = 1;\r\n                }\r\n\r\n                // 3 byte (1110xxxx)\r\n                else if ((value | 0x0F )=== 0xEF) {\r\n                    codepoint = value & 0x0F;\r\n                    bytes_remaining = 2;\r\n                }\r\n\r\n                // 4 byte (11110xxx)\r\n                else if ((value | 0x07) === 0xF7) {\r\n                    codepoint = value & 0x07;\r\n                    bytes_remaining = 3;\r\n                }\r\n\r\n                // Invalid byte\r\n                else\r\n                    text += \"\\uFFFD\";\r\n\r\n            }\r\n\r\n            // Continue existing codepoint (10xxxxxx)\r\n            else if ((value | 0x3F) === 0xBF) {\r\n\r\n                codepoint = (codepoint << 6) | (value & 0x3F);\r\n                bytes_remaining--;\r\n\r\n                // Write codepoint if finished\r\n                if (bytes_remaining === 0)\r\n                    text += String.fromCharCode(codepoint);\r\n\r\n            }\r\n\r\n            // Invalid byte\r\n            else {\r\n                bytes_remaining = 0;\r\n                text += \"\\uFFFD\";\r\n            }\r\n\r\n        }\r\n\r\n        return text;\r\n\r\n    }\r\n\r\n    // Receive blobs as strings\r\n    array_reader.ondata = function(buffer) {\r\n\r\n        // Decode UTF-8\r\n        var text = __decode_utf8(buffer);\r\n\r\n        // Call handler, if present\r\n        if (guac_reader.ontext)\r\n            guac_reader.ontext(text);\r\n\r\n    };\r\n\r\n    // Simply call onend when end received\r\n    array_reader.onend = function() {\r\n        if (guac_reader.onend)\r\n            guac_reader.onend();\r\n    };\r\n\r\n    /**\r\n     * Fired once for every blob of text data received.\r\n     * \r\n     * @event\r\n     * @param {String} text The data packet received.\r\n     */\r\n    this.ontext = null;\r\n\r\n    /**\r\n     * Fired once this stream is finished and no further data will be written.\r\n     * @event\r\n     */\r\n    this.onend = null;\r\n\r\n};\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * A writer which automatically writes to the given output stream with text\r\n * data.\r\n * \r\n * @constructor\r\n * @param {Guacamole.OutputStream} stream The stream that data will be written\r\n *                                        to.\r\n */\r\nGuacamole.StringWriter = function(stream) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.StringWriter.\r\n     * @private\r\n     */\r\n    var guac_writer = this;\r\n\r\n    /**\r\n     * Wrapped Guacamole.ArrayBufferWriter.\r\n     * @private\r\n     * @type {Guacamole.ArrayBufferWriter}\r\n     */\r\n    var array_writer = new Guacamole.ArrayBufferWriter(stream);\r\n\r\n    /**\r\n     * Internal buffer for UTF-8 output.\r\n     * @private\r\n     */\r\n    var buffer = new Uint8Array(8192);\r\n\r\n    /**\r\n     * The number of bytes currently in the buffer.\r\n     * @private\r\n     */\r\n    var length = 0;\r\n\r\n    // Simply call onack for acknowledgements\r\n    array_writer.onack = function(status) {\r\n        if (guac_writer.onack)\r\n            guac_writer.onack(status);\r\n    };\r\n\r\n    /**\r\n     * Expands the size of the underlying buffer by the given number of bytes,\r\n     * updating the length appropriately.\r\n     * \r\n     * @private\r\n     * @param {Number} bytes The number of bytes to add to the underlying\r\n     *                       buffer.\r\n     */\r\n    function __expand(bytes) {\r\n\r\n        // Resize buffer if more space needed\r\n        if (length+bytes >= buffer.length) {\r\n            var new_buffer = new Uint8Array((length+bytes)*2);\r\n            new_buffer.set(buffer);\r\n            buffer = new_buffer;\r\n        }\r\n\r\n        length += bytes;\r\n\r\n    }\r\n\r\n    /**\r\n     * Appends a single Unicode character to the current buffer, resizing the\r\n     * buffer if necessary. The character will be encoded as UTF-8.\r\n     * \r\n     * @private\r\n     * @param {Number} codepoint The codepoint of the Unicode character to\r\n     *                           append.\r\n     */\r\n    function __append_utf8(codepoint) {\r\n\r\n        var mask;\r\n        var bytes;\r\n\r\n        // 1 byte\r\n        if (codepoint <= 0x7F) {\r\n            mask = 0x00;\r\n            bytes = 1;\r\n        }\r\n\r\n        // 2 byte\r\n        else if (codepoint <= 0x7FF) {\r\n            mask = 0xC0;\r\n            bytes = 2;\r\n        }\r\n\r\n        // 3 byte\r\n        else if (codepoint <= 0xFFFF) {\r\n            mask = 0xE0;\r\n            bytes = 3;\r\n        }\r\n\r\n        // 4 byte\r\n        else if (codepoint <= 0x1FFFFF) {\r\n            mask = 0xF0;\r\n            bytes = 4;\r\n        }\r\n\r\n        // If invalid codepoint, append replacement character\r\n        else {\r\n            __append_utf8(0xFFFD);\r\n            return;\r\n        }\r\n\r\n        // Offset buffer by size\r\n        __expand(bytes);\r\n        var offset = length - 1;\r\n\r\n        // Add trailing bytes, if any\r\n        for (var i=1; i<bytes; i++) {\r\n            buffer[offset--] = 0x80 | (codepoint & 0x3F);\r\n            codepoint >>= 6;\r\n        }\r\n\r\n        // Set initial byte\r\n        buffer[offset] = mask | codepoint;\r\n\r\n    }\r\n\r\n    /**\r\n     * Encodes the given string as UTF-8, returning an ArrayBuffer containing\r\n     * the resulting bytes.\r\n     * \r\n     * @private\r\n     * @param {String} text The string to encode as UTF-8.\r\n     * @return {Uint8Array} The encoded UTF-8 data.\r\n     */\r\n    function __encode_utf8(text) {\r\n\r\n        // Fill buffer with UTF-8\r\n        for (var i=0; i<text.length; i++) {\r\n            var codepoint = text.charCodeAt(i);\r\n            __append_utf8(codepoint);\r\n        }\r\n\r\n        // Flush buffer\r\n        if (length > 0) {\r\n            var out_buffer = buffer.subarray(0, length);\r\n            length = 0;\r\n            return out_buffer;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Sends the given text.\r\n     * \r\n     * @param {String} text The text to send.\r\n     */\r\n    this.sendText = function(text) {\r\n        if (text.length)\r\n            array_writer.sendData(__encode_utf8(text));\r\n    };\r\n\r\n    /**\r\n     * Signals that no further text will be sent, effectively closing the\r\n     * stream.\r\n     */\r\n    this.sendEnd = function() {\r\n        array_writer.sendEnd();\r\n    };\r\n\r\n    /**\r\n     * Fired for received data, if acknowledged by the server.\r\n     * @event\r\n     * @param {Guacamole.Status} status The status of the operation.\r\n     */\r\n    this.onack = null;\r\n\r\n};\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Core object providing abstract communication for Guacamole. This object\r\n * is a null implementation whose functions do nothing. Guacamole applications\r\n * should use {@link Guacamole.HTTPTunnel} instead, or implement their own tunnel based\r\n * on this one.\r\n * \r\n * @constructor\r\n * @see Guacamole.HTTPTunnel\r\n */\r\nGuacamole.Tunnel = function() {\r\n\r\n    /**\r\n     * Connect to the tunnel with the given optional data. This data is\r\n     * typically used for authentication. The format of data accepted is\r\n     * up to the tunnel implementation.\r\n     * \r\n     * @param {String} data The data to send to the tunnel when connecting.\r\n     */\r\n    this.connect = function(data) {};\r\n    \r\n    /**\r\n     * Disconnect from the tunnel.\r\n     */\r\n    this.disconnect = function() {};\r\n    \r\n    /**\r\n     * Send the given message through the tunnel to the service on the other\r\n     * side. All messages are guaranteed to be received in the order sent.\r\n     * \r\n     * @param {...*} elements\r\n     *     The elements of the message to send to the service on the other side\r\n     *     of the tunnel.\r\n     */\r\n    this.sendMessage = function(elements) {};\r\n\r\n    /**\r\n     * Changes the stored numeric state of this tunnel, firing the onstatechange\r\n     * event if the new state is different and a handler has been defined.\r\n     *\r\n     * @private\r\n     * @param {Number} state\r\n     *     The new state of this tunnel.\r\n     */\r\n    this.setState = function(state) {\r\n\r\n        // Notify only if state changes\r\n        if (state !== this.state) {\r\n            this.state = state;\r\n            if (this.onstatechange)\r\n                this.onstatechange(state);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Changes the stored UUID that uniquely identifies this tunnel, firing the\r\n     * onuuid event if a handler has been defined.\r\n     *\r\n     * @private\r\n     * @param {String} uuid\r\n     *     The new state of this tunnel.\r\n     */\r\n    this.setUUID = function setUUID(uuid) {\r\n        this.uuid = uuid;\r\n        if (this.onuuid)\r\n            this.onuuid(uuid);\r\n    };\r\n\r\n    /**\r\n     * Returns whether this tunnel is currently connected.\r\n     *\r\n     * @returns {Boolean}\r\n     *     true if this tunnel is currently connected, false otherwise.\r\n     */\r\n    this.isConnected = function isConnected() {\r\n        return this.state === Guacamole.Tunnel.State.OPEN\r\n            || this.state === Guacamole.Tunnel.State.UNSTABLE;\r\n    };\r\n\r\n    /**\r\n     * The current state of this tunnel.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.state = Guacamole.Tunnel.State.CONNECTING;\r\n\r\n    /**\r\n     * The maximum amount of time to wait for data to be received, in\r\n     * milliseconds. If data is not received within this amount of time,\r\n     * the tunnel is closed with an error. The default value is 15000.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    this.receiveTimeout = 15000;\r\n\r\n    /**\r\n     * The amount of time to wait for data to be received before considering\r\n     * the connection to be unstable, in milliseconds. If data is not received\r\n     * within this amount of time, the tunnel status is updated to warn that\r\n     * the connection appears unresponsive and may close. The default value is\r\n     * 1500.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    this.unstableThreshold = 1500;\r\n\r\n    /**\r\n     * The UUID uniquely identifying this tunnel. If not yet known, this will\r\n     * be null.\r\n     *\r\n     * @type {String}\r\n     */\r\n    this.uuid = null;\r\n\r\n    /**\r\n     * Fired when the UUID that uniquely identifies this tunnel is known.\r\n     *\r\n     * @event\r\n     * @param {String}\r\n     *     The UUID uniquely identifying this tunnel.\r\n     */\r\n    this.onuuid = null;\r\n\r\n    /**\r\n     * Fired whenever an error is encountered by the tunnel.\r\n     * \r\n     * @event\r\n     * @param {Guacamole.Status} status A status object which describes the\r\n     *                                  error.\r\n     */\r\n    this.onerror = null;\r\n\r\n    /**\r\n     * Fired whenever the state of the tunnel changes.\r\n     * \r\n     * @event\r\n     * @param {Number} state The new state of the client.\r\n     */\r\n    this.onstatechange = null;\r\n\r\n    /**\r\n     * Fired once for every complete Guacamole instruction received, in order.\r\n     * \r\n     * @event\r\n     * @param {String} opcode The Guacamole instruction opcode.\r\n     * @param {Array} parameters The parameters provided for the instruction,\r\n     *                           if any.\r\n     */\r\n    this.oninstruction = null;\r\n\r\n};\r\n\r\n/**\r\n * The Guacamole protocol instruction opcode reserved for arbitrary internal\r\n * use by tunnel implementations. The value of this opcode is guaranteed to be\r\n * the empty string (\"\"). Tunnel implementations may use this opcode for any\r\n * purpose. It is currently used by the HTTP tunnel to mark the end of the HTTP\r\n * response, and by the WebSocket tunnel to transmit the tunnel UUID and send\r\n * connection stability test pings/responses.\r\n *\r\n * @constant\r\n * @type {String}\r\n */\r\nGuacamole.Tunnel.INTERNAL_DATA_OPCODE = '';\r\n\r\n/**\r\n * All possible tunnel states.\r\n */\r\nGuacamole.Tunnel.State = {\r\n\r\n    /**\r\n     * A connection is in pending. It is not yet known whether connection was\r\n     * successful.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    \"CONNECTING\": 0,\r\n\r\n    /**\r\n     * Connection was successful, and data is being received.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    \"OPEN\": 1,\r\n\r\n    /**\r\n     * The connection is closed. Connection may not have been successful, the\r\n     * tunnel may have been explicitly closed by either side, or an error may\r\n     * have occurred.\r\n     * \r\n     * @type {Number}\r\n     */\r\n    \"CLOSED\": 2,\r\n\r\n    /**\r\n     * The connection is open, but communication through the tunnel appears to\r\n     * be disrupted, and the connection may close as a result.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    \"UNSTABLE\" : 3\r\n\r\n};\r\n\r\n/**\r\n * Guacamole Tunnel implemented over HTTP via XMLHttpRequest.\r\n * \r\n * @constructor\r\n * @augments Guacamole.Tunnel\r\n *\r\n * @param {String} tunnelURL\r\n *     The URL of the HTTP tunneling service.\r\n *\r\n * @param {Boolean} [crossDomain=false]\r\n *     Whether tunnel requests will be cross-domain, and thus must use CORS\r\n *     mechanisms and headers. By default, it is assumed that tunnel requests\r\n *     will be made to the same domain.\r\n *\r\n * @param {Object} [extraTunnelHeaders={}]\r\n *     Key value pairs containing the header names and values of any additional\r\n *     headers to be sent in tunnel requests. By default, no extra headers will\r\n *     be added.\r\n */\r\nGuacamole.HTTPTunnel = function(tunnelURL, crossDomain, extraTunnelHeaders) {\r\n\r\n    /**\r\n     * Reference to this HTTP tunnel.\r\n     * @private\r\n     */\r\n    var tunnel = this;\r\n\r\n    var TUNNEL_CONNECT = tunnelURL + \"?connect\";\r\n    var TUNNEL_READ    = tunnelURL + \"?read:\";\r\n    var TUNNEL_WRITE   = tunnelURL + \"?write:\";\r\n\r\n    var POLLING_ENABLED     = 1;\r\n    var POLLING_DISABLED    = 0;\r\n\r\n    // Default to polling - will be turned off automatically if not needed\r\n    var pollingMode = POLLING_ENABLED;\r\n\r\n    var sendingMessages = false;\r\n    var outputMessageBuffer = \"\";\r\n\r\n    // If requests are expected to be cross-domain, the cookie that the HTTP\r\n    // tunnel depends on will only be sent if withCredentials is true\r\n    var withCredentials = !!crossDomain;\r\n\r\n    /**\r\n     * The current receive timeout ID, if any.\r\n     * @private\r\n     */\r\n    var receive_timeout = null;\r\n\r\n    /**\r\n     * The current connection stability timeout ID, if any.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var unstableTimeout = null;\r\n\r\n    /**\r\n     * The current connection stability test ping interval ID, if any. This\r\n     * will only be set upon successful connection.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var pingInterval = null;\r\n\r\n    /**\r\n     * The number of milliseconds to wait between connection stability test\r\n     * pings.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var PING_FREQUENCY = 500;\r\n\r\n    /**\r\n     * Additional headers to be sent in tunnel requests. This dictionary can be\r\n     * populated with key/value header pairs to pass information such as authentication\r\n     * tokens, etc.\r\n     *\r\n     * @private\r\n     */\r\n    var extraHeaders = extraTunnelHeaders || {};\r\n\r\n    /**\r\n     * Adds the configured additional headers to the given request.\r\n     *\r\n     * @param {XMLHttpRequest} request\r\n     *     The request where the configured extra headers will be added.\r\n     *\r\n     * @param {Object} headers\r\n     *     The headers to be added to the request.\r\n     *\r\n     * @private\r\n     */\r\n    function addExtraHeaders(request, headers) {\r\n        for (var name in headers) {\r\n            request.setRequestHeader(name, headers[name]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initiates a timeout which, if data is not received, causes the tunnel\r\n     * to close with an error.\r\n     * \r\n     * @private\r\n     */\r\n    function reset_timeout() {\r\n\r\n        // Get rid of old timeouts (if any)\r\n        window.clearTimeout(receive_timeout);\r\n        window.clearTimeout(unstableTimeout);\r\n\r\n        // Clear unstable status\r\n        if (tunnel.state === Guacamole.Tunnel.State.UNSTABLE)\r\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\r\n\r\n        // Set new timeout for tracking overall connection timeout\r\n        receive_timeout = window.setTimeout(function () {\r\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_TIMEOUT, \"Server timeout.\"));\r\n        }, tunnel.receiveTimeout);\r\n\r\n        // Set new timeout for tracking suspected connection instability\r\n        unstableTimeout = window.setTimeout(function() {\r\n            tunnel.setState(Guacamole.Tunnel.State.UNSTABLE);\r\n        }, tunnel.unstableThreshold);\r\n\r\n    }\r\n\r\n    /**\r\n     * Closes this tunnel, signaling the given status and corresponding\r\n     * message, which will be sent to the onerror handler if the status is\r\n     * an error status.\r\n     * \r\n     * @private\r\n     * @param {Guacamole.Status} status The status causing the connection to\r\n     *                                  close;\r\n     */\r\n    function close_tunnel(status) {\r\n\r\n        // Get rid of old timeouts (if any)\r\n        window.clearTimeout(receive_timeout);\r\n        window.clearTimeout(unstableTimeout);\r\n\r\n        // Cease connection test pings\r\n        window.clearInterval(pingInterval);\r\n\r\n        // Ignore if already closed\r\n        if (tunnel.state === Guacamole.Tunnel.State.CLOSED)\r\n            return;\r\n\r\n        // If connection closed abnormally, signal error.\r\n        if (status.code !== Guacamole.Status.Code.SUCCESS && tunnel.onerror) {\r\n\r\n            // Ignore RESOURCE_NOT_FOUND if we've already connected, as that\r\n            // only signals end-of-stream for the HTTP tunnel.\r\n            if (tunnel.state === Guacamole.Tunnel.State.CONNECTING\r\n                    || status.code !== Guacamole.Status.Code.RESOURCE_NOT_FOUND)\r\n                tunnel.onerror(status);\r\n\r\n        }\r\n\r\n        // Reset output message buffer\r\n        sendingMessages = false;\r\n\r\n        // Mark as closed\r\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\r\n\r\n    }\r\n\r\n\r\n    this.sendMessage = function() {\r\n\r\n        // Do not attempt to send messages if not connected\r\n        if (!tunnel.isConnected())\r\n            return;\r\n\r\n        // Do not attempt to send empty messages\r\n        if (arguments.length === 0)\r\n            return;\r\n\r\n        /**\r\n         * Converts the given value to a length/string pair for use as an\r\n         * element in a Guacamole instruction.\r\n         * \r\n         * @private\r\n         * @param value The value to convert.\r\n         * @return {String} The converted value. \r\n         */\r\n        function getElement(value) {\r\n            var string = new String(value);\r\n            return string.length + \".\" + string; \r\n        }\r\n\r\n        // Initialized message with first element\r\n        var message = getElement(arguments[0]);\r\n\r\n        // Append remaining elements\r\n        for (var i=1; i<arguments.length; i++)\r\n            message += \",\" + getElement(arguments[i]);\r\n\r\n        // Final terminator\r\n        message += \";\";\r\n\r\n        // Add message to buffer\r\n        outputMessageBuffer += message;\r\n\r\n        // Send if not currently sending\r\n        if (!sendingMessages)\r\n            sendPendingMessages();\r\n\r\n    };\r\n\r\n    function sendPendingMessages() {\r\n\r\n        // Do not attempt to send messages if not connected\r\n        if (!tunnel.isConnected())\r\n            return;\r\n\r\n        if (outputMessageBuffer.length > 0) {\r\n\r\n            sendingMessages = true;\r\n\r\n            var message_xmlhttprequest = new XMLHttpRequest();\r\n            message_xmlhttprequest.open(\"POST\", TUNNEL_WRITE + tunnel.uuid);\r\n            message_xmlhttprequest.withCredentials = withCredentials;\r\n            addExtraHeaders(message_xmlhttprequest, extraHeaders);\r\n            message_xmlhttprequest.setRequestHeader(\"Content-type\", \"application/octet-stream\");\r\n\r\n            // Once response received, send next queued event.\r\n            message_xmlhttprequest.onreadystatechange = function() {\r\n                if (message_xmlhttprequest.readyState === 4) {\r\n\r\n                    reset_timeout();\r\n\r\n                    // If an error occurs during send, handle it\r\n                    if (message_xmlhttprequest.status !== 200)\r\n                        handleHTTPTunnelError(message_xmlhttprequest);\r\n\r\n                    // Otherwise, continue the send loop\r\n                    else\r\n                        sendPendingMessages();\r\n\r\n                }\r\n            };\r\n\r\n            message_xmlhttprequest.send(outputMessageBuffer);\r\n            outputMessageBuffer = \"\"; // Clear buffer\r\n\r\n        }\r\n        else\r\n            sendingMessages = false;\r\n\r\n    }\r\n\r\n    function handleHTTPTunnelError(xmlhttprequest) {\r\n\r\n        // Pull status code directly from headers provided by Guacamole\r\n        var code = parseInt(xmlhttprequest.getResponseHeader(\"Guacamole-Status-Code\"));\r\n        if (code) {\r\n            var message = xmlhttprequest.getResponseHeader(\"Guacamole-Error-Message\");\r\n            close_tunnel(new Guacamole.Status(code, message));\r\n        }\r\n\r\n        // Failing that, derive a Guacamole status code from the HTTP status\r\n        // code provided by the browser\r\n        else if (xmlhttprequest.status)\r\n            close_tunnel(new Guacamole.Status(\r\n                Guacamole.Status.Code.fromHTTPCode(xmlhttprequest.status),\r\n                    xmlhttprequest.statusText));\r\n\r\n        // Otherwise, assume server is unreachable\r\n        else\r\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_NOT_FOUND));\r\n\r\n    }\r\n\r\n    function handleResponse(xmlhttprequest) {\r\n\r\n        var interval = null;\r\n        var nextRequest = null;\r\n\r\n        var dataUpdateEvents = 0;\r\n\r\n        // The location of the last element's terminator\r\n        var elementEnd = -1;\r\n\r\n        // Where to start the next length search or the next element\r\n        var startIndex = 0;\r\n\r\n        // Parsed elements\r\n        var elements = new Array();\r\n\r\n        function parseResponse() {\r\n\r\n            // Do not handle responses if not connected\r\n            if (!tunnel.isConnected()) {\r\n                \r\n                // Clean up interval if polling\r\n                if (interval !== null)\r\n                    clearInterval(interval);\r\n                \r\n                return;\r\n            }\r\n\r\n            // Do not parse response yet if not ready\r\n            if (xmlhttprequest.readyState < 2) return;\r\n\r\n            // Attempt to read status\r\n            var status;\r\n            try { status = xmlhttprequest.status; }\r\n\r\n            // If status could not be read, assume successful.\r\n            catch (e) { status = 200; }\r\n\r\n            // Start next request as soon as possible IF request was successful\r\n            if (!nextRequest && status === 200)\r\n                nextRequest = makeRequest();\r\n\r\n            // Parse stream when data is received and when complete.\r\n            if (xmlhttprequest.readyState === 3 ||\r\n                xmlhttprequest.readyState === 4) {\r\n\r\n                reset_timeout();\r\n\r\n                // Also poll every 30ms (some browsers don't repeatedly call onreadystatechange for new data)\r\n                if (pollingMode === POLLING_ENABLED) {\r\n                    if (xmlhttprequest.readyState === 3 && !interval)\r\n                        interval = setInterval(parseResponse, 30);\r\n                    else if (xmlhttprequest.readyState === 4 && interval)\r\n                        clearInterval(interval);\r\n                }\r\n\r\n                // If canceled, stop transfer\r\n                if (xmlhttprequest.status === 0) {\r\n                    tunnel.disconnect();\r\n                    return;\r\n                }\r\n\r\n                // Halt on error during request\r\n                else if (xmlhttprequest.status !== 200) {\r\n                    handleHTTPTunnelError(xmlhttprequest);\r\n                    return;\r\n                }\r\n\r\n                // Attempt to read in-progress data\r\n                var current;\r\n                try { current = xmlhttprequest.responseText; }\r\n\r\n                // Do not attempt to parse if data could not be read\r\n                catch (e) { return; }\r\n\r\n                // While search is within currently received data\r\n                while (elementEnd < current.length) {\r\n\r\n                    // If we are waiting for element data\r\n                    if (elementEnd >= startIndex) {\r\n\r\n                        // We now have enough data for the element. Parse.\r\n                        var element = current.substring(startIndex, elementEnd);\r\n                        var terminator = current.substring(elementEnd, elementEnd+1);\r\n\r\n                        // Add element to array\r\n                        elements.push(element);\r\n\r\n                        // If last element, handle instruction\r\n                        if (terminator === \";\") {\r\n\r\n                            // Get opcode\r\n                            var opcode = elements.shift();\r\n\r\n                            // Call instruction handler.\r\n                            if (tunnel.oninstruction)\r\n                                tunnel.oninstruction(opcode, elements);\r\n\r\n                            // Clear elements\r\n                            elements.length = 0;\r\n\r\n                        }\r\n\r\n                        // Start searching for length at character after\r\n                        // element terminator\r\n                        startIndex = elementEnd + 1;\r\n\r\n                    }\r\n\r\n                    // Search for end of length\r\n                    var lengthEnd = current.indexOf(\".\", startIndex);\r\n                    if (lengthEnd !== -1) {\r\n\r\n                        // Parse length\r\n                        var length = parseInt(current.substring(elementEnd+1, lengthEnd));\r\n\r\n                        // If we're done parsing, handle the next response.\r\n                        if (length === 0) {\r\n\r\n                            // Clean up interval if polling\r\n                            if (interval)\r\n                                clearInterval(interval);\r\n                           \r\n                            // Clean up object\r\n                            xmlhttprequest.onreadystatechange = null;\r\n                            xmlhttprequest.abort();\r\n\r\n                            // Start handling next request\r\n                            if (nextRequest)\r\n                                handleResponse(nextRequest);\r\n\r\n                            // Done parsing\r\n                            break;\r\n\r\n                        }\r\n\r\n                        // Calculate start of element\r\n                        startIndex = lengthEnd + 1;\r\n\r\n                        // Calculate location of element terminator\r\n                        elementEnd = startIndex + length;\r\n\r\n                    }\r\n                    \r\n                    // If no period yet, continue search when more data\r\n                    // is received\r\n                    else {\r\n                        startIndex = current.length;\r\n                        break;\r\n                    }\r\n\r\n                } // end parse loop\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // If response polling enabled, attempt to detect if still\r\n        // necessary (via wrapping parseResponse())\r\n        if (pollingMode === POLLING_ENABLED) {\r\n            xmlhttprequest.onreadystatechange = function() {\r\n\r\n                // If we receive two or more readyState==3 events,\r\n                // there is no need to poll.\r\n                if (xmlhttprequest.readyState === 3) {\r\n                    dataUpdateEvents++;\r\n                    if (dataUpdateEvents >= 2) {\r\n                        pollingMode = POLLING_DISABLED;\r\n                        xmlhttprequest.onreadystatechange = parseResponse;\r\n                    }\r\n                }\r\n\r\n                parseResponse();\r\n            };\r\n        }\r\n\r\n        // Otherwise, just parse\r\n        else\r\n            xmlhttprequest.onreadystatechange = parseResponse;\r\n\r\n        parseResponse();\r\n\r\n    }\r\n\r\n    /**\r\n     * Arbitrary integer, unique for each tunnel read request.\r\n     * @private\r\n     */\r\n    var request_id = 0;\r\n\r\n    function makeRequest() {\r\n\r\n        // Make request, increment request ID\r\n        var xmlhttprequest = new XMLHttpRequest();\r\n        xmlhttprequest.open(\"GET\", TUNNEL_READ + tunnel.uuid + \":\" + (request_id++));\r\n        xmlhttprequest.withCredentials = withCredentials;\r\n        addExtraHeaders(xmlhttprequest, extraHeaders);\r\n        xmlhttprequest.send(null);\r\n\r\n        return xmlhttprequest;\r\n\r\n    }\r\n\r\n    this.connect = function(data) {\r\n\r\n        // Start waiting for connect\r\n        reset_timeout();\r\n\r\n        // Mark the tunnel as connecting\r\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\r\n\r\n        // Start tunnel and connect\r\n        var connect_xmlhttprequest = new XMLHttpRequest();\r\n        connect_xmlhttprequest.onreadystatechange = function() {\r\n\r\n            if (connect_xmlhttprequest.readyState !== 4)\r\n                return;\r\n\r\n            // If failure, throw error\r\n            if (connect_xmlhttprequest.status !== 200) {\r\n                handleHTTPTunnelError(connect_xmlhttprequest);\r\n                return;\r\n            }\r\n\r\n            reset_timeout();\r\n\r\n            // Get UUID from response\r\n            tunnel.setUUID(connect_xmlhttprequest.responseText);\r\n\r\n            // Mark as open\r\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\r\n\r\n            // Ping tunnel endpoint regularly to test connection stability\r\n            pingInterval = setInterval(function sendPing() {\r\n                tunnel.sendMessage(\"nop\");\r\n            }, PING_FREQUENCY);\r\n\r\n            // Start reading data\r\n            handleResponse(makeRequest());\r\n\r\n        };\r\n\r\n        connect_xmlhttprequest.open(\"POST\", TUNNEL_CONNECT, true);\r\n        connect_xmlhttprequest.withCredentials = withCredentials;\r\n        addExtraHeaders(connect_xmlhttprequest, extraHeaders);\r\n        connect_xmlhttprequest.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n        connect_xmlhttprequest.send(data);\r\n\r\n    };\r\n\r\n    this.disconnect = function() {\r\n        close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SUCCESS, \"Manually closed.\"));\r\n    };\r\n\r\n};\r\n\r\nGuacamole.HTTPTunnel.prototype = new Guacamole.Tunnel();\r\n\r\n/**\r\n * Guacamole Tunnel implemented over WebSocket via XMLHttpRequest.\r\n * \r\n * @constructor\r\n * @augments Guacamole.Tunnel\r\n * @param {String} tunnelURL The URL of the WebSocket tunneling service.\r\n */\r\nGuacamole.WebSocketTunnel = function(tunnelURL) {\r\n\r\n    /**\r\n     * Reference to this WebSocket tunnel.\r\n     * @private\r\n     */\r\n    var tunnel = this;\r\n\r\n    /**\r\n     * The WebSocket used by this tunnel.\r\n     * @private\r\n     */\r\n    var socket = null;\r\n\r\n    /**\r\n     * The current receive timeout ID, if any.\r\n     * @private\r\n     */\r\n    var receive_timeout = null;\r\n\r\n    /**\r\n     * The current connection stability timeout ID, if any.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var unstableTimeout = null;\r\n\r\n    /**\r\n     * The current connection stability test ping interval ID, if any. This\r\n     * will only be set upon successful connection.\r\n     *\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    var pingInterval = null;\r\n\r\n    /**\r\n     * The WebSocket protocol corresponding to the protocol used for the current\r\n     * location.\r\n     * @private\r\n     */\r\n    var ws_protocol = {\r\n        \"http:\":  \"ws:\",\r\n        \"https:\": \"wss:\"\r\n    };\r\n\r\n    /**\r\n     * The number of milliseconds to wait between connection stability test\r\n     * pings.\r\n     *\r\n     * @private\r\n     * @constant\r\n     * @type {Number}\r\n     */\r\n    var PING_FREQUENCY = 500;\r\n\r\n    // Transform current URL to WebSocket URL\r\n\r\n    // If not already a websocket URL\r\n    if (   tunnelURL.substring(0, 3) !== \"ws:\"\r\n        && tunnelURL.substring(0, 4) !== \"wss:\") {\r\n\r\n        var protocol = ws_protocol[window.location.protocol];\r\n\r\n        // If absolute URL, convert to absolute WS URL\r\n        if (tunnelURL.substring(0, 1) === \"/\")\r\n            tunnelURL =\r\n                protocol\r\n                + \"//\" + window.location.host\r\n                + tunnelURL;\r\n\r\n        // Otherwise, construct absolute from relative URL\r\n        else {\r\n\r\n            // Get path from pathname\r\n            var slash = window.location.pathname.lastIndexOf(\"/\");\r\n            var path  = window.location.pathname.substring(0, slash + 1);\r\n\r\n            // Construct absolute URL\r\n            tunnelURL =\r\n                protocol\r\n                + \"//\" + window.location.host\r\n                + path\r\n                + tunnelURL;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Initiates a timeout which, if data is not received, causes the tunnel\r\n     * to close with an error.\r\n     * \r\n     * @private\r\n     */\r\n    function reset_timeout() {\r\n\r\n        // Get rid of old timeouts (if any)\r\n        window.clearTimeout(receive_timeout);\r\n        window.clearTimeout(unstableTimeout);\r\n\r\n        // Clear unstable status\r\n        if (tunnel.state === Guacamole.Tunnel.State.UNSTABLE)\r\n            tunnel.setState(Guacamole.Tunnel.State.OPEN);\r\n\r\n        // Set new timeout for tracking overall connection timeout\r\n        receive_timeout = window.setTimeout(function () {\r\n            close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_TIMEOUT, \"Server timeout.\"));\r\n        }, tunnel.receiveTimeout);\r\n\r\n        // Set new timeout for tracking suspected connection instability\r\n        unstableTimeout = window.setTimeout(function() {\r\n            tunnel.setState(Guacamole.Tunnel.State.UNSTABLE);\r\n        }, tunnel.unstableThreshold);\r\n\r\n    }\r\n\r\n    /**\r\n     * Closes this tunnel, signaling the given status and corresponding\r\n     * message, which will be sent to the onerror handler if the status is\r\n     * an error status.\r\n     * \r\n     * @private\r\n     * @param {Guacamole.Status} status The status causing the connection to\r\n     *                                  close;\r\n     */\r\n    function close_tunnel(status) {\r\n\r\n        // Get rid of old timeouts (if any)\r\n        window.clearTimeout(receive_timeout);\r\n        window.clearTimeout(unstableTimeout);\r\n\r\n        // Cease connection test pings\r\n        window.clearInterval(pingInterval);\r\n\r\n        // Ignore if already closed\r\n        if (tunnel.state === Guacamole.Tunnel.State.CLOSED)\r\n            return;\r\n\r\n        // If connection closed abnormally, signal error.\r\n        if (status.code !== Guacamole.Status.Code.SUCCESS && tunnel.onerror)\r\n            tunnel.onerror(status);\r\n\r\n        // Mark as closed\r\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\r\n\r\n        socket.close();\r\n\r\n    }\r\n\r\n    this.sendMessage = function(elements) {\r\n\r\n        // Do not attempt to send messages if not connected\r\n        if (!tunnel.isConnected())\r\n            return;\r\n\r\n        // Do not attempt to send empty messages\r\n        if (arguments.length === 0)\r\n            return;\r\n\r\n        /**\r\n         * Converts the given value to a length/string pair for use as an\r\n         * element in a Guacamole instruction.\r\n         * \r\n         * @private\r\n         * @param value The value to convert.\r\n         * @return {String} The converted value. \r\n         */\r\n        function getElement(value) {\r\n            var string = new String(value);\r\n            return string.length + \".\" + string; \r\n        }\r\n\r\n        // Initialized message with first element\r\n        var message = getElement(arguments[0]);\r\n\r\n        // Append remaining elements\r\n        for (var i=1; i<arguments.length; i++)\r\n            message += \",\" + getElement(arguments[i]);\r\n\r\n        // Final terminator\r\n        message += \";\";\r\n\r\n        socket.send(message);\r\n\r\n    };\r\n\r\n    this.connect = function(data) {\r\n\r\n        reset_timeout();\r\n\r\n        // Mark the tunnel as connecting\r\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\r\n\r\n        // Connect socket\r\n        socket = new WebSocket(tunnelURL + \"?\" + data, \"guacamole\");\r\n\r\n        socket.onopen = function(event) {\r\n            reset_timeout();\r\n\r\n            // Ping tunnel endpoint regularly to test connection stability\r\n            pingInterval = setInterval(function sendPing() {\r\n                tunnel.sendMessage(Guacamole.Tunnel.INTERNAL_DATA_OPCODE,\r\n                    \"ping\", new Date().getTime());\r\n            }, PING_FREQUENCY);\r\n\r\n        };\r\n\r\n        socket.onclose = function(event) {\r\n\r\n            // Pull status code directly from closure reason provided by Guacamole\r\n            if (event.reason)\r\n                close_tunnel(new Guacamole.Status(parseInt(event.reason), event.reason));\r\n\r\n            // Failing that, derive a Guacamole status code from the WebSocket\r\n            // status code provided by the browser\r\n            else if (event.code)\r\n                close_tunnel(new Guacamole.Status(Guacamole.Status.Code.fromWebSocketCode(event.code)));\r\n\r\n            // Otherwise, assume server is unreachable\r\n            else\r\n                close_tunnel(new Guacamole.Status(Guacamole.Status.Code.UPSTREAM_NOT_FOUND));\r\n\r\n        };\r\n        \r\n        socket.onmessage = function(event) {\r\n\r\n            reset_timeout();\r\n\r\n            var message = event.data;\r\n            var startIndex = 0;\r\n            var elementEnd;\r\n\r\n            var elements = [];\r\n\r\n            do {\r\n\r\n                // Search for end of length\r\n                var lengthEnd = message.indexOf(\".\", startIndex);\r\n                if (lengthEnd !== -1) {\r\n\r\n                    // Parse length\r\n                    var length = parseInt(message.substring(elementEnd+1, lengthEnd));\r\n\r\n                    // Calculate start of element\r\n                    startIndex = lengthEnd + 1;\r\n\r\n                    // Calculate location of element terminator\r\n                    elementEnd = startIndex + length;\r\n\r\n                }\r\n                \r\n                // If no period, incomplete instruction.\r\n                else\r\n                    close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SERVER_ERROR, \"Incomplete instruction.\"));\r\n\r\n                // We now have enough data for the element. Parse.\r\n                var element = message.substring(startIndex, elementEnd);\r\n                var terminator = message.substring(elementEnd, elementEnd+1);\r\n\r\n                // Add element to array\r\n                elements.push(element);\r\n\r\n                // If last element, handle instruction\r\n                if (terminator === \";\") {\r\n\r\n                    // Get opcode\r\n                    var opcode = elements.shift();\r\n\r\n                    // Update state and UUID when first instruction received\r\n                    if (tunnel.uuid === null) {\r\n\r\n                        // Associate tunnel UUID if received\r\n                        if (opcode === Guacamole.Tunnel.INTERNAL_DATA_OPCODE)\r\n                            tunnel.setUUID(elements[0]);\r\n\r\n                        // Tunnel is now open and UUID is available\r\n                        tunnel.setState(Guacamole.Tunnel.State.OPEN);\r\n\r\n                    }\r\n\r\n                    // Call instruction handler.\r\n                    if (opcode !== Guacamole.Tunnel.INTERNAL_DATA_OPCODE && tunnel.oninstruction)\r\n                        tunnel.oninstruction(opcode, elements);\r\n\r\n                    // Clear elements\r\n                    elements.length = 0;\r\n\r\n                }\r\n\r\n                // Start searching for length at character after\r\n                // element terminator\r\n                startIndex = elementEnd + 1;\r\n\r\n            } while (startIndex < message.length);\r\n\r\n        };\r\n\r\n    };\r\n\r\n    this.disconnect = function() {\r\n        close_tunnel(new Guacamole.Status(Guacamole.Status.Code.SUCCESS, \"Manually closed.\"));\r\n    };\r\n\r\n};\r\n\r\nGuacamole.WebSocketTunnel.prototype = new Guacamole.Tunnel();\r\n\r\n/**\r\n * Guacamole Tunnel which cycles between all specified tunnels until\r\n * no tunnels are left. Another tunnel is used if an error occurs but\r\n * no instructions have been received. If an instruction has been\r\n * received, or no tunnels remain, the error is passed directly out\r\n * through the onerror handler (if defined).\r\n * \r\n * @constructor\r\n * @augments Guacamole.Tunnel\r\n * @param {...*} tunnelChain\r\n *     The tunnels to use, in order of priority.\r\n */\r\nGuacamole.ChainedTunnel = function(tunnelChain) {\r\n\r\n    /**\r\n     * Reference to this chained tunnel.\r\n     * @private\r\n     */\r\n    var chained_tunnel = this;\r\n\r\n    /**\r\n     * Data passed in via connect(), to be used for\r\n     * wrapped calls to other tunnels' connect() functions.\r\n     * @private\r\n     */\r\n    var connect_data;\r\n\r\n    /**\r\n     * Array of all tunnels passed to this ChainedTunnel through the\r\n     * constructor arguments.\r\n     * @private\r\n     */\r\n    var tunnels = [];\r\n\r\n    /**\r\n     * The tunnel committed via commit_tunnel(), if any, or null if no tunnel\r\n     * has yet been committed.\r\n     *\r\n     * @private\r\n     * @type {Guacamole.Tunnel}\r\n     */\r\n    var committedTunnel = null;\r\n\r\n    // Load all tunnels into array\r\n    for (var i=0; i<arguments.length; i++)\r\n        tunnels.push(arguments[i]);\r\n\r\n    /**\r\n     * Sets the current tunnel.\r\n     * \r\n     * @private\r\n     * @param {Guacamole.Tunnel} tunnel The tunnel to set as the current tunnel.\r\n     */\r\n    function attach(tunnel) {\r\n\r\n        // Set own functions to tunnel's functions\r\n        chained_tunnel.disconnect  = tunnel.disconnect;\r\n        chained_tunnel.sendMessage = tunnel.sendMessage;\r\n\r\n        /**\r\n         * Fails the currently-attached tunnel, attaching a new tunnel if\r\n         * possible.\r\n         *\r\n         * @private\r\n         * @param {Guacamole.Status} [status]\r\n         *     An object representing the failure that occured in the\r\n         *     currently-attached tunnel, if known.\r\n         *\r\n         * @return {Guacamole.Tunnel}\r\n         *     The next tunnel, or null if there are no more tunnels to try or\r\n         *     if no more tunnels should be tried.\r\n         */\r\n        var failTunnel = function failTunnel(status) {\r\n\r\n            // Do not attempt to continue using next tunnel on server timeout\r\n            if (status && status.code === Guacamole.Status.Code.UPSTREAM_TIMEOUT) {\r\n                tunnels = [];\r\n                return null;\r\n            }\r\n\r\n            // Get next tunnel\r\n            var next_tunnel = tunnels.shift();\r\n\r\n            // If there IS a next tunnel, try using it.\r\n            if (next_tunnel) {\r\n                tunnel.onerror = null;\r\n                tunnel.oninstruction = null;\r\n                tunnel.onstatechange = null;\r\n                attach(next_tunnel);\r\n            }\r\n\r\n            return next_tunnel;\r\n\r\n        };\r\n\r\n        /**\r\n         * Use the current tunnel from this point forward. Do not try any more\r\n         * tunnels, even if the current tunnel fails.\r\n         * \r\n         * @private\r\n         */\r\n        function commit_tunnel() {\r\n\r\n            tunnel.onstatechange = chained_tunnel.onstatechange;\r\n            tunnel.oninstruction = chained_tunnel.oninstruction;\r\n            tunnel.onerror = chained_tunnel.onerror;\r\n            tunnel.onuuid = chained_tunnel.onuuid;\r\n\r\n            // Assign UUID if already known\r\n            if (tunnel.uuid)\r\n                chained_tunnel.setUUID(tunnel.uuid);\r\n\r\n            committedTunnel = tunnel;\r\n\r\n        }\r\n\r\n        // Wrap own onstatechange within current tunnel\r\n        tunnel.onstatechange = function(state) {\r\n\r\n            switch (state) {\r\n\r\n                // If open, use this tunnel from this point forward.\r\n                case Guacamole.Tunnel.State.OPEN:\r\n                    commit_tunnel();\r\n                    if (chained_tunnel.onstatechange)\r\n                        chained_tunnel.onstatechange(state);\r\n                    break;\r\n\r\n                // If closed, mark failure, attempt next tunnel\r\n                case Guacamole.Tunnel.State.CLOSED:\r\n                    if (!failTunnel() && chained_tunnel.onstatechange)\r\n                        chained_tunnel.onstatechange(state);\r\n                    break;\r\n                \r\n            }\r\n\r\n        };\r\n\r\n        // Wrap own oninstruction within current tunnel\r\n        tunnel.oninstruction = function(opcode, elements) {\r\n\r\n            // Accept current tunnel\r\n            commit_tunnel();\r\n\r\n            // Invoke handler\r\n            if (chained_tunnel.oninstruction)\r\n                chained_tunnel.oninstruction(opcode, elements);\r\n\r\n        };\r\n\r\n        // Attach next tunnel on error\r\n        tunnel.onerror = function(status) {\r\n\r\n            // Mark failure, attempt next tunnel\r\n            if (!failTunnel(status) && chained_tunnel.onerror)\r\n                chained_tunnel.onerror(status);\r\n\r\n        };\r\n\r\n        // Attempt connection\r\n        tunnel.connect(connect_data);\r\n        \r\n    }\r\n\r\n    this.connect = function(data) {\r\n       \r\n        // Remember connect data\r\n        connect_data = data;\r\n\r\n        // Get committed tunnel if exists or the first tunnel on the list\r\n        var next_tunnel = committedTunnel ? committedTunnel : tunnels.shift();\r\n\r\n        // Attach first tunnel\r\n        if (next_tunnel)\r\n            attach(next_tunnel);\r\n\r\n        // If there IS no first tunnel, error\r\n        else if (chained_tunnel.onerror)\r\n            chained_tunnel.onerror(Guacamole.Status.Code.SERVER_ERROR, \"No tunnels to try.\");\r\n\r\n    };\r\n    \r\n};\r\n\r\nGuacamole.ChainedTunnel.prototype = new Guacamole.Tunnel();\r\n\r\n/**\r\n * Guacamole Tunnel which replays a Guacamole protocol dump from a static file\r\n * received via HTTP. Instructions within the file are parsed and handled as\r\n * quickly as possible, while the file is being downloaded.\r\n *\r\n * @constructor\r\n * @augments Guacamole.Tunnel\r\n * @param {String} url\r\n *     The URL of a Guacamole protocol dump.\r\n *\r\n * @param {Boolean} [crossDomain=false]\r\n *     Whether tunnel requests will be cross-domain, and thus must use CORS\r\n *     mechanisms and headers. By default, it is assumed that tunnel requests\r\n *     will be made to the same domain.\r\n *\r\n * @param {Object} [extraTunnelHeaders={}]\r\n *     Key value pairs containing the header names and values of any additional\r\n *     headers to be sent in tunnel requests. By default, no extra headers will\r\n *     be added.\r\n */\r\nGuacamole.StaticHTTPTunnel = function StaticHTTPTunnel(url, crossDomain, extraTunnelHeaders) {\r\n\r\n    /**\r\n     * Reference to this Guacamole.StaticHTTPTunnel.\r\n     *\r\n     * @private\r\n     */\r\n    var tunnel = this;\r\n\r\n    /**\r\n     * The current, in-progress HTTP request. If no request is currently in\r\n     * progress, this will be null.\r\n     *\r\n     * @private\r\n     * @type {XMLHttpRequest}\r\n     */\r\n    var xhr = null;\r\n\r\n    /**\r\n     * Additional headers to be sent in tunnel requests. This dictionary can be\r\n     * populated with key/value header pairs to pass information such as authentication\r\n     * tokens, etc.\r\n     *\r\n     * @private\r\n     */\r\n    var extraHeaders = extraTunnelHeaders || {};\r\n\r\n    /**\r\n     * Adds the configured additional headers to the given request.\r\n     *\r\n     * @param {XMLHttpRequest} request\r\n     *     The request where the configured extra headers will be added.\r\n     *\r\n     * @param {Object} headers\r\n     *     The headers to be added to the request.\r\n     *\r\n     * @private\r\n     */\r\n    function addExtraHeaders(request, headers) {\r\n        for (var name in headers) {\r\n            request.setRequestHeader(name, headers[name]);\r\n        }\r\n    }\r\n\r\n    this.sendMessage = function sendMessage(elements) {\r\n        // Do nothing\r\n    };\r\n\r\n    this.connect = function connect(data) {\r\n\r\n        // Ensure any existing connection is killed\r\n        tunnel.disconnect();\r\n\r\n        // Connection is now starting\r\n        tunnel.setState(Guacamole.Tunnel.State.CONNECTING);\r\n\r\n        // Start a new connection\r\n        xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.withCredentials = !!crossDomain;\r\n        addExtraHeaders(xhr, extraHeaders);\r\n        xhr.responseType = 'text';\r\n        xhr.send(null);\r\n\r\n        var offset = 0;\r\n\r\n        // Create Guacamole protocol parser specifically for this connection\r\n        var parser = new Guacamole.Parser();\r\n\r\n        // Invoke tunnel's oninstruction handler for each parsed instruction\r\n        parser.oninstruction = function instructionReceived(opcode, args) {\r\n            if (tunnel.oninstruction)\r\n                tunnel.oninstruction(opcode, args);\r\n        };\r\n\r\n        // Continuously parse received data\r\n        xhr.onreadystatechange = function readyStateChanged() {\r\n\r\n            // Parse while data is being received\r\n            if (xhr.readyState === 3 || xhr.readyState === 4) {\r\n\r\n                // Connection is open\r\n                tunnel.setState(Guacamole.Tunnel.State.OPEN);\r\n\r\n                var buffer = xhr.responseText;\r\n                var length = buffer.length;\r\n\r\n                // Parse only the portion of data which is newly received\r\n                if (offset < length) {\r\n                    parser.receive(buffer.substring(offset));\r\n                    offset = length;\r\n                }\r\n\r\n            }\r\n\r\n            // Clean up and close when done\r\n            if (xhr.readyState === 4)\r\n                tunnel.disconnect();\r\n\r\n        };\r\n\r\n        // Reset state and close upon error\r\n        xhr.onerror = function httpError() {\r\n\r\n            // Fail if file could not be downloaded via HTTP\r\n            if (tunnel.onerror)\r\n                tunnel.onerror(new Guacamole.Status(\r\n                    Guacamole.Status.Code.fromHTTPCode(xhr.status), xhr.statusText));\r\n\r\n            tunnel.disconnect();\r\n        };\r\n\r\n    };\r\n\r\n    this.disconnect = function disconnect() {\r\n\r\n        // Abort and dispose of XHR if a request is in progress\r\n        if (xhr) {\r\n            xhr.abort();\r\n            xhr = null;\r\n        }\r\n\r\n        // Connection is now closed\r\n        tunnel.setState(Guacamole.Tunnel.State.CLOSED);\r\n\r\n    };\r\n\r\n};\r\n\r\nGuacamole.StaticHTTPTunnel.prototype = new Guacamole.Tunnel();\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * The unique ID of this version of the Guacamole JavaScript API. This ID will\r\n * be the version string of the guacamole-common-js Maven project, and can be\r\n * used in downstream applications as a sanity check that the proper version\r\n * of the APIs is being used (in case an older version is cached, for example).\r\n *\r\n * @type {String}\r\n */\r\nGuacamole.API_VERSION = \"1.3.0\";\r\n\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\nvar Guacamole = Guacamole || {};\r\n\r\n/**\r\n * Abstract video player which accepts, queues and plays back arbitrary video\r\n * data. It is up to implementations of this class to provide some means of\r\n * handling a provided Guacamole.InputStream and rendering the received data to\r\n * the provided Guacamole.Display.VisibleLayer. Data received along the\r\n * provided stream is to be played back immediately.\r\n *\r\n * @constructor\r\n */\r\nGuacamole.VideoPlayer = function VideoPlayer() {\r\n\r\n    /**\r\n     * Notifies this Guacamole.VideoPlayer that all video up to the current\r\n     * point in time has been given via the underlying stream, and that any\r\n     * difference in time between queued video data and the current time can be\r\n     * considered latency.\r\n     */\r\n    this.sync = function sync() {\r\n        // Default implementation - do nothing\r\n    };\r\n\r\n};\r\n\r\n/**\r\n * Determines whether the given mimetype is supported by any built-in\r\n * implementation of Guacamole.VideoPlayer, and thus will be properly handled\r\n * by Guacamole.VideoPlayer.getInstance().\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype to check.\r\n *\r\n * @returns {Boolean}\r\n *     true if the given mimetype is supported by any built-in\r\n *     Guacamole.VideoPlayer, false otherwise.\r\n */\r\nGuacamole.VideoPlayer.isSupportedType = function isSupportedType(mimetype) {\r\n\r\n    // There are currently no built-in video players (and therefore no\r\n    // supported types)\r\n    return false;\r\n\r\n};\r\n\r\n/**\r\n * Returns a list of all mimetypes supported by any built-in\r\n * Guacamole.VideoPlayer, in rough order of priority. Beware that only the core\r\n * mimetypes themselves will be listed. Any mimetype parameters, even required\r\n * ones, will not be included in the list.\r\n *\r\n * @returns {String[]}\r\n *     A list of all mimetypes supported by any built-in Guacamole.VideoPlayer,\r\n *     excluding any parameters.\r\n */\r\nGuacamole.VideoPlayer.getSupportedTypes = function getSupportedTypes() {\r\n\r\n    // There are currently no built-in video players (and therefore no\r\n    // supported types)\r\n    return [];\r\n\r\n};\r\n\r\n/**\r\n * Returns an instance of Guacamole.VideoPlayer providing support for the given\r\n * video format. If support for the given video format is not available, null\r\n * is returned.\r\n *\r\n * @param {Guacamole.InputStream} stream\r\n *     The Guacamole.InputStream to read video data from.\r\n *\r\n * @param {Guacamole.Display.VisibleLayer} layer\r\n *     The destination layer in which this Guacamole.VideoPlayer should play\r\n *     the received video data.\r\n *\r\n * @param {String} mimetype\r\n *     The mimetype of the video data in the provided stream.\r\n *\r\n * @return {Guacamole.VideoPlayer}\r\n *     A Guacamole.VideoPlayer instance supporting the given mimetype and\r\n *     reading from the given stream, or null if support for the given mimetype\r\n *     is absent.\r\n */\r\nGuacamole.VideoPlayer.getInstance = function getInstance(stream, layer, mimetype) {\r\n\r\n    // There are currently no built-in video players\r\n    return null;\r\n\r\n};\r\nmodule.exports = Guacamole;","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guacamole.vue?vue&type=style&index=0&id=4baf442b&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}